{
  "name": "ampersand",
  "displayName": "全般",
  "exported": 1597307127,
  "pages": [
    {
      "title": "イヤホン検討",
      "created": 1595486873,
      "updated": 1595486873,
      "id": "5f193297afb6b2001e3cb190",
      "lines": [
        "イヤホン検討",
        "　　要件",
        "　　　3万前後",
        "　　　ワイヤレス",
        "　　　ノイズキャンセリング",
        "　　候補(メーカー)",
        "　　　base",
        "　　　sony",
        "　　　apple",
        "　　そもそも必要か？",
        "　　　家 - 会社間の往復を前提にしている。",
        "　　　　秋口から自転車通勤になると使わない。",
        "　　　　来年がどうなるか不明",
        "　　　　-> 夏場だけ？",
        "　　　ならいらない。",
        "\t\t\t-> 音楽は家で聞く"
      ]
    },
    {
      "title": "家計簿",
      "created": 1595486910,
      "updated": 1595881681,
      "id": "5f1932baf341a9001e085b4e",
      "lines": [
        "家計簿",
        "　家からコーヒーを持ってきたらよいのでは？あとコップ",
        "table:家計簿",
        " 名前\t頻度\t金額\t合計\t備考",
        " クリーニング\t20\t130\t2600\t夏場のワイシャツを想定",
        " 交通費\t40\t168\t6720\t往復",
        " 昼飯\t20\t440\t8800\t",
        " 会社コーヒー\t20\t100\t2000\t",
        " 携帯\t1\t2500\t2500\t",
        " comp\t60\t650\t39000\t一日二食",
        " 家コーヒー\t30\t?\t\t",
        " 歯医者\t1/3\t13200\t4500\t3ヶ月に一回",
        " 散髪\t1/3\t5000\t1700\t3ヶ月に一回",
        " 合計\t\t\t66620\t27620(除くcomp)",
        "",
        "",
        "",
        "　　歯医者13200+交通費",
        " 　　歯医者5000⁺交通費"
      ]
    },
    {
      "title": "体調管理・運動・健康・体格維持 - 目次 -",
      "created": 1595488051,
      "updated": 1597109332,
      "id": "5f1937175a67f2002465f981",
      "lines": [
        "体調管理・運動・健康・体格維持 - 目次 -",
        "　[整腸]",
        "　[腹囲計測]",
        "　[最適な就寝環境]",
        "　お腹周り",
        "　　皮下脂肪",
        "　　　全身のあらゆる場所につく脂肪で、主にお尻や太ももといった下半身につきやすく上半身にはついてもあまり目立ちませんが、増えてくると体のラインがふっくらとして丸みを帯びるのが特徴です。",
        "　　　基本的には食べ過ぎや運動不足が原因で増えると考えられています。",
        "　　　消費カロリーより摂取カロリーが多いと脂肪が蓄積し、体をほとんど動かさないことでさらに脂肪がつきやすくなります。",
        "　　　指ではなく手のひら全体を使ってつまんだ時、脂肪を多くつまめるなら皮下脂肪",
        "　　　皮下脂肪がついている場合は、皮膚のすぐ下に脂肪がつくため、お腹の皮膚がたるんで下がったような形になることが多いです。",
        "　　内臓脂肪",
        "　　　お腹周りにある内臓の周辺につく脂肪",
        "　　　運動不足や高カロリーの食材を中心とした食生活、食べすぎ飲みすぎなど。",
        "　　　主に偏った食生活",
        "　　　内臓脂肪は燃焼しやすく、活動のためのエネルギーへすぐに転換される",
        "　　　脂肪を落とそうとダイエットや筋トレを始めると、まず落ちていくのは内臓脂肪です。",
        "　　　ほとんどつまめる厚みがなければ内臓脂肪",
        "　　　対して内臓脂肪がついている場合は、体内についている脂肪が外に向かって押し出すようにたまっていくため、お腹がふくらんでパンパンに張った見た目になります。",
        "　　ドローイン",
        "　　　ドローインは体幹トレーニングのひとつです。",
        "　　　内臓を包んでいる「お腹周りの筋肉」を体幹",
        "　　　　内腹斜筋（ないふくしゃきん）",
        "  　　 お腹の横、斜めにあり、外腹斜筋のさらに内側にある筋肉",
        "  　 腹横筋（ふくおうきん）",
        "  　　 内腹斜筋のさらに奥にあり、お腹の一番奥にある筋肉",
        "  　　横隔膜筋（おうかくまくきん）",
        "  　　 胸とお腹の間にあり、呼吸に関わる筋肉",
        "  　 多裂筋（たれつきん）",
        "  　　 背骨に沿って走る、腰から首まで伸びている筋肉",
        "  腹囲を毎日測る",
        "  腹回りを痩せる運動",
        "\t腰",
        "\tその他",
        "　[早朝に起きるための考察]",
        " [早朝に何をするか]",
        "\t\t[comp2食体制時の食費]",
        ""
      ]
    },
    {
      "title": "整腸",
      "created": 1595499786,
      "updated": 1595545817,
      "id": "5f196508a3b145001e7d929d",
      "lines": [
        "整腸",
        "　　なぜ必要か",
        "　　　腸内細菌間のバランスを崩すと脳をはじめ、心臓、関節など一見腸とは関わりがなさそうに見えるあらゆる部位の病気に発展する可能性を持っており、寿命にも大きな影響を及ぼす",
        "　　腸内フローラ",
        "　　　フローラは「花畑」を意味する",
        "　　　『腸内フローラ』を整えるには短くて2週間、長くて1年程かかると言われています。",
        "　　　本格的に「腸活」を始める前にまずは2週間ほど同じ菌を摂り続けて、自分に合った菌かどうか確かめてみる",
        "　　善玉菌",
        "　　　宿主の健康維持に貢献",
        "　　 乳酸菌",
        "   ビフィズス菌",
        "  　フェーカリス菌",
        "  　アシドフィルス菌",
        "　　悪玉菌",
        "　　　害を及ぼす",
        "　　プロバイオティクス",
        "　　　身体に良い善玉菌を含むもの",
        "　　　一番簡単にできることは、善玉菌が好むヨーグルトなど発酵食品とオリゴ糖、食物繊維を摂取することです。",
        "　　　便秘や下痢など便通の変化、便の臭い、肌の調子などがバロメーター",
        "　　プレバイオティクス",
        "\t\t\t善玉菌の栄養源となるもの　　　",
        "\t\t\t「食物繊維」と「オリゴ糖」",
        "\t\t\t食物繊維には水に溶ける「水溶性」と水に溶けない「不溶性」がある",
        "\t\t\t善玉菌の増殖に特に効果的なのは、「水溶性」の食物繊維です。",
        "　　シンバイオティクス",
        "　　　プロバイオティクスとプレバイオティクスの両方",
        "　　整腸剤",
        "　　　おなかの調子を整える薬です。『整腸薬』ともいいます。",
        "",
        "　整腸剤の選び方",
        "　　[https://www.fukuoka-tenjin-naishikyo.com/blogpage/2019/03/16/3287/ どの整腸剤を飲んだらよいのか　～おすすめの整腸剤 - 福岡天神内視鏡クリニックブログ]",
        "　　[https://www.cocokarafine.co.jp/oyakudachi/health/201304004.html 整腸剤を選ぶポイント＆おすすめ商品｜【ココカラクラブ】ドラッグストアのココカラファイン]",
        "",
        "新ビオフェルミンS",
        "強ミヤリサン錠",
        "ザ・ガード整腸錠α＋",
        "",
        "１．新ビオフェルミンS、強ミヤリサン、ザ・ガード、エビオス、わかもとは効能・効果に甲乙はつけがたく、むしろ相補い合って腸内フローラを整えることができます。面倒でなければ、併用療法が望ましいと思います。",
        "",
        "２．どの種類が良いかは3種間ほど試してみてください。自分にあった整腸剤が見つかったら、1日1回でいいのでずっと継続していくよう習慣にしてみてください。",
        "",
        "　結論",
        "　　整腸剤買って毎日飲んでみる",
        ""
      ]
    },
    {
      "title": "ロードバイクを経費で買える",
      "created": 1595558752,
      "updated": 1595558761,
      "id": "5f1a4b5659d656001ff4ffa3",
      "lines": [
        "ロードバイクを経費で買える",
        "個人事業主として開業届を出して、事業内容をUber Eatsのドライバーができるように記載しとけば、ロードバイクを経費で買える説、完全に正論すぎて何かのバグ技ではという気持ちになる",
        "[https://twitter.com/sakapun/status/1284330763450638342 sakapunさんはTwitterを使っています 「@Nkzn ウーバーイーツ配達員」 / Twitter]",
        "",
        ""
      ]
    },
    {
      "title": "英語を書く手順",
      "created": 1595558861,
      "updated": 1595558879,
      "id": "5f1a4bc9c802e50021c64a50",
      "lines": [
        "英語を書く手順",
        "僕が英語を書く手順は",
        "",
        "1. とにかく英語で書く",
        "2. Grammery先生に投げて、文法的に明らかにおかしいところは直す",
        "3. DeepLとgoogle翻訳に投げて、意図通りに訳されるかチェックする。おかしいところは直してみる",
        "4. 2-3を適宜繰り返す",
        "",
        "もうGrammeryとDeepLとgoogleがないと英語が書けない",
        "",
        "[https://twitter.com/kikumaco/status/1281055410951122952 kikumaco(8/8ビッグアップル)さんはTwitterを使っています 「僕が英語を書く手順は 1. とにかく英語で書く 2. Grammery先生に投げて、文法的に明らかにおかしいところは直す 3. DeepLとgoogle翻訳に投げて、意図通りに訳されるかチェックする。おかしいところは直してみる 4. 2-3を適宜繰り返す もうGrammeryとDeepLとgoogleがないと英語が書けない」 / Twitter]",
        ""
      ]
    },
    {
      "title": "職務経歴書やキャリアシートには失敗談を書く",
      "created": 1595558979,
      "updated": 1595558991,
      "id": "5f1a4c3e8ed03b0023005063",
      "lines": [
        "職務経歴書やキャリアシートには失敗談を書く",
        "転職で「職務経歴書やキャリアシートには成功結果を書く必要がある」と思い込んでる人が多いけど、盲点です。面接官的には「実績」とはプラスの事だけではなく、試行錯誤や失敗談も含みます。僕が講演やインタビューで話すのも「しくじり先生」的な失敗談ばかり。皆さん今日も元気に失敗しましょう。",
        "",
        "スレッドも読む",
        "[https://twitter.com/tairo/status/1276057350927872000 (1) 森山大朗/メルカリ→スマニュー🦄 ユニコーン転職日記さんはTwitterを使っています 「転職で「職務経歴書やキャリアシートには成功結果を書く必要がある」と思い込んでる人が多いけど、盲点です。面接官的には「実績」とはプラスの事だけではなく、試行錯誤や失敗談も含みます。僕が講演やインタビューで話すのも「しくじり先生」的な失敗談ばかり。皆さん今日も元気に失敗しましょう。」 / Twitter]",
        ""
      ]
    },
    {
      "title": "自分が何されて嬉しかったか相手に伝えるのが大事",
      "created": 1595559233,
      "updated": 1595559233,
      "id": "5f1a4d3f292d74001e582aab",
      "lines": [
        "自分が何されて嬉しかったか相手に伝えるのが大事",
        "「早速のご返信/ご対応ありがとうございます！」っていうと",
        "",
        "「あ、この人は早くすると喜ぶんだ」って認識してくれる。",
        "",
        "なので自分が何されて嬉しかったか相手に伝えるのが大事なんだと思う。エスパーじゃないんだから。仕事に限らず恋愛でも。知らんけど。"
      ]
    },
    {
      "title": "小泉進次郎構文は、他人にお願い事をするときにめちゃめちゃ効果を発揮する",
      "created": 1595559285,
      "updated": 1595559295,
      "id": "5f1a4d7374a2f9001ed201a1",
      "lines": [
        "小泉進次郎構文は、他人にお願い事をするときにめちゃめちゃ効果を発揮する",
        "ちなみに小泉進次郎構文は、他人にお願い事をするときにめちゃめちゃ効果を発揮するので一概に悪いとは言えない",
        "",
        "コピー機を貸してほしいときに、",
        "「コピー機を貸してください」と頼むと60%が許可したが、",
        "「コピーしたいのでコピー機を貸してください」と頼むと94%が許可してくれた、とどっかで聞いた",
        "",
        "[https://twitter.com/Iam__chibi_debu/status/1271808368156405762 ささしゅんさんはTwitterを使っています 「ちなみに小泉進次郎構文は、他人にお願い事をするときにめちゃめちゃ効果を発揮するので一概に悪いとは言えない コピー機を貸してほしいときに、 「コピー機を貸してください」と頼むと60%が許可したが、 「コピーしたいのでコピー機を貸してください」と頼むと94%が許可してくれた、とどっかで聞いた」 / Twitter]",
        ""
      ]
    },
    {
      "title": "蚊の毒素は43°C以上で中和される",
      "created": 1595559396,
      "updated": 1595559396,
      "id": "5f1a4ddc940a02001e8d7f22",
      "lines": [
        "蚊の毒素は43°C以上で中和される",
        "蚊が出てきた。蚊の毒素は43°C以上で中和されるらしく、刺されたところに熱い蒸しタオルをしばらくあてると腫れもかゆみもなくなる。やけどしない程度に時間を調整するのがポイント。屋外なら真夏の公園の鉄棒とか車体でもOK。ダニ刺されにも効きます。",
        ""
      ]
    },
    {
      "title": "信頼残高",
      "created": 1595559570,
      "updated": 1595559570,
      "id": "5f1a4e90ea3c72001eaa9e7f",
      "lines": [
        "信頼残高",
        "どんな仕事でも「信頼残高」は意識した方がいいよね。仕事における信頼は「約束と実行の繰り返し」で積み上がるものだから、どんなに小さな約束事でも全力でやり切るのが大事。頼まれ仕事であっても“作業”にするのではなく、相手の成果を見据えた“仕事”として取り組むことが自分の信頼残高に繋がるよ。",
        ""
      ]
    },
    {
      "title": "ジョージアは以下の理由で最近日本人の若者に支持されてる",
      "created": 1595559791,
      "updated": 1595559796,
      "id": "5f1a4f68a85ae1001e75debc",
      "lines": [
        "ジョージアは以下の理由で最近日本人の若者に支持されてる",
        "私の住んでるジョージアは以下の理由で最近日本人の若者に支持されてるけど",
        "",
        "ビザ1年不要",
        "１人当たりのGDP40万円（5万円で生活できる国）",
        "",
        "更にEUに近い「アルバニア」も物価水準が近い上、3ヶ月間は滞在できる",
        "",
        "ビーチも山もあり、ヨーロッパの秘境国とも言われてるので来月住もうか考え中（笑）",
        ""
      ]
    },
    {
      "title": "初取引の際「無礼は３回目で」「罵倒は１回目で」アウトと決めて",
      "created": 1595560391,
      "updated": 1595560400,
      "id": "5f1a51c0feddff001e01210d",
      "lines": [
        "初取引の際「無礼は３回目で」「罵倒は１回目で」アウトと決めて",
        "初取引の際「無礼は３回目で」「罵倒は１回目で」アウトと決めてから、判断に迷いがなくなった。",
        "　",
        "無礼な人は心底悪気がないので、あっという間に３回お手つきする。罵倒する人と付き合う必要はない。フィルタリングとして優れてるので、すべてのフリーランスにオススメ。",
        "[https://twitter.com/diceK_sawayama/status/1283059150491017216 澤山モッツァレラ＠編集者さんはTwitterを使っています 「初取引の際「無礼は３回目で」「罵倒は１回目で」アウトと決めてから、判断に迷いがなくなった。 　 無礼な人は心底悪気がないので、あっという間に３回お手つきする。罵倒する人と付き合う必要はない。フィルタリングとして優れてるので、すべてのフリーランスにオススメ。」 / Twitter]",
        ""
      ]
    },
    {
      "title": "見積もりの経験則",
      "created": 1595561152,
      "updated": 1595561152,
      "id": "5f1a54ba3d76c2001e5cfa7b",
      "lines": [
        "見積もりの経験則",
        "見積もりの経験則。",
        "",
        "ざっくり見積もりして→10倍開きがある見積をする",
        "",
        "条件足されて見積もりをする→5倍開きがある見積もりをする",
        "",
        "実施1週間前に見積もりをする→2倍開きがある見積もりをする",
        "",
        "開きをどう伝えるかは状況に応じて。最大値で言うか、開きがあるというか、2点見積もりで言うか。"
      ]
    },
    {
      "title": "腹囲計測",
      "created": 1595649628,
      "updated": 1597260049,
      "id": "5f1bae5a255d100021af9f3f",
      "lines": [
        "腹囲計測",
        "[https://gyazo.com/8a1ecf1f8d68a48d939484cf12629af2]",
        "",
        "",
        "table:腹囲",
        " 日付\t時間\t体重\tサイズ",
        " 7/25\t13:00\t\t86",
        " 7/26\t10:00\t\t83",
        " 7/27\t4:00\t70\t84",
        " 7/28\t4:00\t\t83",
        "\t7/29\t4:00\t\t83",
        "\t7/30\t4:00\t\t83",
        "\t8/2\t10:00\t\t83",
        "\t8/4\t4:00\t\t82.5",
        "\t8/11\t7:00\t65\t79",
        "\t8/13\t4:00\t76\t78",
        ""
      ]
    },
    {
      "title": "今後やる技術",
      "created": 1595663170,
      "updated": 1595759574,
      "id": "5f1be33f558dd200202e416a",
      "lines": [
        "今後やる技術",
        " 前提として3/31日以降のための仕事をする。",
        " つまり以下である。",
        " 　転職",
        " 　個人開発",
        " 　第3の選択肢",
        " 　\tyuiさんみたいなフリーで仕事を受注するやつ",
        "　　個別技術",
        "　　\tアルゴリズム",
        "　　\tセキュリティ",
        "",
        "",
        "　[転職先候補]",
        " [ゆめみios就職]",
        "",
        "",
        " 転職を前提として技術を磨く",
        " 　転職先の候補を探す",
        " 　各企業の要件を知る",
        " 　職務履歴書のアップデート",
        "　　アプリのアップデート",
        "　　react",
        "　　　github公開？",
        "　　　リファクタリング？",
        "　　swift",
        "　　　ゆめみ用にswiftアプリをつくる。",
        "　　github",
        "　　 アプリをつくると同時にここもちゃんとやっていかないといけない。",
        "",
        "",
        ""
      ]
    },
    {
      "title": "BASE",
      "created": 1595735033,
      "updated": 1595735041,
      "id": "5f1cfbe6b13f5e0020c71ee1",
      "lines": [
        "BASE",
        "[https://herp.careers/v1/base/0ik0Dz6_BzyN BASE_フロントエンドエンジニア - BASE株式会社]",
        "[https://gyazo.com/20bfde3e8fb87d85a11707e575189b81]",
        "",
        ""
      ]
    },
    {
      "title": "転職先候補",
      "created": 1595737954,
      "updated": 1595737954,
      "id": "5f1d075faea661002273c511",
      "lines": [
        "転職先候補",
        "　　転職先の会社を探す",
        "　　　候補",
        "　　　　qiitaオーガナイゼーションで多いやつ",
        "　　　　　[https://hrmos.co/pages/zozotech/jobs 株式会社ZOZOテクノロジーズ 求人一覧]",
        "　　　　　[https://hrmos.co/pages/yumemi/jobs 株式会社ゆめみ 求人一覧]",
        "　　　　　[- [https://www.a-tm.co.jp/recruit/infographics/ 数字で見るエイチーム | 株式会社エイチーム（Ateam）]] -> ruby",
        "　　　　　Works Human Intelligence -> spring?",
        "　　　　　[https://www.wantedly.com/companies/macloud 株式会社M&Aクラウドの会社情報 - Wantedly]",
        "　　　　　[https://www.topgate.co.jp/recruit/front.html フロントエンドエンジニア | 募集要項 | 株式会社トップゲート採用サイト]",
        "　　　　求人サイトから",
        "　　　　\t[https://www.wantedly.com/projects/472942 スタディプラス株式会社]",
        "　　　　\t[https://www.wantedly.com/projects/434890 株式会社スナックミー]",
        "　　　　\t[- [https://www.green-japan.com/job/108325?case=login エムスリーキャリア 株式会社]] -> ruby",
        "　　　　\t[https://www.green-japan.com/job/107807?case=login 株式会社 トップゲート]",
        "　　　　\t[https://www.green-japan.com/job/46727?case=login 株式会社 カカクコム]",
        "　　　　\t[https://www.green-japan.com/job/103929?case=login&lid=recommend_sidebar_a CRE 弁護士ドットコム 株式会社]",
        "　　　　\t[https://www.green-japan.com/job/94014?case=login&lid=recommend_sidebar_b 株式会社 SmartHR]",
        "　　　　\t[https://doda.jp/DodaFront/View/JobSearchDetail/j_jid__3004170908/ 株式会社ドワンゴ／自社教育サービス「N予備校」]",
        "　　　　\t[https://doda.jp/DodaFront/View/JobSearchDetail/j_jid__3004113196/ ヤフー株式会社]",
        "　　　　\t[https://doda.jp/DodaFront/View/JobSearchDetail/j_jid__3004075842/ チームラボ株式会社]",
        "　　　　\t[https://doda.jp/DodaFront/View/JobSearchDetail/j_jid__3004041925/ 合同会社DMM.com]",
        "　　　　他　",
        "　　　　　[https://memorandumrail.com/web-company-list/ 【自社開発】web系企業のおすすめ一覧！30社をジャンル別にまとめました | えんじにゃーブログ]",
        "　　　　　[BASE]",
        ""
      ]
    },
    {
      "title": "ゆめみの採用活動リンク",
      "created": 1595753192,
      "updated": 1595753192,
      "id": "5f1d42e38b4c67001e47f566",
      "lines": [
        "ゆめみの採用活動リンク",
        "",
        "　　[https://www.yumemi.co.jp/ ゆめみ | DX,SoE,UX/UI,アジャイル,DevOps,グロースハック]",
        "　　[https://hrmos.co/pages/yumemi/jobs/0000236 【京都】フロントエンドエンジニア | 株式会社ゆめみ]",
        "　　[https://note.com/raykataoka/n/n50c282bcb305 ゆめみは成長環境しか提供できません。｜Ray Kataoka｜note]",
        "　　[https://paper.dropbox.com/doc/FAQ-XIXes5pouM3qij3aIIvps 採用面接FAQ（新卒・中途共通） – Dropbox Paper]",
        "　　[https://www.yumemi.co.jp/figures/ 数字でみるゆめみ｜株式会社ゆめみ]",
        "　　[https://mail.google.com/mail/u/1/?tab=wm&ogbl#inbox 受信トレイ (167) - and0nagai.r@gmail.com - Gmail]",
        "  [https://paper.dropbox.com/doc/M3Kp4XmGMSbSnLOmmIQS2 カジュアル面談の流れ – Dropbox Paper]",
        "　　[https://www.youtube.com/watch?v=pPfa8l29wnU&feature=emb_title YouTube]",
        "　　[https://note.com/raykataoka/n/n5fcf80681677 不採用基準と究極の採用基準｜Ray Kataoka｜note]",
        "　　[https://note.com/raykataoka/n/n4351937c7125?magazine_key=mf05365ce291f ゆめみの中途採用プロセスを全て公開します｜Ray Kataoka｜note]",
        "　　[https://qiita.com/lovee/items/d76c68341ec3e7beb611 私が（iOS エンジニアの）採用でコードチェックする時何を見ているのか - Qiita]",
        "　　[https://www.vorkers.com/company.php?m_id=a0C1000000YqTOA ゆめみ 「社員クチコミ」 就職・転職の採用企業リサーチ OpenWork（旧:Vorkers）]",
        "  [https://paper.dropbox.com/published/town-meeting-UeuIXV61ZIzVPh7JwfbK4Qk 京都の実態ってどうよ？town meeting]",
        "",
        ""
      ]
    },
    {
      "title": "ゆめみios就職",
      "created": 1595753240,
      "updated": 1595753885,
      "id": "5f1d43033659ff003882d29e",
      "lines": [
        "ゆめみios就職",
        "　[https://qiita.com/lovee/items/d76c68341ec3e7beb611 私が（iOS エンジニアの）採用でコードチェックする時何を見ているのか - Qiita]",
        "　[http://youwht.ml/tag_dendou/Swift 【Swift】 Qiita殿堂入り記事]",
        ""
      ]
    },
    {
      "title": "Swift",
      "created": 1595885090,
      "updated": 1596796642,
      "id": "5f1f46203401d70021c65824",
      "lines": [
        "Swift",
        "[*** Swiftに関するものは[https://scrapbox.io/ampersand-swift]に記述すること]",
        "",
        " 爆速でswiftを理解してアプリをリリースする手順",
        " 　言語仕様を知る",
        " 　書籍で学ぶ",
        " 　　Swift実践入門",
        " 　　詳解 Swift",
        " 　フレームワークを知る",
        " 　　カウントアップアプリをつくる",
        " 　　todoアプリをつくる",
        " 　　状態管理を知る",
        " 　ゆめみのアプリを作り始める",
        "\t\t\tgithub、アーキテクチャ、可読性など上手くやる",
        "",
        "",
        "[swiftでアプリをつくるための調べ物記録]",
        "[https://scrapbox.io/ampersand-swift/search/page?q=%20%E3%83%97%E3%83%AD%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E3%82%92%E4%BD%9C%E3%81%A3%E3%81%9F%E3%82%89%E3%81%99%E3%82%8B%E3%81%93%E3%81%A8 プロジェクトを作ったらすること - ampersand-swift]",
        "[https://scrapbox.io/ampersand-swift/%E3%83%93%E3%83%AB%E3%83%89%E6%99%82%E3%81%AB%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%82%BF%E3%83%BC%E3%81%A8%E3%83%AA%E3%83%B3%E3%83%88%E3%82%92%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B ビルド時にフォーマッターとリントを実行する - ampersand-swift]",
        "",
        ""
      ]
    },
    {
      "title": "scrapbox自動バックアップ",
      "created": 1596241551,
      "updated": 1596242657,
      "id": "5f24b68d5b3a95001e4b1bb7",
      "lines": [
        "scrapbox自動バックアップ",
        "　やりたいこと",
        "　　scrapboxのbackupデータを毎日githubにバックアップする。",
        "",
        "　要件",
        "　　ログイン処理の必要なヘッドレスchromeを利用しない。",
        "",
        "　前提",
        "\t\t朝のスタートアップスクリプトに仕込む",
        " \tつまり電源を上げたときに走る",
        "",
        "　処理",
        "　\tchromeのダウンロード設定の確認など",
        "　\t　`chrome://settings/downloads`にアクセス",
        "　　　chromeのダウンロード設定を確認する。",
        "　　　\tダウンロード場所の取得",
        "　　　\tダウンロード前確認設定をfalseにする",
        "　　　　ダウンロード先フォルダのファイルの文字列を取得",
        "　　　　　あとで増えたフォルダがダウンロードしたファイルになる。",
        "\t scrapboxでのダウンロード",
        "　\t　scrapboxにアクセス\t",
        "　\t　ダウンロードする。",
        "　　chromeのダウンロード前確認設定をfalseからtrueに戻す",
        "　　downloadフォルダにあるバックアップファイルを所定の場所へ移す",
        "　　githubへ",
        ""
      ]
    },
    {
      "title": "swiftでアプリをつくるための調べ物記録",
      "created": 1596421127,
      "updated": 1596427049,
      "id": "5f2774052c063f0020831e3b",
      "lines": [
        "swiftでアプリをつくるための調べ物記録",
        "[*** やること]",
        "　TODOアプリを作ってみる。",
        "　そのために色々調べてみる",
        "　やってみる -> まとめるの順番だと結局まとめない。あとに残らないので逆にしてやってみる。",
        "",
        "[*** リンク]",
        " [https://developer.apple.com/tutorials/swiftui/creating-and-combining-views Creating and Combining Views — SwiftUI Tutorials | Apple Developer Documentation] /40分",
        "",
        " xcode立ち上げ",
        " single view app",
        " organatization ドメイン",
        "　File>New>File　CocoaTouchClass",
        "",
        " SwiftUIって何？",
        "  wiftUIとは、2019年6月にAppleが発表した新しい開発フレームワーク（アプリを作るための機能・枠組）で、Xcode11から使えるようになりました。",
        "  これまでの Storyboardよりもコードがシンプルで、画面作りもより簡単にできるようになりました。",
        "",
        " swiftUIをやる",
        "　いちおうゆめみ確認 -> 特に問題無し",
        "　まずは基本を抑える。公式チュートリアルから",
        ""
      ]
    },
    {
      "title": "粗大ごみ申込み完了のお知らせ",
      "created": 1596871333,
      "updated": 1596871333,
      "id": "5f2e52a12d7c73002419bc2a",
      "lines": [
        "粗大ごみ申込み完了のお知らせ",
        "[https://mail.google.com/mail/u/2/?tab=wm&ogbl#inbox/FMfcgxwJXLgzQfNGQDRlSZRgKxDClqjs 粗大ごみ申込み完了のお知らせ]",
        ""
      ]
    },
    {
      "title": "父の認知症の兆候",
      "created": 1597109112,
      "updated": 1597109112,
      "id": "5f31f37622e2de0020ef56ed",
      "lines": [
        "父の認知症の兆候",
        "　火曜日の２字以降に聞きたいことがあったら聴くぞ的なことは言われた",
        "　　こっちは追加の要望的なものはなく、細部の詰めでよかったので一応でんわしただけ。",
        "　１つ説明して１０説明した気になってる。",
        "　連絡が遅い",
        "　合意してないのに合意したと思いこんで話を勧めている",
        "　初歩的な技術の会話ができない。知識がなさすぎて",
        "　スケジュールが強引",
        "",
        "　脳卒中、若年性認知症、",
        "　認知症初期症状　妄想",
        "",
        "　人間ドック受けてもらう"
      ]
    },
    {
      "title": "Scrapboxの使い方",
      "created": 1561753530,
      "updated": 1561753530,
      "id": "5d1677ba8e45af0017b6c4d8",
      "lines": [
        "Scrapboxの使い方",
        "Scrapboxへようこそ。このページは自由に編集して活用できます。",
        "",
        "このプロジェクトにメンバーを招待しましょう",
        "\tMenu -> Settings から他の人を招待できるリンクを取得できます。",
        " Scrapboxでは同一ページを複数人でリアルタイムに共同編集できます。",
        "",
        "基本的な使い方を試してみよう",
        "\t行頭にスペースまたはタブを入れて段落を作ることができます。",
        " `[ ]` で囲むと[別ページ]への[リンク]になります。",
        " `#` のあとに書いた文字は #ハッシュタグ になります。動作はリンクと同じです。",
        " `[ ]` の中にGyazoなどの画像URLやYoutube/Vimeoの動画URLを書くと画像や動画を表示できます。",
        " \t例:",
        "  \t[https://gyazo.com/5f93e65a3b979ae5333aca4f32600611]",
        "\t個人のプロフィールを設定して自分のページを作りましょう（Menu -> Edit profile）。その後、",
        " \t`Ctrl+I`を入力、または `[自分のユーザー名.icon]` を書くとアイコンを埋め込めます。",
        "  自分のページだけでなく、あらゆるページをアイコン化できます。例: [Scrapboxの使い方.icon]",
        "\tすべての記法は、[/help-jp/記法]をご覧ください",
        "",
        "リンクの効果的な使い方",
        "\t[Scrapbox]は、[リンク]から[つながり]を作ることで、関連するものを見つけ出し、整理できるのが特長です。",
        " \t[読んだ本]、[人物]、[タスク]など[自由]にリンクやハッシュタグを作っていきましょう！",
        "",
        "ページをトップに固定する (ピン留め)",
        " 右上のメニューから`Pin at home`を選択すると、ページをリストの一番上に固定できます。",
        " [https://gyazo.com/c3a68ab8928396608ef24349051c9d71]",
        " `Pin at home`には様々な活用方法があります。",
        "  自己紹介やプロジェクトの目的を書く",
        "  最初に読んでほしいページを目立たせる",
        "  招待URLを公開し、共同編集者を広く募る",
        "  新規投稿用のテンプレートを置く",
        "",
        "詳しい使い方",
        "\t[/help-jp/]をご覧ください。",
        " 英語版は[/help/]にあります。",
        "",
        "質問がある場合",
        "\t[お問い合わせ https://scrapbox.io/contact] からどうぞ。ご要望は[/forum-jp]でも受け付けています。",
        "",
        "使い方のサンプルが見たい",
        "\t[/help-jp/サンプル]を複数掲載しています",
        "",
        "企業でご利用の方へ",
        "\tNota社の社内利用の実例が[/nota-private-sample]にあります",
        " [企業の利用事例を掲載しています https://scrapbox.io/business]",
        "　[Scrapboxの企業での使い道 https://scrapbox.io/business/how-it-works]"
      ]
    },
    {
      "title": "雑多ひとまとめ",
      "created": 1561753542,
      "updated": 1597109314,
      "id": "5d1677c42c31990017e52edf",
      "lines": [
        "雑多ひとまとめ",
        "目次に乗せる必要がない情報をまとめていくページ",
        "",
        "",
        " [過去勤務先電話番号]",
        "　[賃貸不具合]",
        " [水稲]",
        "　[tooth]",
        "　[東京ですること]",
        " [ubereats]",
        " [GIFの取得とscrapboxへの貼り付け]",
        " [画像の取得とscrapboxへの貼り付け]",
        "　[発達障害対策]",
        "　[空想癖対策]",
        "　[モバイルバッテリー購入検討]",
        "　[ファッション]",
        "　[旅装]",
        "　[写真のとり方]",
        " [バックアップについて]",
        " [私生活]",
        "　[引っ越し]",
        "　[完全栄養食考察]",
        "　[人間ドック]",
        " [レンタル音楽考察]",
        " [母フラ対策]",
        " [日常運用]",
        ""
      ]
    },
    {
      "title": "urlや画像、テキスト、gifを簡単に取得する方法",
      "created": 1562060995,
      "updated": 1569588712,
      "id": "5d1b28c0351c2a001776f994",
      "lines": [
        "urlや画像、テキスト、gifを簡単に取得する方法",
        "",
        "",
        "　画像 ",
        "　 右クリックから画像のアドレスをコピーする",
        "　 あとはそのまま貼り付け",
        "　 DashNotesにメモする。",
        "  [https://www.marorika.com/wp-content/uploads/2019/05/gif_windows_screentogif_1.png]",
        "",
        ""
      ]
    },
    {
      "title": "書籍未読リスト",
      "created": 1562484036,
      "updated": 1563221154,
      "id": "5d219d4320955800170e8007",
      "lines": [
        "書籍未読リスト",
        "　コーディング Web アクセシビリティ",
        "　デザイニング Web アクセシビリティ",
        "　インクルーシブ HTML + CSS & JavaScript",
        "　Webを支える技術",
        "　マスタリング TCP/IP 入門",
        "　オブジェクト指向でなぜつくるのか",
        "　Linuxシステムプログラミング",
        "　Linuxプログラミングインターフェース",
        "　詳解UNIXプログラミング 第3版",
        "　実践JUnit",
        "　現場で役立つシステム設計の原則",
        "　インフラエンジニアの教科書1",
        "　Linuxのしくみ",
        "　この一冊で全部わかるWeb技術の基本 ",
        "　わかばちゃんと学ぶ Webサイト制作の基本",
        "　プログラマのためのDocker教科書 ",
        "　セキュリティのためのログ分析入門 サイバー攻撃の痕跡を見つける技術",
        "　知りたい タイポグラフィデザイン 知りたいデザイン",
        "　ブスのマーケティング戦略",
        "",
        "",
        ""
      ]
    },
    {
      "title": "発達障害対策",
      "created": 1562641340,
      "updated": 1575023311,
      "id": "5d2403b97d4bd70017635651",
      "lines": [
        "発達障害対策",
        "仕事の切替時など、集中力を必要としない雑務の場合、音楽をつけっぱなしにして思考を奪う。",
        ""
      ]
    },
    {
      "title": "scrapbox記法",
      "created": 1562840694,
      "updated": 1569588939,
      "id": "5d270e74199e570017cbbcab",
      "lines": [
        "scrapbox記法",
        "[* 参考]",
        "[その他の書き方 https://scrapbox.io/help-jp/%E3%81%9D%E3%81%AE%E4%BB%96%E3%81%AE%E6%9B%B8%E3%81%8D%E6%96%B9]",
        "[文字装飾記法 https://scrapbox.io/help-jp/%E6%96%87%E5%AD%97%E8%A3%85%E9%A3%BE%E8%A8%98%E6%B3%95]",
        "",
        "[* よく使うもの]",
        " `[* 太字]` ⇒ [* 太字]",
        " `[**** もっと太字]` => [**** もっと太字]",
        " `[- 打ち消し]` ⇒ [- 打ち消し]",
        "",
        "[* 外部リンク (一般のWebページへのリンク)]",
        " URLを書くとリンクになる",
        "  https://yahoo.co.jp",
        "\t`[URL タイトル]`",
        "\t [https://yahoo.com Yahoo!]",
        "",
        "",
        "引用",
        " > 行頭に`>`を書くと引用になります",
        "",
        "コード",
        " バッククオート`\\``で囲む",
        "  `function() {  return \\`hello\\` }`",
        "",
        "コードブロック",
        " code:hello.js",
        "  function () {",
        "    alert(document.location.href)",
        "    console.log(\"hello\")",
        "    // コメントも書けるぞ",
        "  }",
        "",
        "テーブル",
        " `table:テーブル名` の後、インデントしてtab区切り",
        " table:テーブルの例",
        "  abc\tdef",
        "  12345\t6789",
        "  長い長い文字列\t短い文字列",
        "",
        "コマンドライン",
        " 行頭に`$`もしくは`%`",
        " $ git reset --hard HEAD^",
        " % cp a.txt b.txt",
        ""
      ]
    },
    {
      "title": "ampersand",
      "created": 1562842489,
      "updated": 1562842496,
      "id": "5d2715757fa0710017440a1b",
      "lines": [
        "ampersand",
        "[https://gyazo.com/a8cb8fcd221c878fe784fd8639c5153f]",
        ""
      ]
    },
    {
      "title": "目次",
      "created": 1562843280,
      "updated": 1597109225,
      "id": "5d27188e73d28d0017aa2762",
      "lines": [
        "目次",
        "　[scrapbox記法]",
        " [読書 - 目次 -]",
        "　[京都 - 目次 -]",
        "　[開発 - 目次 -]",
        "　[体調管理・運動・健康・体格維持 - 目次 -]",
        "　[TWITTERメモ - 目次 -]",
        "　[仕事関連 -目次-]",
        " [雑多ひとまとめ]",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　[充足した生活を送るために]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " [雑多何でもメモ]",
        ""
      ]
    },
    {
      "title": "集中力、やる気、モチベーション",
      "created": 1562846337,
      "updated": 1562846337,
      "id": "5d2724785260bb0017d53ae6",
      "lines": [
        "集中力、やる気、モチベーション",
        "## やる気が出ない理由",
        "* 精神的、身体的に疲れている",
        "  * 運動",
        "  * 睡眠",
        "  * 食事",
        "* 悩み、考えごとなど他に気になることがある",
        "  * 書き出し",
        "* それをやりたくない気持ちが大きい（それ自体が嫌い）",
        "* 何かしらの身体的不満がある。",
        "  * 虫歯",
        "  * 頭痛",
        "  * 腰痛",
        "",
        "## ベイビーステップ",
        "この簡単な行動、小さな始めの一歩は、心理学においても「ベビーステップ」と呼ばれ、効果が実証されているんです。いきなり５０問、100問やろうと意気込んでも、たいてい続きません。１つ１つ、小さな行動を地道に続けることが、結果的にやる気を持続させることへ繋がります。",
        "",
        "## やる方法",
        "* 自分に報酬を与える",
        "* パターン化してしまう。",
        "* 全体像の把握",
        "  * 見出し、目次を把握する",
        "  * 章の見出し、キーワードを把握する",
        "* 細分化する",
        "  * スモールタスク ",
        "* シングルタスク",
        "* 量で区切る",
        "* 時間で区切る",
        "  * 終わらなくてもそこで区切る",
        "* 気になることを書き出す。",
        "* 音楽を聞く",
        "* 仮眠と散歩",
        "* タスクがこなされたことが明示的にわかる",
        "* ベイビーステップ",
        "",
        "## メモ",
        "* 褒める、感謝する"
      ]
    },
    {
      "title": "旅装",
      "created": 1562846436,
      "updated": 1583469286,
      "id": "5d2724df8da4a40017fe1e1c",
      "lines": [
        "旅装",
        "歯磨きセット",
        "キリリトールガム",
        "完全栄養食",
        "パック白米",
        "",
        "服",
        "  下着類",
        "    靴下",
        "    パンツ",
        "    シャツ  ",
        "  労働",
        "    ワイシャツ",
        "    スーツ上下",
        "    ネクタイ",
        "",
        "ガジェットなど",
        "　　fitbit",
        "  携帯",
        "  財布",
        "  イヤフォン",
        "  各種充電器",
        "  (ダンボー携帯充電器)",
        "",
        "PC",
        "  chromebook",
        "  ディスプレイ",
        "  ケーブル各種",
        "  (mac)",
        "",
        "便利品",
        "  スリッパ",
        "  アイマスク",
        "  本",
        "",
        "労働",
        "  ビジネスバック",
        "  財布(大)",
        "  名刺",
        "  宿情報",
        "  資料",
        "  PC",
        "  充電器",
        "",
        "実家",
        "  着替え",
        "  実家の鍵",
        "",
        "その他",
        "　　エアコン消す",
        ""
      ]
    },
    {
      "title": "住所",
      "created": 1562846559,
      "updated": 1562846559,
      "id": "5d27255cdca764001731a733",
      "lines": [
        "住所",
        "602-0826",
        "",
        "京都市 上京区 桝形通 寺町東入 三栄町 55",
        "",
        "今出川アイビーハウス305",
        "",
        "09077054767"
      ]
    },
    {
      "title": "賃貸不具合",
      "created": 1562846609,
      "updated": 1569589257,
      "id": "5d27258d080fdf0017383747",
      "lines": [
        "賃貸不具合",
        " シャワーの締まりが悪い",
        " シャワーの温度が安定しない",
        " シンクの下がガムテープで補強してある",
        " シンクの下がかびくさい",
        " エアコンが弱い",
        " エアコンがカビ臭い",
        " 風呂奥側の溝のカビ",
        " 床 若干でこぼこした感じがある",
        " 照明つかない 電池切れ",
        " 下駄箱 カビくさい",
        ""
      ]
    },
    {
      "title": "食事",
      "created": 1562846724,
      "updated": 1573987314,
      "id": "5d2725ffc23a0e0017d22693",
      "lines": [
        "食事",
        "",
        "　たんぱく質を中心にバランスよく  ",
        "　それ以外は腹が満たされればOK  ",
        "",
        "",
        "　予算",
        "　　月に21000円、一食350円",
        "",
        "　水",
        "　　水は一日2L  ",
        "　　睡眠6H前までに済ませておくと良い",
        "",
        "　求めるもの",
        "　　安い",
        "　　簡単につくれる",
        "　　美味しい",
        "　　栄養価が高い",
        "　　一日に必要な栄養が最低限摂取できること",
        "　 長持ち",
        "",
        "　逃げ道の考慮",
        "　 コンビニの冷凍食品",
        "　　パン",
        "　 バナナ",
        "　 ウイダーinゼリー",
        "　　カロリーメイト",
        "",
        "　メニュー",
        "　　カレー",
        "　 野菜炒め",
        "　 鍋",
        "　 お好み焼き",
        "　　ハム + 豆苗 + 卵",
        "　　ラーメン、豆苗、もやし、卵",
        "　　やきそば",
        "　　焼きうどん",
        "　　煮込みうどん",
        "  　 卵、麺、ネギ、＋α",
        "　　ジャーマンポテト",
        "  　 じゃがいも0.5、玉ねぎ0.5、ベーコン1.5枚、バター塩コショウ",
        "　　ソーセージ(ベーコン)、卵、",
        "　 卵、豆苗、肉系、納豆、白米",
        "　",
        "",
        "",
        "　栄養価 ",
        "　　一日2000キロカロリーを目標にする。  ",
        "　　ということは一食1000カロリー",
        "",
        "",
        "　炭水化物の1日の摂取基準量",
        "　　1日に必要な炭水化物の量（目標量）を表にしました。男女とも1日に摂取するエネルギーの50～65％に相当する量です。",
        "　　例えば一日に摂取するエネルギーが2,000kcalの場合、50～65％に相当するエネルギー量は、2,000kcal×0.5～0.65＝1,000～1,300kcal。  ",
        "　 炭水化物は1gが約4kcalですから、1,000～1,300kcal÷4＝250～325g。  ",
        "  つまり一日に250～325gの糖質を摂取することが望ましいということになります。  ",
        "",
        "　たんぱく質１日の摂取量",
        "　　60グラム",
        "　　　プロテインココア味1杯は15g",
        "　　 卵１つ5g",
        "　　納豆１パック8g",
        "　　　 豆腐1/3 5g",
        "　　　豚肩切り落とし 18.5/100g",
        "",
        " 脂質一日の摂取量",
        "　　50g",
        "　　豚バラ100g 脂質35g",
        "　 卵1個 5g",
        ""
      ]
    },
    {
      "title": "すること",
      "created": 1562846756,
      "updated": 1573984264,
      "id": "5d27262022a4300017bb62e7",
      "lines": [
        "すること",
        ""
      ]
    },
    {
      "title": "生活費",
      "created": 1562846782,
      "updated": 1562846782,
      "id": "5d27263cc23a0e0017d226dc",
      "lines": [
        "生活費",
        "# 支出想定",
        "",
        "所得金額とは、前年1月1日～12月31日のすべての収入から経費を差し引いた金額",
        "",
        "大項目|少項目|費用|備考",
        ":-|:-|:-|:-|",
        "税金|住民税|1.5万|1月1日～12月31日までの収入や所得控除などをもとに税額が計算される",
        "税金|国民健康保険|2万|協会けんぽと国民健康保険ほとんど値段変わらないかも。減免制度調べる",
        "税金|国民年金|0万|失業等による特例免除",
        "小計|--------------------|3.5万",
        "",
        "大項目|少項目|費用|備考",
        ":-|:-|:-|:-|",
        "インフラ|電気|0.5万|",
        "インフラ|ガス|0.25万|",
        "インフラ|通信|0.25万|",
        "小計|--------------------|1万",
        "",
        "大項目|少項目|費用|備考",
        ":-|:-|:-|:-|",
        "体|歯医者|0.5万|",
        "体|散髪|0.15万|",
        "小計|--------------------|0.65万",
        "",
        "大項目|少項目|費用|備考",
        ":-|:-|:-|:-|",
        "住宅費|住宅費|5.9万|",
        "食費|食費|2.1万|",
        "その他|開発関連|0.3万|",
        "消耗品|いろいろ|0.2万|",
        "小計|--------------------|8.5万",
        "",
        "大項目|少項目|費用|備考",
        ":-|:-|:-|:-|",
        "自由|自由|2万|",
        "",
        "合計16万 * 12 = 192万  ",
        "もしくは自由を3万円にして17 * 12 = 204万円",
        "",
        "１年持たせるには210万が必要とする。",
        "",
        "210 * 12 = 17.5万  ",
        "一月17.5万円稼げば、年間に必要な支出である210万に達する。  ",
        "まずは、17.5 + 2.5万予備として 20万円稼ぐことを目標にする。  ",
        "",
        "UEを3H/DAYとし、1000Y/Hとして、月24回仕事をするとする。  ",
        "その場合の月々の稼ぎは3 * 1000 * 24 = 720000Y/M  ",
        "月に9万円稼ぎたいのであれば、差額は18000Yである。つまり18H  ",
        "3H * 6回 もしくは 4H * 5回",
        "",
        "これにより月8.5万を稼いだ場合、年間100万円の収益になる。  ",
        "年間の支出は200万なので、 -100万で支出100万になる。   ",
        "よって400万 / 100万 = 4 で4年持つ",
        "",
        "3年持たせるには 200 / 3 = 66万 /12 で月55000円必要"
      ]
    },
    {
      "title": "ubereats",
      "created": 1562846801,
      "updated": 1562846801,
      "id": "5d27264cf98fe90017a98601",
      "lines": [
        "ubereats",
        "# uber eats 検討",
        "j6tr!saA3gh",
        "",
        "4nfgjq",
        "## 初回配達まで ",
        "退職後から始めるとする 4/11日ごろから  ",
        "それより前は桜で忙しいはず  ",
        "となると配達バッグの入手を4/11日に合わせるには4/05.06にもらいに行くのがよいのでは？",
        "もし月末に奴らが京都に来ないなら月末に登録に行く",
        "",
        "* 招待コード顔合わせ",
        "* web上での登録",
        "* 登録会に参加",
        "* 招待に関する検討",
        "* その他検討",
        "",
        "注意:配達開始は自転車保険の保険期間が始まってから。",
        "",
        "",
        "## 収益について",
        "時給1000円を目標にする。  ",
        "1000Y/H * 3H * 24D = 72000円",
        "",
        "",
        "## アイテムの検討",
        "### 自転車",
        "* ライト",
        "* 夜間蛍光",
        "* 紛失防止タイル",
        "* その他検索して調べる",
        "* ヘルメット",
        "* グローブ　",
        "* テールライト",
        "* バックミラー",
        "* スマートフォンフォルダー",
        "* サイクルコンピューターはなれてから",
        "* 骨伝導イヤホン",
        "* かっぱ",
        "* 筆記用具",
        "* サバイバルシートと縛るもの？",
        "* プチプチ緩衝材",
        "* ジップロップに輪ゴム",
        "* 長靴",
        "",
        "### バック",
        "* 仕切り",
        "* その他検索して調べる",
        "",
        "### 身の回り",
        "* タオル、ハンカチ、水、充電器、その他",
        "",
        "### 保障",
        "* 自転車",
        "* アプリ",
        "",
        "",
        "",
        "## 配達タイミングの検討",
        "* 土日祝日",
        "* 平日",
        "* 晴れ",
        "* 雨",
        "* 暑い",
        "* 寒い",
        "* お昼の時間 11:00 - 14:00",
        "* 夜の時間 18:00 - ????",
        "",
        "## 場所の検討",
        "* 三条、四条",
        "* 百万遍",
        "",
        "## 分析、アプリ開発、可視化手法の検討",
        ""
      ]
    },
    {
      "title": "写真加工",
      "created": 1562888254,
      "updated": 1569589751,
      "id": "5d27c83a12bbec0017dce8cb",
      "lines": [
        "写真加工",
        "写真加工",
        "　photoshop,lightroom,フォトショップ、ライトルーム",
        "",
        "プロファイル",
        " 風景を採用",
        " 自動を採用",
        "",
        "レンズ(一番した)",
        " 色収差を除去にチェック",
        " レンズ補正を使用にチェック",
        "",
        "人の削除",
        " スポット修正",
        "",
        "ライト",
        "　露光量を+",
        "　シャドウを+80",
        "　黒レベルを-30下げる",
        "",
        "カラー",
        "　青空を魅せるには自然な彩度を+",
        "",
        "効果",
        " 霞の除去を+",
        " ノイズを+50",
        "",
        "写真加工",
        "　photoshop,lightroom,フォトショップ、ライトルーム",
        "",
        "プロファイル",
        " 風景を採用",
        " 自動を採用",
        "",
        "レンズ(一番した)",
        " 色収差を除去にチェック",
        " レンズ補正を使用にチェック",
        "",
        "人の削除",
        "　スポット修正",
        "",
        "ライト",
        " 露光量を+",
        " シャドウを+80",
        " 黒レベルを-30下げる",
        "",
        "カラー",
        " 青空を魅せるには自然な彩度を+",
        "",
        "効果",
        " 霞の除去を+",
        " ノイズを+50",
        ""
      ]
    },
    {
      "title": "生活",
      "created": 1563222207,
      "updated": 1583819534,
      "id": "5d2ce0b5304f710017002514",
      "lines": [
        "生活",
        "[睡眠]",
        "",
        "　課題など",
        "　　2 H * 3回制度",
        "　　twiterを開く回数を減らしたい",
        "　　chrome拡張を導入してできる時間を制限したい",
        "　　どうやって20:30に寝るか",
        "　　　読書習慣をつくる",
        "　　　　19:30 から読書",
        "　　　　もし無理ならそのまま寝る",
        "　　　　うまく行ったこと",
        "　　　　　pcが利用できなくなるmacの機能",
        "　　　　うまく行かなかったこと　",
        "　　　　　シャットダウン",
        "　　　　　gogolehome",
        "",
        "table:時刻表",
        " 開始\t終了\t時間\tすること\t備考",
        " 20:30\t4:30\t8\t睡眠\t実質7H",
        " 4:30\t5:00\t0.5\t仕事準備\t",
        " 5:00\t7:00\t6\t仕事1\t仕事",
        " 7:00\t9:00\t6\t仕事2\t水の準備、完全栄養食、サプリメント摂取",
        " 9:00\t11:00\t6\t仕事3\t必要なら昼寝 11時まで",
        " 11:00\t14:00\t3\t朝タスク\tランニング1.5H 風呂0.5H 飯1H",
        " 14:00\t19:30\t6\t仕事\t午後の仕事は自由 いろんなことする",
        " 19:30\t20:30\t1\t睡眠準備\t読書",
        "",
        "",
        " 目覚まし　30分",
        " 　光目覚まし 0 - 30",
        "  携帯目覚まし 30分-2分前",
        "  爆音目覚まし 30分",
        "",
        "",
        "　仕事準備",
        "　　twitter",
        "　　pcをつける",
        "　　コーヒー飲む",
        "　　ストレッチする",
        "",
        "",
        "　起床後2H後 7時",
        "　　水1or2リットル用意",
        "　　完全栄養食を200g(1/2)摂取する",
        "　　サプリ飲む",
        "",
        "",
        " 起床後4H後 9時",
        " 　必要なら昼寝",
        "",
        "",
        "　昼",
        "　 順番",
        "　　　[- 風呂ーランニングー飯]",
        "　　　ランニングー風呂ー飯 = 3h",
        "　　　ランニングー飯ー[- 風呂] = 2.5h",
        " 　考察",
        "　　　ランニングから始める。この時点で11時から12時半 で、帰ってきたら飯を食う 12時半〜13時半 で風呂に入る気になれば入る 13時半〜14時",
        "　 　[* ということは11時からランニングを始めることができるかが重要]",
        "　　　計測したい",
        "",
        "",
        "　午後",
        "　　自由",
        "",
        "　夜",
        "　　モニターを見ない",
        "　　チョコ食べる",
        "　　歯磨きする",
        "　　[効率的な就寝]",
        "　　ストレッチ",
        "　　読書",
        "",
        ""
      ]
    },
    {
      "title": "東京ですること",
      "created": 1564354478,
      "updated": 1576793576,
      "id": "5d3e278d5a02600017d9a2ca",
      "lines": [
        "東京ですること",
        "　博物館、美術館",
        "　　国立科学博物館",
        " 　東京国立博物館",
        " 　国立新美術館",
        "　コワーキングスペース",
        "　　アマゾンロフト",
        "　奥多摩",
        "　高尾",
        "　植物園",
        "　トレッキング",
        "",
        "ーーーーーーーーーーーーーーーーーーーーーーーー",
        "今回やること",
        "　１２月イベント",
        "　　[https://www.fashion-press.net/news/52559 『特別展 ミイラ ～「永遠の命」を求めて』国立科学博物館で、世界中のミイラが一堂に集結＆謎を解明 - ファッションプレス]",
        "　　ハプスブルク展",
        " 　[https://www.shibuya-scramble-square.com/sky/ SHIBUYA SKY]",
        "",
        "　団地などを見に行く",
        "　　高島平",
        "　　　[https://twitter.com/kknif/status/889848783705587712 小峯太一さんのツイート: \"三田線の先っちょ、高島平とか西台とかのあたりは何もないので東京に長く住んでても行ったことない人いるけど あの辺は高度経済成長期の膨れ上がる住宅需要を満たすために線路の上にまで死ぬほど高層団地建てた地域で、首都高のように狂気の滲む昭和の建築美があるのでマスト見るべし 俺は三回行った… https://t.co/cK1gvlTyLW\"]",
        "　　　> 　　いいかい学生さん、都営三田線に乗りなよ。そして新高島平で降りるんだよ。改札を出て左の階段を登ってしばらく進むと「3-11-1」って壁に書いてある建物があるからそのエレベーターで14階に登るとその外壁に鉄格子が無いことに気づくはずだ。そしてそのまま飛び降りて死ね。",
        ""
      ]
    },
    {
      "title": "空想癖対策",
      "created": 1567483359,
      "updated": 1567485710,
      "id": "5d6de5db36b4f70017b6a4ce",
      "lines": [
        "空想癖対策",
        "[【３秒でやめる】空想・独り言・妄想。アスペルガー症候群(ASD)・ADHDの特徴  https://www.himawari0511.com/entry/2017/07/29/120000] より",
        "",
        "空想癖・妄想癖は、脳の中でもおでこの奥にある部分、前頭葉の働きが低下しているのが原因だと言われている。",
        "それはセロトニンが不足しているために低下するのだそうだ。",
        "",
        "感覚に集中（右脳を使う）すると、思考や空想や妄想（左脳を使う）をすることができない状態になる。",
        "具体的には、",
        "　自然を感じる",
        "　落ち着くような音楽を楽しむ",
        "　匂いを楽しむ",
        "などだ。",
        "",
        "通常は人体の仕組み上、真上を見上げながら思考・空想・妄想をする事はできないようになっている。",
        "上を見上げるだけなのでカンタンで是非試して頂きたいのだが、これには注意点がある。",
        "それは、目線が下がりがちになるので、目線を特に意識するという事だ。",
        "真上を見上げていても、思考・空想・妄想をしだしたら目線が下がってきていると思って欲しい。",
        "",
        "",
        "考えるっていうのはけっこう自動的で、自分じゃ制御できないことも多いので、どうすれば無駄なこと考えなくて済むか知っておくのはとても重要。一番簡単なのは、なにか誰かのトークの録音を聴くこと。人がしゃべっているのを聴いていれば、脳内ネガティブ自動再生を一時停止することができる。",
        "",
        "------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "対策",
        "右脳を使う？",
        "音楽、BGM、環境音、話などの音で空想を阻害する",
        "　音楽を聞く",
        "　環境音などを大音量で流してみる",
        "　アロマ",
        "　真上を見上げる（目線を下に下げない）",
        "　誰かのトークを聞く",
        ""
      ]
    },
    {
      "title": "水稲",
      "created": 1567509485,
      "updated": 1567577359,
      "id": "5d6e4beb6ede1800176ff255",
      "lines": [
        "水稲",
        "table: 比較",
        "　湿田 \t乾田",
        "　木製農具\t鉄製農具",
        "　直播き\t田植え",
        "　-\t草木灰、刈敷、人糞",
        "　　牛馬",
        "",
        "table:年表",
        "\t２世紀後半\t倭国大乱",
        "\t2世紀\t近畿とその周辺に高地性集落",
        "\t239\tしんぎわおう",
        "",
        "　青銅器、鉄器",
        "　弥生土器、土師器、須恵器",
        " 40/160",
        "",
        ""
      ]
    },
    {
      "title": "tooth",
      "created": 1568330166,
      "updated": 1568330690,
      "id": "5d7ad1b49f3b090017bd6e66",
      "lines": [
        "tooth",
        "　朝飯時と就寝前",
        "　歯間ブラシ",
        "　マウスウォッシュ",
        "　　20〜30回すすぐ",
        "　キシリトールガムを噛む",
        "　三ヶ月一回の定期検診",
        ""
      ]
    },
    {
      "title": "仕事についての気づき",
      "created": 1568529230,
      "updated": 1568600344,
      "id": "5d7ddb4c0c195a0017d482de",
      "lines": [
        "仕事についての気づき",
        " pc台を2台から1台にするととても首が楽",
        " ヘッドフォンして音楽聴きながら仕事するとものすごく仕事が捗る。スピーカー以上",
        "　figma wakatime 記録されない",
        ""
      ]
    },
    {
      "title": "GIFの取得とscrapboxへの貼り付け",
      "created": 1569588214,
      "updated": 1569588602,
      "id": "5d8e03ec8714eb00174145e6",
      "lines": [
        "GIFの取得とscrapboxへの貼り付け",
        " GIPHY CAPTUREを使う(deckの右側に配置してある)",
        " デスクトップでもどこでもいいので保存してscrapboxに貼り付ける",
        ""
      ]
    },
    {
      "title": "画像の取得とscrapboxへの貼り付け",
      "created": 1569588736,
      "updated": 1569588848,
      "id": "5d8e05fc73ee2600173866fa",
      "lines": [
        "画像の取得とscrapboxへの貼り付け",
        "　右クリックから ウェブページ全体をスクリーンショット をクリックする",
        "　右クリックから 画像をコピー をクリックする",
        "　deckにある スクリーンショットを使う",
        ""
      ]
    },
    {
      "title": "過去勤務先電話番号",
      "created": 1569589368,
      "updated": 1569589368,
      "id": "5d8e08760db2b9001791bbd3",
      "lines": [
        "過去勤務先電話番号",
        "赤嶺　",
        "09091100348 ",
        "",
        "山本",
        "09010200067",
        "",
        "えぐま",
        "09095470016",
        "",
        "福原",
        "08024240345",
        "",
        "",
        ""
      ]
    },
    {
      "title": "バックアップについて",
      "created": 1570738180,
      "updated": 1570874646,
      "id": "5d9f900151f5000017c652bd",
      "lines": [
        "バックアップについて",
        "table:フォルダとそれに対応するバックアップ",
        " フォルダ名\tローカル\tローカルバックアップ\tクラウドバックアップ\t備考",
        " app\t開発pc\t開発pc用HDD\tgithub(dev)\t",
        " documents\t開発pc\t開発pc用HDD\tgithub(dev)\tドキュメント",
        " inv_data\t私用pc\t私用pc用HDD\t- (google drive)_and0nagai.r\t5年以上前のデータのみ保存",
        " music\t私用pc\t私用pc用HDD\tgoogle play music\t",
        " others\t私用pc\t私用pc用HDD\t- \t",
        " pictures\t私用pc\t私用pc用HDD\tamazon drive\t",
        "\tcloud_data\t開発pc\t開発pc用HDD\tgithub(dev)\tfigma,scrapbox",
        "",
        " 写真と音楽の整理",
        " githubについて",
        " 　ユーザーネームはメールアドレス",
        " 　パスワードはgithubパスワードだけど、lastpassから引っ張ること",
        "",
        "code: github",
        " echo \"# documents\" >> README.md",
        " git init",
        " git add README.md",
        " git add .",
        " git commit -m \"first commit\"",
        " git remote add origin https://github.com/ampersand-dev/documents.git",
        " git push -u origin master",
        "",
        "code: github",
        " git remote add origin https://github.com/ampersand-dev/documents.git",
        " git push -u origin master",
        "",
        " music seiri",
        " pic serii",
        " ベンりツール　　",
        "isikawatiaki　",
        ""
      ]
    },
    {
      "title": "睡眠",
      "created": 1571798346,
      "updated": 1571801422,
      "id": "5dafbd48a9a3e40017785b25",
      "lines": [
        "睡眠",
        "table: 睡眠",
        " 20:00 - 20:30\t 0.5H\t睡眠準備\t歯磨き、養命酒、明日の準備など？",
        "　20:30 - 5:00 \t8H\t睡眠\t熟睡を目指す",
        "　4:30 - 5:00\t0.5H\t起床準備\t4:30 光目覚まし、最初のアラーム -> 二度寝 4:55 二度目のアラーム 5:00 トイレアラーム",
        "　5:00 - 5:30\t0.5H\t仕事準備\tなにをするか？ サプリメント、養命酒、お湯(冬場の胃の動きが鈍いため)\t",
        "",
        "　TODO",
        "　 就寝前",
        "　 　歯磨き",
        "　 　養命酒",
        "　 　水2リットル準備",
        "　 　(ユンケル)",
        "　 　(読書)",
        "　 起床時",
        "　 　養命酒",
        "　 　サプリメント",
        "　 　お湯",
        "",
        "",
        " [*** 20:30に就寝するための工夫]",
        "  使用制限",
        "\t 　PCの自動シャットダウン",
        "\t 　スマートフォンの使用制限",
        "\t 　MACにスクリーンタイムの導入",
        " 　音による意識付け",
        " 　　19:30 - 20:00 [一日の終わりの音楽をMACから爆音で流す https://scrapbox.io/ampersand-develop/%E4%B8%80%E6%97%A5%E3%81%AE%E7%B5%82%E3%82%8F%E3%82%8A%E3%81%AE%E9%9F%B3%E6%A5%BD%E3%82%92MAC%E3%81%8B%E3%82%89%E7%88%86%E9%9F%B3%E3%81%A7%E6%B5%81%E3%81%99]",
        " 　　　いい感じの音楽 ",
        " 　　　　戦場のメリークリスマス",
        " 　　　　ホタルの光",
        " 　　　　",
        " 　　20:00 - 20:30 googlehomeの音楽に切り変え(20:00にmacの電源が切れるため)",
        "",
        "",
        "　[*** 起床準備について]",
        "\t　30分かけて徐々に起床する。",
        "　\t 5:30 朝日、光目覚ましで徐々に覚醒する。",
        "　\t 5:30 携帯のアラームを鳴らす。すぐには起きずにベット中でグダグダして覚醒を待つ。",
        "　\t 5:55 光目覚ましのアラームが鳴る。",
        "　\t 6:00 キッチンのアラームが鳴る。",
        "　\t キッチンのアラームを止める",
        "",
        "",
        "　[*** 就寝準備について]",
        "　　20:00 - 20:30",
        "　　　以下を行う",
        "　　　　歯磨き",
        "　　　　養命酒",
        "　　　　水2リットル準備",
        "　　　　(ユンケル)",
        "　　　　(読書)",
        "　　　以下は自動で行われる",
        "　　　　20:00 pcのシャットダウン",
        "　　　　20:30 スマートフォンの使用制限",
        "",
        "",
        "　[*** 起床するために必要な条件]",
        "　　十分な栄養",
        "　　　オナニーのしすぎでの鉄分の不足や貧血などがあると起きられない。",
        "　　十分な睡眠時間",
        "　　　fitbitのデータによると8時間の睡眠が必要",
        "　　朝日",
        "　　　朝日を取り込む",
        "　　　光目覚ましを使う",
        "　　　　朝日を取り込んで体に光を当て、弱めの覚醒を得つつ、光目覚ましで完全に覚醒する",
        "　　起床するアイテム",
        "　　　光目覚まし",
        "　　　キッチン爆音目覚まし"
      ]
    },
    {
      "title": "京都 - カフェ -",
      "created": 1572591261,
      "updated": 1574385202,
      "id": "5dbbd69b97100d0017261cd6",
      "lines": [
        "京都 - カフェ -",
        "",
        "　進々堂",
        "　　京都市左京区北白川追分町88",
        "",
        "　カフェ・コレクション",
        "　　京都府京都市左京区北白川追分町６７",
        "　　コーヒー、ケーキ500円",
        "",
        "　私設図書館",
        "",
        "",
        "",
        "　珈琲焙煎所　旅の音 ",
        "　 京都府京都市左京区田中東春菜町３０−３ THE SITE A",
        "　コーヒーハウス　マキ",
        "　　京都市上京区河原町今出川上ル清龍町211",
        "　ボンボンカフェ",
        "　　京都府京都市上京区河原町今出川東入加茂大橋西詰",
        ""
      ]
    },
    {
      "title": "読書 - 目次 -",
      "created": 1572670542,
      "updated": 1580204126,
      "id": "5dbd0c49a64d8800173461b0",
      "lines": [
        "読書 - 目次 -",
        "#読書",
        "　ルール",
        "　　ここを読書の目次フォルダとする",
        "　　各ページには書籍のリンクを貼る(できるだけ公式)",
        "　　ハッシュタグ `#読書`を貼る",
        "　　その書籍に関わる単語をハッシュタグで貼る",
        "　　 よく使うハッシュタグ",
        "　　  #it #心理学 #経済学 ",
        "　　[https://gyazo.com/f2b8225608abce422097409df6b5d963]",
        " https://docs.google.com/document/d/1MCynHWG9u4fygdDUDu0sv4lGTGvRTNZDp2FTfRqbTis/edit",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "",
        " - - - - - - - 完了 - - - - - - - ",
        "[図解でよくわかる ネットワークの重要用語解説]",
        "[不平等の再検討]",
        "[福祉の経済学]",
        "[https://www.amazon.co.jp/%E7%A7%81%E3%81%9F%E3%81%A1%E3%81%AF%E7%94%9F%E3%81%8D%E3%81%A5%E3%82%89%E3%81%95%E3%82%92%E6%8A%B1%E3%81%88%E3%81%A6%E3%81%84%E3%82%8B-%E7%99%BA%E9%81%94%E9%9A%9C%E5%AE%B3%E3%81%98%E3%82%83%E3%81%AA%E3%81%84%E4%BA%BA%E3%81%AB%E4%BC%9D%E3%81%88%E3%81%9F%E3%81%84%E5%BD%93%E4%BA%8B%E8%80%85%E3%81%AE%E6%9C%AC%E9%9F%B3-%E5%A7%AB%E9%87%8E%E6%A1%82/dp/478161700X 私たちは生きづらさを抱えている 発達障害じゃない人に伝えたい当事者の本音]",
        "",
        "- - - - - - - 考察 - - - - - - - ",
        "　[生産性とはなにか]",
        " - - - - - - - 書き写していない - - - - - - - ",
        "　ゼロからつくるディープラーニング",
        " pythonプログラミング",
        " 会計士が教える~~",
        " - - - - - - - 読み直していない - - - - - - - ",
        "　[oracle]",
        "　[ウォール街のランダムウォーカー]",
        "　[あなたの人生を変える睡眠の法則]",
        "　[読むミクロ経済学] <- //todo 学び直す 必要なグラフを写真とる",
        "　[読むマクロ経済学] <- //todo 学び直す 必要なグラフを写真とる",
        "　[エンジニアの知的生産術]",
        "　[会計士が教える銘柄選び―業種別の攻略法はこれだ!]",
        " [時間の使い方]",
        " [マルクス経済学]",
        " - - - - - - - 現在進行形 - - - - - - - ",
        "　[良いウェブサービスを支える「利用規約」の作り方]",
        "",
        "　[書籍未読リスト]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "oracle",
      "created": 1572670589,
      "updated": 1573976565,
      "id": "5dbd0c7bfdd6220017caf75c",
      "lines": [
        "oracle",
        "#IT #読書_-_目次_-",
        "",
        " oracleDB",
        "  マルチプラットフォーム",
        "  複数のOSに対応",
        " sqlserver",
        "  Windowsのみ",
        " ロック",
        " 　一方が更新中のデータを他方が更新できないように保護すること。",
        " ロックエスカレーション",
        " 　ロックのかかる範囲が広くなること",
        " 　一行のロックがあるタイミングでより大きなロックになってしまうこと。",
        " 　　オラクルは発生しない",
        " データ",
        " \t情報の束",
        " データベース",
        " 　蓄積したデータをあとから抽出・加工を目的としたもの",
        " SAMファイル",
        " 　Sequential Access Method",
        "  順次呼び出し",
        "  オーバーヘッドがない",
        " オーバーヘッド",
        " 　特定の処理をする際に本来実行したい処理以外でかかる負担のこと",
        " ISAMファイル",
        "  索引 + SAM",
        " SQL",
        "  structured query langage",
        " インスタンス",
        " 　DBとユーザーの中間に位置するメモリ構造とプロセス群のセットのこと",
        " 　DBに対して最低1つ",
        " 　ユーザーはインスタンスを介してDBにアクセスする",
        " 　複数のインスタンスの同時起動が可能",
        "　リスナープロセス",
        "　　インスタンス起動時にインスタンスへの通信経路が確保される",
        "　RAC構成",
        "　　real appcation clusters",
        "　　1つのDBに対して複数のインスタンスの割当することで対障害性の向上",
        " マルチテナントアーキテクチャー",
        " 　一つのインスタンスで複数のDBを起動可能",
        " 　より少ないメモリ消費を実現",
        " システムグローバル領域",
        "  SGA",
        "  Oracleサーバー内のメインメモリ内に生成される共有メモリ領域のこと",
        " プログラムグローバル領域",
        " 　サーバープロセス起動時にOracleサーバーのメモリ内に自動生成されるメモリ領域",
        " 　プライベートSQL領域 + セッションメモリ",
        " プライベートSQL領域",
        " 　SQLを発行するそれぞれのセッションに存在するメモリ",
        " プロセス",
        " 　メモリ領域にロードされたプログラムのこと",
        " ユーザープロセス",
        " 　クライアントサイドのアプリケーションやサーバーサイドアプリケーション",
        " 　ユーザーアプリケーションのプロセス",
        " サーバープロセス",
        " 　Oracleサーバーが可動するコンピューターの中に生成されるプロセスのこと",
        " 　開始時にPGAが生成される",
        ""
      ]
    },
    {
      "title": "ウォール街のランダムウォーカー",
      "created": 1572671676,
      "updated": 1574580742,
      "id": "5dbd10b96910290017736537",
      "lines": [
        "ウォール街のランダムウォーカー",
        "[https://www.nikkeibook.com/item-detail/35823 ウォール街のランダム・ウォーカー＜原著第12版＞ | 日本経済新聞出版社]",
        "#投資　#読書",
        "",
        "　ランダムウォーク",
        "　　物事の過去の動きから将来の動きや方向性を予測することは不可能であること",
        "　ファンダメンタル価値",
        "　　ファンダメンタル価値(本質価値)と呼ばれる絶対的な価値があり、現状分析と将来予測することで求められる。",
        "　砂上の楼閣学派",
        "　　心理的要素を重視する",
        "　　一般投資家が気づく前に行動することでゲームに勝つ",
        "　リューリップバブル",
        "　　1593年 オランダ",
        "　レバレッジ",
        "　　ある投資リターン、リスクを増大させるテクニックの総称",
        "　コールオプション",
        "　　レバレッジの一種",
        "　　予め決められた価格で一定期間の購入権利を得ること",
        "　南海バブル",
        "　　投資機会の不足",
        "　　　新規公開株の発行",
        "　　　　すぐ消えることからバブルと呼ばれた",
        "　トロニクスブーム",
        "　　60年代",
        "　　社名を格好良くすることで株価を釣り上げた",
        "　　80年代にハイテク株ブーム",
        "　バブル出現の2大原因",
        "　　新しいテクノロジーの出現",
        "　　　トロにクス、バイオ",
        "　　　　今では暗号通貨か？",
        "　　新しい事業機会の到来",
        "　　　南海バブル",
        "　　のいづれか",
        "　インターネットバブル",
        "　　上記の両方が原因",
        "　　関連銘柄の値上がり",
        "　　　多くの投資家がゲームに参加",
        "　　　　雑誌などで取り上げられる",
        "　　　　　更に多くの投資家がゲームに参加",
        "　　　　　　繰り返し",
        "　エンロン",
        "　　パートナーシップ組織の濫用",
        "　　赤字を帳簿外扱いにして、借入金を利益にした。",
        "　投資のルール",
        "　　成長株であること",
        "　　　利益成長率が今後五年以上に渡って市場平均以上の銘柄を買うこと",
        "　　低PER",
        "　　　ファンダメンタル以上の株に手を出さない",
        "　　　ベンチマークは市場の平均株価収益率",
        "　　　市場にあまり知られていない、かつ、株価収益率が市場より極端に低い",
        "　効率的市場理論(ウィーク型)",
        "　　テクニカル分析はだめ",
        "　　ファンダメンタル分析は良い",
        "　　セミストロング型、ストロング型はどちらもだめ",
        "\t\t　株価が新たな情報に対して非常に素早く反応するがゆえに、それに基づいて継続的に利益を得られる投資家はいない　",
        "\t\t　中長期的にはインデックスファンドが上",
        "\t認知",
        "\t　あなたの運転レベルはどれぐらいか？",
        "\t　　8から9割は平均以上に事故をしないと考えている",
        "\t後知恵",
        "\t　上手く行くのは自分の能力のおかげ",
        "\t　悪くなるのは外的な要因",
        "\t代表性の簡便的意思決定法",
        "\t　基礎確率の軽視、無視により、その人の物事のイメージのみで想像してしまうこと。",
        "\t　その人がイメージ通りである確率は 代表性 × 基礎確率",
        "　群れの心理",
        "　　間違った多数意見に従う場合、脳の空間認識の活動が大きくなる",
        "　　多くの人の言動が考え方に左右されてしまう。",
        "　プロスペクト理論 期待理論",
        "　　コインの表は +100ドル、裏は -100ドル ",
        "　　 この場合の期待値は0であるが誰もやりたがらない",
        "　 コインの表は +250ドル、裏は -100ドル",
        "　  この場合は期待値が2.5倍だがこの値でやる人が多い",
        "　 　つまり、1ドルの損は2.5ドルの損と考え、1ドルの利益は1ドルの利益と考える",
        "　プロスペクト理論２",
        "　　1. 確実に-750ドル",
        "　　2. 75％で-1000ドル、25%で+-0",
        "　　　両者とも期待値は75％であるにも関わらず、9割の人は2を選ぶ",
        "　　　　確実なる損よりは、リスクを選ぶ",
        "　　　\t　つまり、損失を被る場合はリスクを選ぶ",
        "　敬意を払う",
        "　　市場の教訓に敬意を払うことで、致命傷から身を守れる",
        "　運用のすすめ",
        "　　1. 低コスト",
        "　　2.税制上有利",
        "　　3.幅広い銘柄に分散投資",
        "　　4.時価総額加重のインデックスファド",
        "　REIT",
        "　　最も強力なインフレエッジ",
        "　　株式と比べ効率性は悪くない",
        "　　平均すればまずまずのリターン",
        "　　インフレ局面では最高のリスクヘッジ",
        "　ポートフォリオにREITを加えること",
        "\t　株式並みの高い値上がりと配当がある",
        "\t　株式との相関が高くない",
        "\t　　リスク分散になる",
        "　ポートフォリオに金を加えること",
        "　　他資産との相関が非常に低い",
        "　　　多少の保有はリスク分散になる",
        "　株式市場におけるアメリカのシェア",
        "　　全体の40%ほど",
        "　株式投資のルール",
        "　　1. 少なくとも5年は1株あたりの利益が平均以上の銘柄",
        "　　2. ファンダメンタル以上の価値の銘柄を買わない　",
        "　　3. 近い将来、砂上の楼閣作りが始まる土台となる成長見通しのある銘柄",
        "　　4. 売買頻度を減らす",
        "　　",
        ""
      ]
    },
    {
      "title": "あなたの人生を変える睡眠の法則",
      "created": 1572674212,
      "updated": 1573976612,
      "id": "5dbd1aa39da60c00175e7174",
      "lines": [
        "あなたの人生を変える睡眠の法則",
        "[http://www.sinkan.jp/special/sleep/interview.html あなたの人生を変える睡眠の法則]",
        "#睡眠 #生活  #読書",
        "",
        "　発達の最接近領域",
        "　　最もやる気がでるのは50%は既に知っているけど、残りの50%は道の領域",
        "　　#暗記 #記憶",
        "",
        "　2段階モデル",
        "　　海馬と大脳の役割のこと",
        "　　　海馬から大脳に記憶がうつる",
        "",
        "　海馬",
        "　　覚えやすく忘れやすい",
        "　大脳",
        "　\t覚えにくく、忘れにくい",
        "",
        "　メラトニンリズム",
        "　　睡眠を誘発する作用",
        "　　光を感知すると減少し、夜間になると急速に増加する",
        "　　人間の体内時間は24時間以上あるが、朝に光を浴びることで体内時間をリセットできる",
        "",
        "　ルクス",
        "　　光の強さの単位",
        "　　オフィスと暗い日のルクスは同じぐらいなので、生活リズムが崩れやすい",
        "　　　table:ルクス",
        "　　　 晴れの屋外\t1万ルクス以上",
        "　　　 オフィス\t5000ルクス",
        "　　　 くもり\t5000ルクス以上",
        "　　　 大雨の窓際\t5000ルクス",
        "",
        "　位相",
        "　　一日の始まりから終わりまでを一つのブロックのように考えたもの",
        "　　メラトニンは位相を調整している。",
        "",
        "　カフェイン",
        "　　睡眠物質が脳に溜まっている状態のまま、脳が睡眠しなくなる仕組み",
        "",
        "　寝溜めと位相の関連",
        "　　寝溜めは脳に溜まった睡眠負債を返済すること",
        "　\t　例えば日曜日の3時間の寝溜めは位相は3時間ずれる",
        "　\t\t　しかし、翌日決められた時間に起きると位相は1H/1dayしか進まない",
        "　　\t\t　これは内的脱同調により一時的に睡眠時間が減った(-2H)のと同じ状態になり、睡眠物質が溜まる",
        "　　\t\t\t　3日ほどで体がだるくなり、4、5日目で脳のパフォーマンスが低下する",
        "　　\t\t\t\t　土日に寝溜めすると悪循環に陥る",
        "",
        "　頭頂葉",
        "　　事実に基づいた情報を処理する",
        "　前頭葉",
        "　　過去に基づいた情報を処理する",
        "　その二者の関係",
        "　　睡眠物質の蓄積により前頭葉の働きが強くなる",
        "　　　よって、事実確認を怠ったり、経験則で判断し、ヒューマンエラーの発生となる",
        "　\t> 睡眠不足だと集中力が低下しミスが増えます。理由の一つは、睡眠が不十分な状態では情報処理や指示系統を担う脳の一部、頭頂葉（とうちょうよう）の活動が著しく低下するからです。それでも頭は、パソコンのように突然フリーズしてしまうことはありません。脳のネットワークによって、たとえ頭頂葉がうまく機能しなくても他の部位が補完して働き続けることができます。例えば、経験に基づく実行機能を担う前頭葉（ぜんとうよう）が頭頂葉の機能を補います。この結果、情報を精査しないまま勘に頼って行動することになりますが、このことで間違った判断も起きやすくなるのです。経験に頼ってしまい「以前もこうだったからきっと大丈夫だろう」「これで何とかなるだろう」と、脳が間違った答えを導いてしまうからです。追突事故の場合でも「だろう運転」が大きな原因であると全日本トラック協会の調査が結論づけています。",
        "　\t\t[https://serai.jp/health/367917 睡眠不足の原因は口の動かし方？｜アゴと睡眠の深い関係 | サライ.jp｜小学館の雑誌『サライ』公式サイト]",
        "  もしかして日本人は戦前から睡眠不足だった？",
        "",
        "　エビングハウスの忘却曲線",
        "　　[忘却曲線]",
        "",
        "　ワーキングメモリ",
        "　　情報を一時的に貯蔵する領域",
        "　　容量がとても小さい",
        "　　　7 +-2しか貯蔵できない",
        "　　鍛えられない",
        "　　　経験、知識を増やして使わない工夫をする",
        "",
        "　速読法",
        "　　ざっくり複数回読む",
        "　　　大雑把で曖昧な情報は低負荷で長期記憶化しやすい",
        "",
        "　場所法",
        "　　場所とイメージを使う暗記法",
        "　　　1．記憶したい項目を置く場所を決める",
        "　\t　2．それをイメージに変える",
        "\t\t\t3．1の場所に2を置く",
        "\t\t短期間で大量に暗記できる",
        "\t\t#記憶 #暗記",
        "",
        "　ゾーンに入る方法",
        "　　ルーチンを決める",
        "　　　例えば仕事前にコーヒーを飲むなど",
        "　　早朝の仕事",
        "　　注意を引くものから逃れる",
        "　　適度な雑音",
        "　　やることを明確にすること",
        "　　シングルタスク",
        ""
      ]
    },
    {
      "title": "忘却曲線",
      "created": 1572676010,
      "updated": 1572676676,
      "id": "5dbd21a662a83c00170e1695",
      "lines": [
        "忘却曲線",
        "　[https://uwaterloo.ca/campus-wellness/curve-forgetting Curve of Forgetting | Campus Wellness | University of Waterloo]",
        "　20分後に42％忘れる",
        "　60分後に56%忘れる",
        "　1日後に74%忘れる",
        "",
        "#暗記 #記憶",
        ""
      ]
    },
    {
      "title": "読むミクロ経済学",
      "created": 1572677012,
      "updated": 1573976649,
      "id": "5dbd25601a4e760017e5e2ae",
      "lines": [
        "読むミクロ経済学",
        "[https://www.saiensu.co.jp/search/?isbn=978-4-88384-242-1&y=2016 読むミクロ経済学 - 株式会社サイエンス社 株式会社新世社 株式会社数理工学社]",
        "#経済学 #読書",
        "",
        "　経済学とは",
        "　　経済という対象に思考可能な姿と形を与えるための学問",
        "",
        "　ミクロ経済学",
        "　　市場についての理解を深める",
        "",
        "　マクロ経済学",
        "　　経済全体の理解を深める",
        "",
        "",
        "　需要理論",
        "　　1. 効用価値論",
        "　　2. 無差別曲線論",
        "　　3. 顕示選好理論",
        "",
        "　加重限界効用均衡法則",
        "　　1円あたりの限界効用がすべての財について等しくなるように購入量を調整すること",
        "　　p = mu * μ",
        "\t　　p = 財の価格",
        "　\t　mu = 限界効用",
        "　\t　μ = 係数",
        "",
        "　消費者余剰",
        "　　CS",
        "　　 cs = tu - pq",
        "　　  tu -> total utility 総効用",
        "　　  pq -> 支払い総額",
        "　　 max cs = > p = mu * μ",
        "　　  写真１",
        "",
        "　利潤の最大化",
        "　　利潤 = 売上 - 総費用",
        "　　π = pq - tc",
        "　 利潤 = 売上 - (固定費 + 変動費)",
        "  利潤 = 売上 - (固定費 + 原材料費 + 人件費)",
        "  利潤 = 売上 - (固定費 + 原材料費 + 賃金 * 労働時間)",
        "　　　原材料費 -> μ * q",
        "　　　人件費 -> w * l",
        "　　　 w -> 賃金",
        "　　　 l -> 労働時間",
        "",
        "　限界費用",
        "　　短期においては、",
        "　　原材料費と人件費　つまり変動費で構成される。",
        "　　　つまり固定費を含まない",
        "",
        "　生産者余剰",
        "　　ps",
        "　　生産者余剰 = 売上 - 限界費用の総和",
        "　　利潤 = 生産者余剰 - μ",
        "",
        " 平均費用",
        " 限界費用",
        "",
        "　供給曲線",
        "　　限界費用が等しくなるところまで生産量を増加させないと利潤を最大化できない",
        ""
      ]
    },
    {
      "title": "読むマクロ経済学",
      "created": 1572678440,
      "updated": 1573976661,
      "id": "5dbd2b0f3974140017df8e3a",
      "lines": [
        "読むマクロ経済学",
        "#経済学　#読書",
        "[https://www.saiensu.co.jp/search/?isbn=978-4-88384-248-3&y=2016 読むマクロ経済学 - 株式会社サイエンス社 株式会社新世社 株式会社数理工学社]",
        "",
        "　世界恐慌",
        "　　1929年10月24日(木)",
        "　　失業率",
        "　　　アメリカ 25%",
        "　　　イギリス 20%",
        "",
        "　古典派第一公準",
        "　　労働需要曲線",
        "　　　賃金は労働の限界生産物に等しい",
        "",
        "　古典派第二公準",
        "　　労働供給曲線",
        "　　　賃金の効用は労働の限界不効用に等しい",
        "",
        "　完全雇用に至るまでの道のり",
        "　　1. 賃金率は一定で労働者を増やす(失業者を雇い入れる)",
        "\t\t2. 労働時間を増やして賃金率を上げる",
        "",
        "　有効需要",
        "　　経済全体における購買力の裏付けを持った需要",
        "　　Y = C + I + G + (EX - IM)",
        "　　　Y -> 国民所得のこと GDP",
        "　　　C -> GDPの６割",
        "　　　I -> 13~15%",
        "　　　※ 在庫は投資に含まれる",
        "",
        "　GDP",
        "　 日本国内で",
        "　 生産された付加価値の合計",
        "",
        "　GNI",
        "　 世界中で",
        "　 日本人が",
        "　 生産した付加価値の合計",
        "　　GNI - GDP + (海外からの所得受け取り - 海外への所得)",
        "",
        "　消費",
        "　　C = -A + (1- α)Y",
        "　　S + I = I",
        "",
        " 45度線",
        "",
        "　貯蓄と投資",
        "　　貯蓄と投資は定義的に等しい",
        "　　貯蓄の大きさは投資が決定する",
        "",
        "　貸付資金受給説",
        "　　グラフ",
        "　　説明書く",
        ""
      ]
    },
    {
      "title": "エンジニアの知的生産術",
      "created": 1573976387,
      "updated": 1573977991,
      "id": "5dd0f93f7964ea001761e88c",
      "lines": [
        "エンジニアの知的生産術",
        "#読書 ",
        "[https://gihyo.jp/book/2018/978-4-7741-9876-7 エンジニアの知的生産術 ――効率的に学び，整理し，アウトプットする：書籍案内｜技術評論社]",
        "",
        "　やる気を維持するためには p10",
        "　 [* ゴールは明確にする]",
        "　 [* ゴールを近くする]",
        "　 　チュートリアルがその例",
        "　　 チームにおける目標設計",
        "　 　[SMART criteria]",
        "　　[* 知りたいところから学ぶ]",
        "　　　[遅延評価勉強法]",
        "　　　前提条件",
        "　　　　目標が明確化されている",
        "　　　　目標が達成可能である",
        "　　　　大まかに[全体像を把握]している",
        "　　　　　具体的に",
        "　　　　　　目次、見出し、章タイトルから読む",
        "　　　　　　25分で少見出しとキーワードを赤ペンで囲む",
        "　　　　　　　時間を区切って明確なゴールをつくり大まかな構造を数多の中にいれる",
        "　　　　　　　一枚の大きな紙にマインドマップ形式でまとめる",
        "　　[* タスクを一つに絞る] p50",
        "　　 やる気のでない人の65%は複数のことをやると答えた人",
        "　　　絞り方",
        "　　　　[全体像を把握]する",
        "　　　　　全部書き出す",
        "　　　　　整理する",
        "　　　　<- - - > 類似の考え方 ->[GTD法]",
        "　　[* タスクを切る]",
        "　　　量で切る",
        "　　　　つまりタスクを小さくする",
        "　　　時間で切る",
        "",
        "",
        "　[* 記憶を鍛えるためには]",
        "　　繰り返しのアウトプットが基本",
        ""
      ]
    },
    {
      "title": "SMART criteria",
      "created": 1573976828,
      "updated": 1573976945,
      "id": "5dd0fafa4583d400178b3291",
      "lines": [
        "SMART criteria",
        " specific",
        "  改善を行う具体的な領域が明確である",
        " Mesurable",
        "  量、もしくは少なくとも進捗がわかる指標がある",
        " Assignable",
        "  誰が計画の実行をするのかが明確である",
        " Realistic",
        "  現実的に達成可能である、実現に必要なリソースが与えられる",
        " Time-related",
        "  いつ結果が得られるのか明確である",
        ""
      ]
    },
    {
      "title": "GTD法",
      "created": 1573977452,
      "updated": 1573977581,
      "id": "5dd0fd68a73f470017f88cfe",
      "lines": [
        "GTD法",
        "　人間の脳みそは",
        " 　人間は一度に多くのことを覚えていられない",
        " 　多くを覚えようとすると、ストレスが生まれ、認知能力が低下する",
        " 　だからやるべきことを覚えないのが正解",
        "",
        " 気になることを一箇所に集める",
        " 整理する",
        ""
      ]
    },
    {
      "title": "京都 - 紅葉 -",
      "created": 1573984327,
      "updated": 1575883631,
      "id": "5dd11843df170c00179cd97a",
      "lines": [
        "京都 - 紅葉 -",
        "　早朝拝観を予約する",
        "",
        "",
        "[https://souda-kyoto.jp/travel/koyo/ 【更新中！】秋特集 京都紅葉情報2019｜そうだ 京都、行こう。]",
        "[https://tenki.jp/kouyou/search/bloom/6/29/ 京都府の今見ごろの紅葉スポット 2019 - 日本気象協会 tenki.jp]",
        "[http://mk.kyoto-tales.net/ 京都の最新開花情報｜ＭＫタクシー提供]",
        "[https://p.kyoto-np.jp/kp/koto/momiji/meisho/index.html 紅葉の名所：京都・滋賀の紅葉情報 2019：京都新聞]",
        "",
        "　2019/11/18(月)",
        "　 神蔵寺",
        "　 鍬山神社",
        "　2019/11/19(火)",
        "　 善峯寺",
        "　2019/11/21(木)",
        "　　神護寺 9:00 - でも30分ぐらい早めのほうがよい",
        "　　西明寺",
        "　　高山寺",
        "　2019/11/22(金)曇り",
        "　　7:30出発 - 8:00着 - 天授庵に並ぶ ",
        "　　南禅寺 自由　",
        "　　南禅寺・天授庵 9:00-　８：３０一番乗り　見頃",
        "　2019/11/23(土)",
        " 　山科北部",
        " 　　家から蹴上まで30分、蹴上から毘沙門堂まで45分",
        " 　　６時４５分出発　到着　8：00　開門　8：30",
        "  　毘沙門堂",
        "  　　大階段の写真は取れた、カメラマンガスクラム組んでいたおかげ",
        "  　　１５分前に列ぶのは遅い",
        "  　山科聖天　双林院 ",
        " 　[- 山科南部]",
        " 　　[- 醍醐寺　弁天堂　]",
        " 　　　[- わんちゃんある。庭の周りなら人を写り込まずに済むかも]",
        " 2019/11/24(日)",
        " 　五時半から準備 - 6:30出発 - 7:00 着",
        " 　上賀茂神社",
        " 　　バザールがあったので人は多いが観光客はいない",
        " 　　7:15着 - 8:15出発 - 8:30植物公園 30分待機",
        " 　植物園",
        " 　５分前で一組めが並ぶ",
        " 　開園時、自分以外に4人並ぶ",
        " 　 9:00スタート",
        " 　吉田山",
        " 　　11時人少なめだけど撮影きつい",
        " 　　もうちょい日をおいてもいい",
        " 　忠宗神社",
        " 　　から真如堂を見る",
        " 　　　いつでも行ける",
        " 　　　駐車場１６番",
        "",
        " 2019/11/26(火)　くもり",
        " 　大原参道",
        " 　7時過ぎは人数人で撮影できる",
        " 　8時過ぎは人多し、無人撮影無理",
        "　宝泉院　09:00 - ",
        "　　8時半一番乗り",
        "　　六人並んだ",
        "",
        " 2019/11/27(水)　くもり",
        "　　曼殊院門跡　早朝　通り　曇りでも正面の写真以外なら行ける",
        "　　7時半の時点で快適に撮影できる",
        "　　8は少しきつい",
        "　　蓮華寺　",
        "　　　15分前4人",
        "",
        "　2019/11/28(木) 晴れ",
        "　　東福寺",
        "　　　まだオレンジ黄色　散り始めてはない？",
        "　　　8時半開門",
        "　　　通天橋は逆光になる",
        "　　　　7時半時点では少し遅い",
        "　　　　曇天狙うか７時を狙う",
        "　　　７時半一番乗りだが、すぐに行列ができた",
        "",
        "　2019/11/29(金) やや曇り",
        "  一休寺　",
        "   ９時から",
        "   入り口の紅葉は9時前から",
        "   9時前には7人程度",
        "",
        " 2019/12/9（月）晴れ",
        " 　日向大神宮",
        " 　　散り始め",
        " 　　九時人いない",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　洛北",
        "　　北西の外れ",
        "　　　[https://kyoto-design.jp/spot/2766 常照皇寺]",
        "　　　岩戸落葉神社　",
        "　　　宗蓮寺",
        "　　鷹峯",
        "　　　正伝寺",
        "　　　常照寺",
        "　　　源光庵",
        "　　　光悦寺",
        "　　　しょうざん庭園",
        "　　上賀茂",
        "　　　京都府立植物園",
        "　　　上賀茂神社",
        "　　岩倉",
        "　　　妙満寺",
        "　　　実相院　9:00 -",
        "　　蔵馬",
        "　　　貴船神社",
        "　　　鞍馬寺",
        "　　　叡山電鉄",
        "　　大原",
        "　　　寂光院 9:00 -",
        "　　 - - - - - - - - - - - -",
        "　　　宝泉院 9:00 - ",
        "　　　勝林院 9:00 -",
        "　　　実光院 9:00 -",
        "　　 - - - - - - - - - - - -",
        "　　　三千院 9:00 -",
        "　　 - - - - - - - - - - - -",
        "　　 来迎院",
        "　　 阿弥陀寺",
        "　　八瀬",
        "　　　蓮華寺",
        "　　　瑠璃光院　10:00 - 2000円",
        "　　修学院",
        "　　　修学院離宮",
        "　　　鷺森神社　微妙そう　",
        "　　　赤山禅院",
        "　　　曼殊門院跡",
        "　　一乗寺",
        "　　　圓光寺　早朝特別拝観あり",
        "　　　詩仙堂",
        "　　　金福寺",
        "　洛東",
        "　　鹿ヶ谷",
        "　　　法然院",
        "　　　安楽寺",
        "　　　哲学の道",
        "　　吉田山",
        "　　　吉田神社・竹中稲荷神社",
        "　　岡崎",
        "　　　金戒光明寺",
        "　　　真如堂",
        "　　南禅寺",
        "　　　南禅寺",
        "　　　南禅寺・天授庵",
        "　　　永観堂",
        "　　　日向大神宮",
        "　　八坂神社",
        "　　　将軍塚大日堂",
        "　　　青蓮院",
        "　　　粟田神社",
        "　　　知恩院",
        "　　　建仁寺",
        "　　　高台寺",
        "　　　圓徳院",
        "  　清水寺",
        "  　清閑寺",
        "　　三十三間堂",
        "　　　地積院",
        "  　養源院",
        "　　東福寺",
        "　　　東福寺",
        "　　　今熊野観音寺　　7:00　参拝時間　8:00～17:00",
        "　　　泉涌寺",
        "　　　龍雲院",
        "　　　来迎院",
        "　　　龍吟庵",
        "　　　天得院",
        "　　　光明院",
        "",
        "　洛南",
        "　　深草",
        "　　　石峰寺",
        "　　中書島",
        "　　　長建寺",
        "　　他",
        "　　　三室戸寺",
        "　　　興聖寺",
        "　　　酬恩庵(一休寺)",
        "　　　海住山寺",
        "　　　浄瑠璃寺",
        "　　　岩船寺",
        "",
        "　洛西",
        "　　大原野",
        "　　　金蔵寺",
        "　　　正法寺",
        "　　　勝持寺",
        "　　　大原野神社",
        "　　善峯寺",
        "　　　善峯寺",
        "　　　三鈷寺",
        "　　　十輪寺",
        "　　その他",
        "　　　光明寺",
        " 　　長岡天満宮",
        " 　　地蔵院",
        "　　高雄",
        "　　　神護寺 9:00 - でも30分ぐらい早めのほうがよい",
        "  　西明寺",
        "  　高山寺",
        "　　嵐山山側",
        "　　　愛宕念仏寺",
        "　　　化野念仏寺",
        "　　　祇王寺",
        "　　　二尊院",
        "　　　常寂光寺",
        "　　嵐山中心部",
        "　　　天龍寺",
        "　　　宝厳院",
        "　　　渡月橋",
        "　　　鹿王院",
        "　　　大川内山荘庭園",
        "　　　清凉寺",
        "　　　宝筐院",
        "　　嵐山北側",
        "　　　直指庵",
        "　　　大覚寺",
        "　　　竹林",
        "　　花園",
        "　　　法金剛院",
        "　　　桂春院",
        "　　　大法院",
        "　　　退蔵院",
        "　　　等持院",
        "　　　龍安寺",
        "　　　仁和寺",
        " 洛中",
        "　　下鴨神社・糺ノ森",
        "　　北野天満宮",
        "　　京都御苑",
        "　　妙顕寺",
        "　　二条城",
        "　　大徳寺 高桐院",
        "　　法輪寺",
        "　　立本寺",
        "",
        "　亀岡",
        "　 神蔵寺",
        "  鍬山神社",
        "",
        "　山科",
        "　　北部",
        "　　　毘沙門堂",
        "　　　山科聖天　双林院 ",
        "　　　[- 安祥寺]",
        "　　南部",
        "　　　勧修寺",
        "　　　随心院",
        "　　　醍醐寺　弁天堂　庭の周りなら人を写り込まずに済むかも",
        "",
        "",
        "　滋賀",
        "　　旧竹林院",
        "　奈良",
        "",
        "桂坂",
        "[https://twitter.com/suizou/status/1060784462303117317 suizouさんのツイート: \"桂坂はこんな感じ。朝霧の残る早い時間か夕暮れ前がおすすめです… \"]",
        "",
        ""
      ]
    },
    {
      "title": "雑多何でもメモ",
      "created": 1573987908,
      "updated": 1597300178,
      "id": "5dd12637a73f470017f8dc07",
      "lines": [
        "雑多何でもメモ",
        "　ここにはとりあえずメモすることをメモするページです。",
        "",
        "　table:京都\t\t",
        "　　植物園\tオオサンショウオ",
        "",
        "　川",
        "　　高瀬川",
        "　天橋立",
        "　松尾周辺",
        "　　苔寺(往復はがきによる事前申し込み)",
        "　　地蔵院",
        "　　鈴虫寺",
        "　修学院離宮(事前申し込み)",
        "",
        "　東京でいくところ",
        "　　自転車でいけるところ",
        "　　　小石川植物園",
        "　　　六義園",
        "　　　根津神社",
        "　　都内",
        "　　　奥多摩",
        "　　　[http://www.nippara.com/nippara/syounyuudou/syounyuudou.html 日原鍾乳洞]",
        "　　　中央線沿い",
        "　　　根津美術館",
        "　　関東",
        "　　　",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 直近ではないタスク]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　確定拠出年金入金待ち",
        "　育毛を考える",
        "　積ん読本の解消",
        "　まとめたノートの読み込み",
        " 写真整理",
        "　京都の部屋サイズは280×430",
        "　pixcel3修理ディスプレイ3万",
        "\tsimカード",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 月初タスク]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　　爪を切る",
        "　　オリコポイント変換",
        "　　[https://twitter.com/i/likes?lang=ja ampersand@個人開発者(@ampersand000)さん | Twitterがいいねしたツイート]消化",
        "　　メールチェック",
        "\t\t写真チェック",
        "  figma backup",
        "  scrapbox backup",
        "  suica",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 映画]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　夜は短し歩けよ乙女",
        "　[https://ja.wikipedia.org/wiki/%E6%96%87%E5%8C%96%E5%BA%81%E3%83%A1%E3%83%87%E3%82%A3%E3%82%A2%E8%8A%B8%E8%A1%93%E7%A5%AD%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E9%83%A8%E9%96%80 文化庁メディア芸術祭アニメーション部門 - Wikipedia]",
        "　[https://ja.wikipedia.org/wiki/%E5%90%89%E7%94%B0%E7%8E%B2%E5%AD%90#%E5%8A%87%E5%A0%B4%E3%82%A2%E3%83%8B%E3%83%A1 吉田玲子 - Wikipedia]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 個人開発３つの要素]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　デザイン",
        "　開発",
        "　マーケティング（開発前と開発後）",
        "　　ここでいうマーケティングはデザインと開発以外のすべてを含む",
        "[https://twitter.com/ampersand000/status/1239774885749985285 ampersand@個人開発者さんのツイート: \"whatの次はwhere 今京都に住んでいるので京都で働くか、それとも東京の実家に帰るか。そもそも実家がある保証もない。(親の会社傾いているので) そうなると埼玉の祖父母の家に居候するか。埼玉は東京が遠い。 ちなみにwhoはわからない。エンジニアをリアルでみたことがないから。\"]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 今後やる技術]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "　[今後やる技術]",
        "",
        "　技術の予定",
        "　\tgithubの書き方を調べる",
        "　\t[コーディングテストに関する調査]",
        "　\tswift",
        " 　\tTODOアプリ",
        "　\t随時",
        "　\t　転職先・経歴書など",
        "　\t　qiita",
        "　\t　 よい技術書の探し方",
        "    　積ん読ハウマッチ",
        "    　アマゾンの評判",
        "    　twitterの評判",
        "   　qiitaでASO記事書きたい",
        "   　オブジェクト指向UIデザインをもとにアプリ画面を改修する。",
        "\t\t\t scrapboxをseleniumで自動化して毎日githubにあげればよいのでは？",
        "　　　　SIerで設計学びました。といえば強いのでは？ -> uml",
        "　　　　　web系 転職 sier出身 強み",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 他]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "table:随時",
        " 日付\t時間\tすること\t備考",
        "   随時\t\t服の整理\t衣替えのときに",
        "   \t\t体調・体格\t[体調管理・運動・健康・体格維持 - 目次 -]",
        " \t\t自転車アイテム検討\tサイクルコンピューター、サングラス",
        "  \t\t蔦屋レンタル\t[レンタル音楽考察]　郵送される適宜処理",
        "  \t\t[母フラ対策]\t運用してみる",
        "  \t\t[最適な就寝環境]改善\tあずき使ってみる。除湿器考える",
        "  \t\t部屋の運用・改善\t[日常運用]",
        " \t\t[人間ドック]\t",
        "",
        "table:予定表",
        " 　\t\t[コーディングテストに関する調査]\t",
        " 　\t\t関東近郊で行く所探す\t",
        " 　\t\t会社立ち上げ、税金\t",
        " \t\tアイコン検索追加\t",
        "  - - - - - - \t- - - - -\t- - - - - - 上未整理 - - - - - \t- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        " \t\t勤怠登録の確認\tline",
        " \t\t整腸剤買う\t",
        " \t\tカーテン\t",
        " \t\t付箋持ってくる\t",
        " 8/14(金)\t\t勤怠表期限\t",
        " 8/15(土)\t\tコンタクトレンズ\tお盆休みかもしれないので調べてから ",
        " \t\tサイクリング\t",
        "\t\t\t万札の補充\t",
        "\t\t\t OKグーグル\t",
        "    \t\t粗大ごみ引き取り業者考える\thdd処分をその場でしてくれる会社",
        "\t\t\tクリーニング受け取り\t",
        "\t\t\tmacの空き容量増やす\t",
        " \t\t積んどくハウマッチ\t登録",
        " \t\tDTI\t",
        " \t\t月初タスク\t",
        " \t\t目覚まし検討\t",
        " \t\tカロリー再計算\t",
        " \t\t月34万考察\tフリーの34万はサラリーマンのいくらぐらい？",
        " \t\t蔦屋解約\tオンライン解約",
        " 8/26(水)\t\t麻布テーラー\t8/26日ごろ到着",
        " 9/6(日)\t\t粗大ごみ収集日\t[粗大ごみ申込み完了のお知らせ]",
        " 9/末\t\tDTIトライアル期限切れる\t[回線の改善]",
        " 10月頭\t\t人間ドック\t",
        " 10/24(土)\t\t歯医者\t10:00",
        " 11/7(土)\t\t歯医者\t10:00",
        "",
        "97.3.23",
        "　[腹囲計測]",
        "　[Swift]",
        "　notionで画面構成を探す。",
        "　　カレンダー",
        "　　看板",
        "　　早朝タスク",
        "　　各種リンク",
        "",
        "スクラップボックスとmarkdownを変換するシステム",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** その他]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "6日目",
        "",
        "#swiftアプリをリリースするまで",
        "",
        ""
      ]
    },
    {
      "title": "京都 - 目次 -",
      "created": 1574385071,
      "updated": 1592384824,
      "id": "5dd735a814165300174e3de2",
      "lines": [
        "京都 - 目次 -",
        "このページは京都に関連するページの目次ページです。",
        "[京都 - 紅葉 -]",
        "[京都 - 桜 -]",
        "[京都 - 雪 -]",
        "[京都 - カフェ -]",
        "",
        "　参考",
        "　　[写真のとり方]",
        "",
        "",
        "",
        "　table:京都\t",
        "　　 季節、時期もの\t美術館、博物館\t桜\t紅葉\t雪\t梅\t植物園\tオオサンショウオ",
        "　　 場所\t漫画ミュージアム\t漫画喫茶\t出町座\t私設図書館\t京大\tボルダリング\tカフェ巡り",
        "　　 河 - 鴨川北\t高野川 - 比叡山 - 大原\t高野川 - 市原 - 鞍馬川 or 静原川\t高野川 - 岩倉川\t賀茂川\t賀茂川 - 鞍馬川 or 静原川",
        "　　 河 - 鴨川南\t高瀬川\t西高瀬川\t新高瀬川\t濠川\t伏見インクライン",
        "　　 河 - その他\t山科川\t白川疎水\t桂川\t宇治川\t琵琶湖第一疎水",
        "　　 京都一周トレイル\t北山西部 - 4分割\t西山 - 2分割\tその他コース",
        "　　 寺社仏閣\t考える",
        "",
        "",
        "　　[https://twitter.com/suizou/status/1060784462303117317 suizouさんのツイート: \"桂坂はこんな感じ。朝霧の残る早い時間か夕暮れ前がおすすめです… \"]",
        "　　[https://www.travel.co.jp/guide/article/41236/ 吉田山中にひっそりと！京都東山の古民家カフェ「茂庵」は情緒抜群 | 京都府 | LINEトラベルjp 旅行ガイド]",
        "  庄田橋から見た賀茂川",
        "   山はすぐそこだし深さもある ここまで来ると普通にオオサンショウウオがいるらしい",
        "   鴨川を京産大総合グラウンドがある辺りまで遡ると野生のオオサンショウウオをわりと見られるらしい",
        "   "
      ]
    },
    {
      "title": "モバイルバッテリー購入検討",
      "created": 1574398664,
      "updated": 1574398958,
      "id": "5dd76ac6bb0925001754101e",
      "lines": [
        "モバイルバッテリー購入検討",
        "　要件",
        "　　黒",
        "　　ポケットに入る薄型",
        "　　できればスマートフォンごとポケットに入る",
        "　　USB PD(Power Delivery)がついている",
        "　　　PCへの給電が可能",
        "　　pse規格",
        "　　ポート数は２つ以上",
        "",
        "[https://gyazo.com/153d6608eb8807136917f3ff679884fd]",
        "",
        "[https://gyazo.com/56be9920d0411756aa0a3a9a12f9bea5]",
        ""
      ]
    },
    {
      "title": "１２月の帰宅予定立てる",
      "created": 1574489921,
      "updated": 1576665391,
      "id": "5dd8cf3ed4e57b0017071704",
      "lines": [
        "１２月の帰宅予定立てる",
        " 帰りのバス予約すること",
        " macごと持って変える",
        "[https://gyazo.com/51074d0d68f04ee1234a3637d6c893f0]",
        "　",
        "　[東京ですること]",
        ""
      ]
    },
    {
      "title": "写真のとり方",
      "created": 1574580517,
      "updated": 1574580562,
      "id": "5dda312450541400175c6443",
      "lines": [
        "写真のとり方",
        "写真のとり方、保存について",
        "　カメラの写真を基本とする",
        "　逆光などで取れないときはスマートフォンねとる",
        "　　画素数はかめら\u000f!\u000e2400スマートフォン1200なのでカメラを基本とする",
        "　　スマートフォンは光量や自動調整が優秀なので、カメラが逆光でだめなときに使う",
        "　その都度いらない写真は消しておく、あとでまとめて消すは無理",
        "　",
        "",
        ",写真取るときはモニタータップでピント合わせてみる",
        "",
        "[写真加工]",
        "",
        ""
      ]
    },
    {
      "title": "私生活",
      "created": 1574580709,
      "updated": 1592821842,
      "id": "5dda31e1597a0d0017d4a487",
      "lines": [
        "私生活",
        " 　[仕事についての気づき]",
        " 　[食事]",
        " 　[生活]",
        " 　[生活費]",
        " 　[睡眠]",
        " 　[実家に帰ったあとの生活について]",
        ""
      ]
    },
    {
      "title": "京都 - 桜 -",
      "created": 1574750707,
      "updated": 1586586951,
      "id": "5ddcc9f1707cdb00173e7ea4",
      "lines": [
        "京都 - 桜 -",
        "　早朝拝観を予約する",
        "　予定を建てる",
        "　うまく写真の取れていないところに行くことが基本方針",
        "",
        "　リンク",
        "　　[https://ja.kyoto.travel/flower/sakura/ 京都 桜の名所・開花状況「桜だより」｜【京都市公式】京都観光Navi]",
        "　　",
        "",
        "",
        "",
        "",
        "",
        "　嵐山",
        "　　嵐電",
        "　咲き始め",
        "　　二尊院　龍安寺　じょうてるこうじ",
        "",
        "　宇治",
        "　　宇治橋上流の桜",
        "",
        "　大原",
        "",
        "　他・未整理",
        "　　高雄・三尾一帯の桜",
        "　　元離宮二条城",
        "　　南禅寺周辺？",
        "　　六角堂？",
        "　　祇園白川？",
        "　　版木のみち？",
        "　　上賀茂神社？",
        "　　仁和寺？",
        "　　宝泉寺",
        "　　平安神宮　9:00",
        "",
        "",
        "　終わり",
        "　　[- 　本満寺？　ちりはしめ]",
        "　　醍醐寺",
        "",
        "",
        "　来年以降",
        "　　山城総合運動公園の桜",
        " 　宇治市植物公園の桜",
        ""
      ]
    },
    {
      "title": "統計グラフ集",
      "created": 1565677567,
      "updated": 1575011553,
      "id": "5de0c53b2954df00179da95c",
      "lines": [
        "統計グラフ集",
        "　転職者数",
        "[https://gyazo.com/186f13f8ecd38d38e154f4258dd2ecd6]",
        "",
        "転職者数と完全失業者数",
        "[https://gyazo.com/12929f6afa4a659cf9879b0b015ea614]",
        "",
        "労働力人口、就業者、完全失業率の推移",
        "[https://gyazo.com/edfb068b7f9371562e6fced8c1f663c7]",
        "",
        "正規・非正規雇用者増加数",
        "[https://gyazo.com/a22c2974c78b38f7d86767955ba36c8f]",
        "",
        "名目・実質雇用者報酬",
        "[https://gyazo.com/4a18b4aaf41b2c6b7191a998d6f82ff5]",
        "",
        "15歳以上一人当たり賃金",
        "[https://gyazo.com/a045d6c590d67ccc1e126ba63e57aef7]",
        "",
        "",
        "労働参加率",
        "[https://gyazo.com/ff80a04a3f0fd969edea598fc98b02ad]",
        "",
        "労働力人口の推移",
        "[https://gyazo.com/d810891fb21c2bc67599aa7a23d50baa]",
        "",
        "歴代政権と就業者数推移",
        "[https://gyazo.com/31bf315752d73b0e23298a28e2045622]",
        "",
        "株価と就業者数(半年後)",
        "[https://gyazo.com/e3ceb989aed91e978188396bc216c0e5]",
        "",
        "労働力調査　労働力人口、就業者数、完全失業者数",
        "[https://gyazo.com/387c974df5af7a766ef75596aaa69fa9]",
        "",
        "完全失業率および就業者の前年増減の推移",
        "[https://gyazo.com/18730ec09718b79af5252c4849e35e6f]",
        "",
        "所定時間内の1時間あたりの給与推移(一般労働者)",
        "[https://gyazo.com/7a137d75acc447404629acc90393a6e5]",
        "",
        "所定時間内の1時間あたりの給与推移(パートタイマー)",
        "[https://gyazo.com/1d51a1990451a3d0429a9a8ccc32e57f]",
        "",
        "自公政権における経済再生の成果",
        "[https://gyazo.com/11c1f1ece34cf1f3db12d1b15bd6deed]",
        "",
        "",
        "正社員、非正規社員の推移",
        "[https://gyazo.com/3f0c2f1b978fcd1ba12655ea1f90b498]",
        "",
        "就職失敗による自殺",
        "[https://gyazo.com/f1e8d2a79692a3aef10866e1756a55e3]",
        "",
        "生活苦による自殺",
        "[https://gyazo.com/d56b57cdf46dc4dfe75dee161a3c62e2]",
        "",
        "",
        "就業者数、労働力人口、15-64歳人口",
        "[https://gyazo.com/3faad43a9ecbad5af03b3fe657d25d0b]",
        "",
        "名目・実質雇用者報酬と名目・実質賃金",
        "[https://gyazo.com/af2d5c222cc58962e70dd7799cd0f8c0]",
        "",
        "現在の景気をどう感じますか？",
        "[https://gyazo.com/0562cf9fcbd1bfd424c47b293edc1127]",
        "",
        "就業者数",
        "[https://gyazo.com/0ed5e20d4928e1397ddd55315a4d74fc]",
        "",
        "雇用者報酬の推移",
        "[https://gyazo.com/3ac69ad06bb72894d72d9e7abcb6ee73]",
        "",
        "総労働時間の推移",
        "[https://gyazo.com/ac078225e80e95c2b739b34ecf7c1dd2]",
        "",
        "国内需要",
        "",
        "[https://gyazo.com/32e0b0ae0a0081817e510e29584fe3e3]",
        "",
        "銀行貸出額と前年同月比の推移",
        "[https://gyazo.com/734a95c1d19ac2423db162e4e1e81ecf]",
        "",
        "労働者一人あたりの時間給",
        "[https://gyazo.com/4f4f360e6e756c26e0a9adc7bf6fd34a]",
        "",
        "有効求人倍率",
        "[https://gyazo.com/0ef0535c27e1c2a3ae94fa3b15057e03]",
        "",
        "15歳以上の一人あたり給与",
        "[https://gyazo.com/48d1af76c597ecb4a54e5a2e18c7e438]",
        "（追記）トランプ政権（2017年から）になり失業率が一気に下がったのがグラフからよくわかる。",
        "[https://gyazo.com/cbd1722a4a91bb4ea27c830f6a264b73]",
        "",
        "分かりやすくしてみた。「原発ゼロ」という壮大な社会実験の結果は、1日あたり100億円の札束を灰にするということが分かっただけです。そしてこれからはCO2を排出すれば課金されるという新しいルールも追加されるからね、という話。",
        "[https://gyazo.com/c13b8151c8bb8620ed28fe1a65b0c19a]",
        "",
        "非正規職についている理由",
        "[https://gyazo.com/9a8f32fa76ffee3b7236e4fcb6cc7275]",
        "",
        "現在の景気をどのように感じますか",
        "[https://gyazo.com/e7c38db6d54c2137d546e7c4115d50e2]",
        "",
        "民間需要",
        "[https://gyazo.com/3280e7449e9172db3d269e7e528364d5]",
        "",
        "10歳階級就業率",
        "[https://gyazo.com/9abfa88c60f952804c6fbd093a86e661]",
        "",
        "労働力調査",
        "[https://gyazo.com/6c4da424650640b64c0e0f468fb7055c]",
        "",
        "労働力調査",
        "[https://gyazo.com/37cfe4b59c4c5d36f90e224113cffe6c]",
        "",
        ""
      ]
    },
    {
      "title": "優秀だと思わせる仕事ぶりまとめ",
      "created": 1575009340,
      "updated": 1591608822,
      "id": "5de0c53b2954df00179da95d",
      "lines": [
        "優秀だと思わせる仕事ぶりまとめ",
        "[* 要約]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "[* 優秀な人]",
        "　たらい回しにしない",
        "　回答を先延ばしにしない",
        "　同じ説明を何度もさせない",
        "　すぐ謝って済まそうとしない",
        "　定型文のコピペで対応しない",
        "　その後どうなったか連絡する",
        "",
        "[* マメな連絡で取引相手を安心させる]",
        "　フリーランスは「マメな連絡」がガチで大切。",
        "　　これは単に早く返すという意味じゃなく取引相手を安心させるのが目的。",
        "　　相手の心理状態を想定した上で、気になっていそうな点は先回りして連絡する。",
        "",
        "　[* また一緒に仕事したいなと思うフリーランス]",
        "　 こちらの利益になる提案をしてくれる",
        "　 自走力高い",
        "　 腰が低い",
        "　 契約が終わった後も考えてる",
        "",
        "　[* 優秀だなと思うフリーランスの特徴]",
        "　　返信が早い",
        "　　朝型で規則正しい",
        "　　質問ではなく提案",
        "　 モチベで仕事しない",
        "　　工数計算が正確",
        "　　人付き合いを大事にしてる",
        "　　人に負けないスキルがある",
        "　 向上心がある",
        "　　楽しく仕事してる",
        "　 質問に簡潔に答える",
        "　 質問攻めしない",
        "　 MTG後に何をいつまでにやると自ら言う",
        "　　 その言った納期を死んでも守る",
        "　　 信頼関係薄い時は進捗を自ら報告",
        "　　 クライアントからの納期は死んでも守る",
        "",
        "",
        "　[* 会社員だった時意識したら高評価だった事]",
        "　　①トラブったらすぐに報告する",
        "　　②〆切を守る",
        "　　③分からない事は聞く",
        "　　④人の話は8聞いて2返す",
        "　　⑤先輩から受けたアドバイスはまず実行してみる",
        "　　⑥備品をチェックして進んで補充する",
        "　　簡単な事だけど意外と出来てない人多い。要は人や仕事に誠実である事が大事。",
        "",
        "　[* 企業が求めるプログラマー]",
        "　　仕事が早い",
        "　　ナレッジを共有してくれる",
        "　　コミュニケーションスキルが高い",
        "　　面倒見がいい",
        "　　広い視野をもっている",
        "　　チームや会社を意識できる",
        ""
      ]
    },
    {
      "title": "オーダーフォーム作るとしっかりしてそうと思われる",
      "created": 1565674353,
      "updated": 1575008011,
      "id": "5de0c53b2954df00179da95e",
      "lines": [
        "オーダーフォーム作るとしっかりしてそうと思われる",
        "何度も言うけどオーダーフォーム作ると良いことしかないですよ！地味に1番効果が大きいのは、お客さんにしっかりしてそうな人だと認識されることです。いいお客さんは信頼してくれて、悪い客や冷やかしする人はめんどくさそうだと思って避けてくれます。",
        "[https://gyazo.com/8d10513b8bd4caa0b9cb5c30d1351588]",
        ""
      ]
    },
    {
      "title": "契約書の書き方(瑕疵)",
      "created": 1574914936,
      "updated": 1575007993,
      "id": "5de0c53b2954df00179da95f",
      "lines": [
        "契約書の書き方(瑕疵)",
        "脆弱性やらの瑕疵に対応するため、契約書には「瑕疵が甲の提供した資料等または甲の与えた指示によって生じたときは適用しない。」って書いておこうな。経産省のモデル契約書にも書いてある。",
        "補足すると、通常は「但し、乙がその資料等または指示が不適当であることを知りながら告げなかったときはこの限りでない。」という条項も併記するので、やべえなっていうやつはやべえっ逐一いう必要があります。"
      ]
    },
    {
      "title": "エラー時のUIを工夫してより適切な情報をユーザーから引き出す",
      "created": 1575007677,
      "updated": 1575007677,
      "id": "5de0c53b2954df00179da960",
      "lines": [
        "エラー時のUIを工夫してより適切な情報をユーザーから引き出す",
        "",
        "システムエラー出たとき、何種類かのネコのgif画像をエラー内容に合わせて表示するようにしたんだけど、",
        "問い合わせが基本「猫ちゃんが出てきた」になったし",
        "猫ちゃん見てるからクレームの温度感も温くなったし",
        "こっちもとりあえず「画面にどんな猫ちゃん出てますか？」って聞けばいいし楽"
      ]
    },
    {
      "title": "褒められて伸びるタイプは伸びる",
      "created": 1574936731,
      "updated": 1575007310,
      "id": "5de0c53b2954df00179da961",
      "lines": [
        "褒められて伸びるタイプは伸びる",
        "自己紹介で「わたしは褒められて伸びるタイプです」と言い放った超大型新人が「褒め殺し」の異名を取る上司の下についた結果、この半年の間で超進化を成し遂げ支店でも随一の実績を残したので、そろそろ世の中の上司の皆さんは「怒る」から「褒める」にシフトチェンジすべきだという提案をいまここに。"
      ]
    },
    {
      "title": "契約書を巻く前に作業をさせる人には注意する",
      "created": 1574930961,
      "updated": 1575006982,
      "id": "5de0c53b2954df00179da962",
      "lines": [
        "契約書を巻く前に作業をさせる人には注意する",
        "小さな作業でも、いくら急いでいるからって契約書を巻く前に作業をさせる人いますよね？",
        "なので、こちらもコードをコミットしてプッシュせずに待機中",
        "急ぎだからと色々やったのに、恩を感じずちゃぶ台をひっくり返すような事をするクライアントもたまには居るのだ。こういう小さい所から警戒",
        "",
        " それようの契約書容易させるのがいいかも",
        ""
      ]
    },
    {
      "title": "客先常駐企業の引き合いを減らすには服装自由」といれとく",
      "created": 1562485891,
      "updated": 1575006509,
      "id": "5de0c53b2954df00179da963",
      "lines": [
        "客先常駐企業の引き合いを減らすには服装自由」といれとく",
        "希望を書く欄に「服装自由」といれとくです。  ",
        "無駄に群がってくる客先常駐企業からの引き合いが減ります。  ",
        "自分も相手も無駄な労力を割かずに済むミンナ幸せ。  ",
        ""
      ]
    },
    {
      "title": "就業規則・雇用契約書を書面で交付してもらう",
      "created": 1575006444,
      "updated": 1575006444,
      "id": "5de0c53b2954df00179da964",
      "lines": [
        "就業規則・雇用契約書を書面で交付してもらう",
        "募集要項や求人票には法的効力が全く無いので、書いてあることと入社してからの実態が著しく乖離してるのが(日本の)IT業界。就業規則・雇用契約書を書面で交付してもらわないと。",
        ""
      ]
    },
    {
      "title": "面接時聞くこと",
      "created": 1575006415,
      "updated": 1591603785,
      "id": "5de0c53b2954df00179da965",
      "lines": [
        "面接時聞くこと",
        "　PCの貸与の有無",
        "　健康保険の有無",
        ""
      ]
    },
    {
      "title": "ツールと業務の標準化",
      "created": 1574996797,
      "updated": 1574997207,
      "id": "5de0c53b2954df00179da966",
      "lines": [
        "ツールと業務の標準化",
        "[https://twitter.com/baobabustroll/status/1167349906215849986 baoさんのツイート: \"4つの総合病院で電子カルテ導入に立ち会った身として出した結論なんですが、上層部から現場までが電子カルテ導入を不合理なローカルルールを撤廃し業務を標準化する好機と捉えることができるかどうかが成功と失敗の分かれ目ですね。今のところ4病院全滅です。\"]",
        "",
        "",
        "4つの総合病院で電子カルテ導入に立ち会った身として出した結論なんですが、上層部から現場までが電子カルテ導入を不合理なローカルルールを撤廃し業務を標準化する好機と捉えることができるかどうかが成功と失敗の分かれ目ですね。今のところ4病院全滅です。",
        "",
        "",
        "私がこれまで現物を見て最も成功したと思えた電子カルテは、離島群の中核病院院長がサイボウズを利用してデザインした電子カルテです。いくつかの島の診療所も、デイケア施設も訪問看護ステーションも、全て統一されたシステムを利用しており、オンラインで情報共有、予約共有ができていました。",
        "",
        "",
        "この病院は危機的状況だったものを院長が盛り返し、集約化を進め複数医師診療を徹底することで医師の消耗を防ぎ、今は離島診療のモデル的な位置に至っています。",
        "院長の「全部僕の自由にしていいっていわれたからやった」という言葉の裏になんか凄い事があったんだろな…と思わせる凄みがありました。",
        "",
        "",
        "上記の病院が成功した秘訣は、",
        "1. 病床数50未満で、現場と運営の距離が0",
        "2.電カル導入についての意思決定権が院長に完全集中した",
        "3.医療介護従事者が院長に全面的に従った",
        "この辺だと思いました。",
        "電カル作ったことないので、是非作ってる方にお話聞きたい所です。",
        "",
        "",
        "大学病院規模になると現場と運営の距離は月と地球くらいあるし、意思決定権は粉微塵に分配されてるし、スタッフは縦割りで言う事きかないので、みんなが導入直後から満足する電カル導入はそもそも不可能なんだと思います。",
        "",
        "",
        "なので、電カルを開発する企業は「これが効率的なシステムだー！日本の医療システムを我が社が標準化する！」って胸張って出せるシステムを作って、もうマイナーチェンジしない。",
        "成功への道はその辺にあるように感じます。",
        "末端の雑多雑多なローカルルールに合わせて仕様変更を繰り返し、結果不安定で",
        "",
        "無駄の多い電子カルテが、不合理で無駄の多いローカルルールてんこ盛りの病院業務に合わせて出来上がる訳です。",
        "導入した後も「あそこを直せここを変えろ」で仕様変更希望の嵐だけど、金は出さないからその場しのぎ。電カル導入のために現場に派遣されたスタッフが削り潰されてある日突然来なくなる。",
        "",
        "ローカルルールはそのまま、手間と墓標が増えただけという悲劇（なんか見た）が生まれると思うんです。",
        ""
      ]
    },
    {
      "title": "わかりやすいトグルスイッチ",
      "created": 1574995785,
      "updated": 1574996240,
      "id": "5de0c53b2954df00179da967",
      "lines": [
        "わかりやすいトグルスイッチ",
        "[https://uxmilk.jp/83071 その機能はオンかオフか？ トグルスイッチが招く混乱とは | UX MILK]",
        "",
        "ユーザーにとって、トグルスイッチが現在の状態を示しているのかどうかは明確ではありません。このような混乱が発生するのは、スイッチにオンとオフのラベルや、緑と赤の色、チェックマークなどがついているときです。これらの手がかりは視覚的なノイズとなり、状態をユーザーに伝えにくくなります。明確に「オン」であるシグナルがないと、ユーザーはスイッチが状態を示していると認識できません。",
        "[https://gyazo.com/9ed7e432c99e72bd03ba118e52ca6fd1]",
        "",
        "　状態を伝える際には、アクティブなものだけを表示し、アクティブでないものは状態を明示しない",
        "",
        "　ユーザーがスイッチを間違って解釈しないように、スイッチに付随する視覚的なノイズを減らし、「オン」の状態の手がかりのみを明示",
        "　スイッチの「オフ」状態は中間色を使い、注意が向かないようにすべき",
        "",
        "",
        "「オン」状態を示すのに必要な唯一の手がかりは、目立つ色で塗られた電源のアイコンです。ユーザーは状態を色だけでなく、区別しやすい形状によっても認識することができます。電源のアイコンは、オンとオフの状態を示すとき言語にかかわらず普遍的に使われるので、トグルスイッチの理想的なアイコンです。この手がかりによって、国外のユーザーや色覚異常を持つユーザーのアクセシビリティにも対応できるようになります。",
        "",
        "",
        "　可能性のある解決策の１つとして、現実のメタファーを取り除き、電源のアイコンでトグルボタンを表示することです。",
        "　人目を引くアイコンなら、「オン」のシグナルをより明確に伝えるでしょう。",
        "　ボタンを押せば、ユーザーの期待通りに起動したり停止させたりできます。",
        "　このアプローチにはポテンシャルがありますが、ユーザーにはまだ馴染みがありません。",
        "　もし多くのデザイナーがこの方法を取り入れたら、このようなトグルスイッチを目にすることが増えることもあるかもしれません。",
        "",
        "",
        "[https://gyazo.com/e941727657baf5ce7048c9f5b94e9723]",
        "",
        "　トグルボタンは",
        "　　電源ボタンにする",
        "　　pressで切り替える",
        "　　onの場合は不透明度１００％",
        "　　offの場合は不透明度38％",
        "　　「スウィッチオン」みたいなsnackbar出るといいかも",
        "",
        ""
      ]
    },
    {
      "title": "事実と意見を区別して話す技術",
      "created": 1574993720,
      "updated": 1574994760,
      "id": "5de0c53b2954df00179da968",
      "lines": [
        "事実と意見を区別して話す技術",
        "[https://techlog.voyagegroup.com/entry/2019/10/29/080000 面接時に見ているポイント - VOYAGE GROUP techlog]",
        "[https://blog.tinect.jp/?p=62453 なぜ「事実」と「意見」を区別して話せない人がいるのか。 | Books&Apps]",
        "[https://blog.tinect.jp/?p=43955 「話の噛み合わない人」は何の能力が不足しているのか。 | Books&Apps]",
        "",
        "",
        "　「人は、出された質問が難しいと、それを簡単な質問に置き換えてしまう」",
        "  > 例えば、「現在の生活はどのくらい幸福か？」と聞かれた人がいるとする。正確に回答をしようとすれば、「幸福」の定義を行い、過去の幸福度を算定し、現在の幸福度と比較して算出しなければ回答できないはずだ。ところが、それはとても面倒で難しい。だから多くの人は、脳内で勝手に「いまの自分は気分がいいか？」という質問に置き換え、まあまあ幸福です」などと回答してしまう。「事実」と「意見」を区別できていない人は、無意識にこれを行ってしまっている。",
        "",
        "　事実と意見を分けて説明するのがうまい人が書いた障害報告書は読みやすい",
        "",
        " シチュエーション１",
        " 　>「昨日、顧客訪問が3件あったけど成果があれば、報告してもらえる？」",
        "　 　◯ : ",
        "　  　> こういう成果があった。成果はなかった。",
        "　　 　成果がある？　-> あった ",
        "　 　✕ : ",
        "　 　 >お客さんからこういう資料ないかと言われた",
        "　 　　成果がある？　-> 言われた",
        "",
        "　シチュエーション２",
        "  >「お客さん、ウチに依頼するか、決めてくれた？」",
        "   ◯",
        "    >「その場では決めてくれませんでした。金額について「交渉の余地はあるか」と聞かれましたので。ただ、金額の折り合いさえ付けば、残りの課題は解決しているので、受注可能です。」",
        "   ✕",
        "   　> 大丈夫だと思います",
        "\t\t \t「お客さん、ウチに依頼するか、決めてくれた？」から、「受注できるかどう思う？」という質問に勝手に置き換えて、「大丈夫だと思います」という、自分の気持だけを答えたのだ。",
        "",
        "これが「事実」と「意見」の切り分けができない人の正体である。",
        "",
        "　質問に端的に回答する。",
        "　事実と意見を区別する。",
        "　話題を勝手に変えない。",
        "　相手の聞きたいことを常に検証する。",
        "",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "日本ラグビーの勝因",
      "created": 1574938423,
      "updated": 1574938423,
      "id": "5de0c53b2954df00179da969",
      "lines": [
        "日本ラグビーの勝因",
        "日本ラグビーの勝因で一番シックリきたの、オーストラリア戦で言われてた",
        "「『日本人は体格が小さいからから技術で勝つ』や『チームワークで勝つ』とかの舐めた幻想を全否定して『そもそもフィジカルが世界で戦う土俵にすら上がれてない』という所から徹底して叩き直した」",
        "っていう話ですね……",
        "",
        "日本ラグビーが強くなったのは、こういう「気持ちで負けなければ」みたいな精神論が先にありきの発想ではなくトレーニングと戦術を見直したからであって気迫とか闘志とかの低次元の話にして欲しくないですね。奇跡ではなくて実力。",
        ""
      ]
    },
    {
      "title": "FABでご意見の受け付け",
      "created": 1574938367,
      "updated": 1574938367,
      "id": "5de0c53b2954df00179da96a",
      "lines": [
        "FABでご意見の受け付け",
        "ユーザーが「なんか変？」「もっとこうたら？」と思った瞬間を全方向で逃さずキャッチすべし",
        "つまりチャットアイコン風のをインターコムみたいに常に右下に出してクリック１発でドシドシご意見の受け付け体制を取ること",
        "やってみればお問い合わせフォームとの格段の違いが分かるはず",
        "[https://gyazo.com/57e35c29440225bc41a6919e875734e6]"
      ]
    },
    {
      "title": "ルールを見極めて（特に判定方法と勝敗条件）地道に毎日取り組む",
      "created": 1574938327,
      "updated": 1574938327,
      "id": "5de0c53b2954df00179da96b",
      "lines": [
        "ルールを見極めて（特に判定方法と勝敗条件）地道に毎日取り組む",
        "世の中のたいがいの場面で「ルールを見極めて（特に判定方法と勝敗条件）地道に毎日取り組む」という手法は最も有効で、これに慣れているかどうかは切実な生存要件であり、それを効率よく身につけて計るのに今の受験制度は大変秀でてます。",
        ""
      ]
    },
    {
      "title": "全要素にイベント解析を入れて数字を取る",
      "created": 1574938295,
      "updated": 1574938295,
      "id": "5de0c53b2954df00179da96c",
      "lines": [
        "全要素にイベント解析を入れて数字を取る",
        "ウェブアプリを公開する初心者の方に必須でオススメすること",
        "全要素にイベント解析を入れて数字を取ること",
        "タグマネージャーとかで、ユーザーがスクロールした長さ、クリックレート、なにかが表示された回数、もう全部の数字を取るべし",
        "その数字はマーケティング本の何百倍もの価値ある情報になる"
      ]
    },
    {
      "title": "ユーザーにまた来てもらうこと",
      "created": 1574938145,
      "updated": 1574938145,
      "id": "5de0c53b2954df00179da96d",
      "lines": [
        "ユーザーにまた来てもらうこと",
        "初期のウェブアプリがやるべき唯一のこと",
        "「ユーザーにまた来てもらうこと」",
        "これだけ。",
        "どんなに広告を打ってビューをかせいでもその全員が１回見て終わりだと、そのサイトは廃れる。",
        "最初のビューが少数でも再訪問率が高いと自然とPVは伸びる。伸び続ける。",
        "ユーザーがサイトを再訪問する動機",
        "１）新しい情報が更新されてるから見たい",
        "２）自分の投稿への反応を確認したい",
        "１と２を作り出す方法は様々",
        "投稿 => 1,2",
        "Likeボタン => 2",
        "投稿へのコメント => 2, 少し1を含む",
        "フォローとタイムライン => 1"
      ]
    },
    {
      "title": "否定するなら原典を当たる",
      "created": 1574938007,
      "updated": 1574938007,
      "id": "5de0c53b2954df00179da96e",
      "lines": [
        "否定するなら原典を当たる",
        "3週間を超える献血ポスター議論で最も唸った意見はこれ。それで自分も真似した。そこまで当該キャラについて論じるというなら、特に否定的に論じるならば、原典をあたる、それが知的誠実さでしょう。　",
        ""
      ]
    },
    {
      "title": "ランニングの効果",
      "created": 1574937971,
      "updated": 1574937971,
      "id": "5de0c53b2954df00179da96f",
      "lines": [
        "ランニングの効果",
        "２年間、毎晩ランニングした結果",
        "",
        "・何故か腹筋が割れた",
        "・寝付きが格段に良くなった",
        "・肌が綺麗になった",
        "・食欲が無限に湧くようになった",
        "・仕事で疲れなくなった",
        "・野良猫が逃げなくなった",
        "・同じ道をランニングするおっちゃんと仲良くなった",
        "・娘を紹介して貰った",
        "・彼女が出来た",
        "・結婚した"
      ]
    },
    {
      "title": "お客相手にわからないことがあっても顔に出さない",
      "created": 1574937428,
      "updated": 1574937428,
      "id": "5de0c53b2954df00179da970",
      "lines": [
        "お客相手にわからないことがあっても顔に出さない",
        "期間限定で、一人で客先常駐する事になった時の事、「いいか？お前はプロだ。客先はプロが派遣されていると思っている。分からない言葉が出てきたら、一度冷静になってメモしろ。そして情報整理して確認・質問しろ。不安を顔に出すな。」だった。",
        ""
      ]
    },
    {
      "title": "嫌われるプログラマー",
      "created": 1574937358,
      "updated": 1574937358,
      "id": "5de0c53b2954df00179da971",
      "lines": [
        "嫌われるプログラマー",
        "・面倒くさがり（いま楽なほうを選ぶ）",
        "・効率主義（コピペで解決させようとする）",
        "・グチるのが好き",
        "・仕事が早い（手を抜くから早い）",
        "・コミュニケーションスキルが高い（主に世間話）",
        "・無駄なことが嫌い（仕様変更に耐えられない）",
        "・面倒見がいい（後輩にマウントをとる）"
      ]
    },
    {
      "title": "優秀なプログラマ",
      "created": 1574937351,
      "updated": 1574937351,
      "id": "5de0c53b2954df00179da972",
      "lines": [
        "優秀なプログラマ",
        "・面倒くさがり",
        "・効率主義",
        "・無駄なことが嫌い",
        "・ググるのが好き",
        "・新しいもの好きーになる素質"
      ]
    },
    {
      "title": "Google翻訳とDeepLを用いた英語の勉強",
      "created": 1574937323,
      "updated": 1591608378,
      "id": "5de0c53b2954df00179da973",
      "lines": [
        "Google翻訳とDeepLを用いた英語の勉強",
        "",
        "Google翻訳に頼りまくった結果、「機械翻訳しやすい(意味が伝わりやすい)日本語を書く」スキルだけメキメキ上がっている。主語を意識したり、曖昧・汎用的な単語や表現を使わない、文は適度に切るなどなど。あとは翻訳された英語を日本語に再翻訳して可逆性があるか検証してみたり。",
        "",
        "",
        "論文とDeepLの翻訳結果を交互に見るの英語の勉強にもなるなーと思ったが、これはDeepLという高性能AIの出力を教師データにしてワイの英語翻訳タスクに対しての学習が進んでることだと気づき、とうとうAIを教師に人間が学習させられる世界線に到達したことを実感したなう",
        ""
      ]
    },
    {
      "title": "デキる大人って「死ぬ気で時間を作れる」人",
      "created": 1574937292,
      "updated": 1574937292,
      "id": "5de0c53b2954df00179da974",
      "lines": [
        "デキる大人って「死ぬ気で時間を作れる」人",
        "デキる大人って「死ぬ気で時間を作れる」人だと思っていて、前職の先輩もMBAの勉強時間を確保するために飲み会NG、1年間家事代行利用、毎日昼休みは一人でカフェに行く、休日は独学スペースを借りて12時間勉強してたのはホント凄い",
        ""
      ]
    },
    {
      "title": "スタートアップに転職するときは経営陣の経歴をしっかりチェック",
      "created": 1574937275,
      "updated": 1574937276,
      "id": "5de0c53b2954df00179da975",
      "lines": [
        "スタートアップに転職するときは経営陣の経歴をしっかりチェック",
        "スタートアップに転職するときは経営陣の経歴をしっかりチェックするとハズレを引く可能性が下がります。おすすめなのは一度経営者として上場経験または売却経験があり二週目または業界歴が長く業界を知り尽くした上で企業している会社です。",
        ""
      ]
    },
    {
      "title": "お金が関わるサービスを運営するなら顧問弁護士さんをつけた方がいい",
      "created": 1574937249,
      "updated": 1591604301,
      "id": "5de0c53b2954df00179da976",
      "lines": [
        "お金が関わるサービスを運営するなら顧問弁護士さんをつけた方がいい",
        "個人でもベンチャーでも、お金が関わるWebサービスを運営するなら必ず顧問弁護士さんをつけた方がいい。月3ー５万円からお願いできるよ。各種規約のリーガルチェックも頼めるし、何かあったときの保険と考えるとめちゃくちゃ頼れる存在。",
        ""
      ]
    },
    {
      "title": "「内省」のもたらす劇的な効果",
      "created": 1574937223,
      "updated": 1574937223,
      "id": "5de0c53b2954df00179da977",
      "lines": [
        "「内省」のもたらす劇的な効果",
        "HBSの研究によると",
        "「1日15分だけ明確に時間を作り『自分がその日に学んだこと』をしっかり振り返ると、それだけで業務パフォーマンスが10日後に23%も向上」"
      ]
    },
    {
      "title": "アプリを作って脳を活性化",
      "created": 1574937182,
      "updated": 1574937182,
      "id": "5de0c53b2954df00179da978",
      "lines": [
        "アプリを作って脳を活性化",
        "人の脳は創造的で新しい事に挑戦しているだけでドーパミンが出続けて活性化されるらしい。それ以外の事でドーパミンを即物的に得ようとするとすぐ枯渇して逆にやる気ロス。",
        "つまり創造的でチャレンジングなアプリ開発とアップデートをずっと続ければ生涯活性化ｗ",
        ""
      ]
    },
    {
      "title": "睡眠時間",
      "created": 1574937116,
      "updated": 1574937116,
      "id": "5de0c53c2954df00179da979",
      "lines": [
        "睡眠時間",
        "①基本的に若い人は最低7時間の睡眠が必要 ",
        "②5～6時間睡眠の人は、酒2杯飲んでる状態に等しい ",
        "③睡眠削って体に影響ないと思ってる人は数年後集中力、体力が驚くほど低下する ",
        "④5～6時間以下の睡眠は精神面も落ち込む 7時間寝ましょうということみたいです。",
        ""
      ]
    },
    {
      "title": "関心の分離と命名の関係性",
      "created": 1574937096,
      "updated": 1574937096,
      "id": "5de0c53c2954df00179da97a",
      "lines": [
        "関心の分離と命名の関係性",
        "関心の分離と命名の関係性について同僚にいつも説明するのは",
        "「『道具入れ』なんて入れ物を作ると便所タワシと調理器具を入れられてしまう。ちゃんと『掃除具入れ』『調理器具入れ』それぞれ特化した名前と入れ物を作るのが肝要。」"
      ]
    },
    {
      "title": "正常性バイアス",
      "created": 1574936848,
      "updated": 1574936848,
      "id": "5de0c53c2954df00179da97b",
      "lines": [
        "正常性バイアス",
        "道迷い遭難をして登山道外を突き進んじゃう人も、おかしいなと薄っすら思いつつ、謎の力に背中を押されて突き進んで深みにハマる。その、背中を押す力が正常性バイアスです。本当に正しいのか、立ち止まってお茶を飲んで落ち着いてからGPSアプリを使って現在地と進むべき方向を確認しましょう。",
        "",
        ""
      ]
    },
    {
      "title": "マル秘メモの作成＆処分法",
      "created": 1574936828,
      "updated": 1574936828,
      "id": "5de0c53c2954df00179da97c",
      "lines": [
        "マル秘メモの作成＆処分法",
        "必ずフリクションのボールペンで書いて、メモが用済みになったら、コピー機の手差しのところに置きコピー機を通す。そうしたらコピー機の熱で文字が消えるので、それをシュレッダーにかける←以前に紹介したマル秘メモの作成＆処分法だが、実践したことのある人に出会った。",
        ""
      ]
    },
    {
      "title": "ポートフォリオを送る場合、返信用封筒(切手付き)も同封しておく",
      "created": 1574936780,
      "updated": 1574936796,
      "id": "5de0c53c2954df00179da97d",
      "lines": [
        "ポートフォリオを送る場合、返信用封筒(切手付き)も同封しておく",
        "就活中のデザイナー志望さんへ。",
        "ポートフォリオを送る場合、それが入るサイズの返信用封筒(切手付きだとなお良し)も同封しておくと凄く好印象だよ👍",
        "採用担当だった時、規格外サイズだと社用封筒が無くて返すの大変だった。",
        "普段はデザイン業務で追われてるので、こういう気遣い出来る人と働きたい！"
      ]
    },
    {
      "title": "Webデザイナー募集なのに何故ポートフォリオを紙で持って行くの？",
      "created": 1574936752,
      "updated": 1574936752,
      "id": "5de0c53c2954df00179da97e",
      "lines": [
        "Webデザイナー募集なのに何故ポートフォリオを紙で持って行くの？",
        "A:「面接後に社内関係者にプレゼンするから」",
        "面接に立ち会った人だけが採用決定権を持つ訳ではない。ポートフォリオを再度関係者と回し見て面接レポートしながら一緒に吟味するよ。",
        "そういう時にどこでも見られる紙は便利なのです。",
        ""
      ]
    },
    {
      "title": "ツテ無しフリーランスの営業",
      "created": 1574931080,
      "updated": 1574931082,
      "id": "5de0c53c2954df00179da97f",
      "lines": [
        "ツテ無しフリーランスの営業",
        "採用窓口のメールでポートフォリオを受取り、面接で人柄の良さを見てコレなら採用！と思った時「実はフリーになる事も考えていて…」と交渉され、今では敏腕外注者として活躍中！これぞ戦略！",
        ""
      ]
    },
    {
      "title": "初めてフリーランスとして契約する時は単価を低めに設定して1ヶ月契約するのがオススメ",
      "created": 1574931055,
      "updated": 1574931055,
      "id": "5de0c53c2954df00179da980",
      "lines": [
        "初めてフリーランスとして契約する時は単価を低めに設定して1ヶ月契約するのがオススメ",
        "実力以上に単価上げると相手の期待値が高くなりすぎて不満が出るケースが多いです。この場合、一気に評判悪くなるので後々大変です",
        "「1ヶ月お試しでこの値段で」と言っておいて満足してもらったら単価交渉する",
        "いきなり長期契約したがるフリーランスエンジニアには不信感を持ってしまう",
        "相手との相性も分からないのに長期契約するなんてエンジニアからしても怖いはず",
        "そんな提案してくる時点で仕事がないエンジニアでは？こんなに仕事が溢れてるのに仕事がないエンジニアなんておかしくないか？と疑念を抱く"
      ]
    },
    {
      "title": "定型発達者は問題のリカバリーよりも謝罪の方を重視",
      "created": 1574930889,
      "updated": 1574930889,
      "id": "5de0c53c2954df00179da981",
      "lines": [
        "定型発達者は問題のリカバリーよりも謝罪の方を重視",
        " われわれは「事実が大事」だと思っています",
        " 定型発達者は「事実よりも自分の感情が満足すること」を優先する",
        "",
        " 発生した問題のリカバリーよりも謝罪の方を重視します。",
        "  謝る時『メッチャ痛そうな顔』をして下さい",
        "  あなたが申し訳ないと思う時は『お腹に激痛が！』の表情で謝りましょう"
      ]
    },
    {
      "title": "仕事を安請け合いすると雑務処理係に任命される",
      "created": 1562486052,
      "updated": 1574923560,
      "id": "5de0c53c2954df00179da982",
      "lines": [
        "仕事を安請け合いすると雑務処理係に任命される",
        "一度安請け合いすると君は自動的に組織内で雑務処理係に任命され次から次へと雑務を頼まれる。  ",
        "やり甲斐ない上に成果も出せないから昇進も昇給もないとか地獄だろ？  ",
        "仕事の安請け合いは地獄への扉だよ。  ",
        ""
      ]
    },
    {
      "title": "ナメられないためにデザインにお金をかける",
      "created": 1574922442,
      "updated": 1574923475,
      "id": "5de0c53c2954df00179da983",
      "lines": [
        "ナメられないためにデザインにお金をかける",
        "大学生のとき、自力で作ってた名刺と企画書をセンスの良いデザイナーに作ってもらうだけで、  ",
        "大人からの信頼度が突然嘘みたいに上がった。  ",
        "「学生のお遊び」が突然「この子たち本気だな」と捉えられるようになり、  ",
        "当時作ってた雑誌の広告収入がドカンと増えたのです…  "
      ]
    },
    {
      "title": "請負での代金未回収案件",
      "created": 1574921779,
      "updated": 1574923345,
      "id": "5de0c53c2954df00179da984",
      "lines": [
        "請負での代金未回収案件",
        "請負での代金未回収案件で相談を複数件受けたので、私の勝手なアドバイスからすると、",
        "　内容証明は送っておく、期日は到着後１週間以内",
        "　電話連絡の回数は貸金業法に準拠しておく",
        "　期日までの間に債権者が海外に行くなど、金が無い人の行動とは思えない事を見つけたら速やかに回収",
        "こんなところか"
      ]
    },
    {
      "title": "客に「プラグがちゃんと刺さっているか？」を確認させたい時",
      "created": 1562485347,
      "updated": 1574923103,
      "id": "5de0c53c2954df00179da985",
      "lines": [
        "客に「プラグがちゃんと刺さっているか？」を確認させたい時",
        "　客に「プラグがちゃんと刺さっているか？」を確認させたい ",
        "　　そのまま言っても「当たり前だろ！」って言われてしまう。  ",
        "　　そこで「プラグを一旦抜いて、もう一度刺してみてください」と言えば、  ",
        "",
        "客は「やってみます（アッ！これプラグ抜けてるじゃねえか）…認識されました！」となり、平和的に解決できる  "
      ]
    },
    {
      "title": "時間のない中でマニュアルをつくる方法",
      "created": 1574903880,
      "updated": 1574923015,
      "id": "5de0c53c2954df00179da986",
      "lines": [
        "時間のない中でマニュアルをつくる方法",
        "[https://note.com/hasese/n/nf37927ccfa33 再現性高い仕事をする作法｜ベンチャーは60%のマニュアルを作るべき｜長谷 龍一∣経理アウトソース｜note]",
        "",
        " 仕事しながら、やったことやスクショを、WikiとかEvernote に貼り付けていく",
        " 仕事の後にまとめるのはNG",
        "",
        " 具体的な作法：",
        "  初めて仕事をしたら、必ず「その日のうちに」メモを書く。",
        "  二回目に仕事をするとき、メモの完成度を60%まで高める。",
        "  仕事を引き継ぐときは60%のまま渡す",
        "   60%程度にまとめるということは、ある程度構造化ができている状態です。",
        "   すぐに仕事を渡せば何を聞かれても残り30%ぐらいはだいたい思い出せます",
        "   残りの40%を後任に対応してもらうことで、後任者が「自分で手を動かして完成させる」ことができます。",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "英語で技術ブログ書くとき",
      "created": 1562485418,
      "updated": 1574922961,
      "id": "5de0c53c2954df00179da987",
      "lines": [
        "英語で技術ブログ書くとき",
        "すごい発明をしたかも…💡英語で技術ブログ書くとき、HackmdとGoogle翻訳を組み合わせると、Markdown+英語で書きながら、内容をGoogleのAIにチェックさせられる。英語として流暢かはさておき、少なくともGoogleが理解できる英語にはなる。この手法はGitHubにIssueを書く際も応用可",
        ""
      ]
    },
    {
      "title": "仕事より健康",
      "created": 1574903548,
      "updated": 1574922917,
      "id": "5de0c53c2954df00179da988",
      "lines": [
        "仕事より健康",
        "エンジニアになってしばらくは昼も夜もコードを書き続けてひたすら時間を費やす方向でやってたが、",
        "最終的に「適度な運動、規則正しい生活、栄養バランスの取れた食事」を心がけて「脳みそをきちんと回せる状態」でタイムボックスを決めての短期集中型の方が出力は最大化したとご報告しておきます😇",
        ""
      ]
    },
    {
      "title": "最後に質問ありますか？",
      "created": 1574916512,
      "updated": 1574922785,
      "id": "5de0c53c2954df00179da989",
      "lines": [
        "最後に質問ありますか？",
        "あと、「最後に質問ありますか？」って聞かれた時は、",
        "「御社で働くにあたり、現時点で足りていないと思われる点、不安点などあればお聞かせください」",
        "って質問をしておくと良いよ！",
        "",
        "伝わり切ってなかった点や、自分に足りてない点のフィードバックがもらえる。"
      ]
    },
    {
      "title": "勉強会で会場貸ししてる会社はいい転職先",
      "created": 1562485854,
      "updated": 1574922737,
      "id": "5de0c53c2954df00179da98a",
      "lines": [
        "勉強会で会場貸ししてる会社はいい転職先",
        "どこかいい転職先ない？と聞かれたら、最近は「勉強会で会場貸ししてる会社」",
        "と即答するようになりました。",
        ""
      ]
    },
    {
      "title": "文美保険",
      "created": 1574921737,
      "updated": 1574921737,
      "id": "5de0c53c2954df00179da98b",
      "lines": [
        "文美保険",
        "そういえば僕の賃貸の契約がスムーズだったのは文美保険（クリエイター専用保険）だったからという説を聞いてびっくりしました。不動産屋は入居者の健康保険をよく見ているらしく、入居審査だと社会保険（会社員の保険）が最強で、国保が最弱らしいです。文美保険にしといてよかった",
        ""
      ]
    },
    {
      "title": "本質的に顧客が望むのは謝罪ではなく、価値",
      "created": 1574921723,
      "updated": 1574921723,
      "id": "5de0c53c2954df00179da98c",
      "lines": [
        "本質的に顧客が望むのは謝罪ではなく、価値",
        "毎回クレーム対応に行くと受注して帰ってくる先輩がいた。興味があって同行させてもらうと、その先輩は過去の話をひたすら聞いて未来に何ができるかの話だけをしてた。本質的に顧客が望むのは謝罪ではなく、価値だということを学ばせてもらったなあ。",
        ""
      ]
    },
    {
      "title": "トラブらないコツ",
      "created": 1574921697,
      "updated": 1574921697,
      "id": "5de0c53c2954df00179da98d",
      "lines": [
        "トラブらないコツ",
        "WEB制作を、年間100案件以上やってわかった、トラブらないコツ。",
        "・完成イメージをしつこく共有",
        "トラブる理由の多くは、クライアントと完成イメージが不一致な時です。",
        "参考サイトを見せたり、随時進歩を共有するこで、完成イメージを一致させましょう。",
        "それで、大抵気持ちよく仕事ができます。"
      ]
    },
    {
      "title": "〜したいんですが、〇〇って出来ますか？",
      "created": 1574905051,
      "updated": 1574905080,
      "id": "5de0c53c2954df00179da98e",
      "lines": [
        "〜したいんですが、〇〇って出来ますか？",
        "お客さん",
        "「〜したいんですが、〇〇って出来ますか？」",
        "",
        " 仕事できない人",
        "  「出来ません」",
        "",
        " マシな人",
        "  「△△という理由から出来ません」",
        "",
        " 仕事できる人",
        "  「△△という理由から出来ません。代わりに◻︎◻︎という方法なら対応可能ですがどうでしょう？」",
        "",
        " ヤバい人",
        "  「出来ます！」",
        "",
        ""
      ]
    },
    {
      "title": "口呼吸の人はとてもトロそう",
      "created": 1562485022,
      "updated": 1574903815,
      "id": "5de0c53c2954df00179da98f",
      "lines": [
        "口呼吸の人はとてもトロそう",
        "入ったお店の店員さんが、とてもトロそうに見えた。",
        "なぜ、僕はほんの数秒見ただけで、そう感じたのか。",
        "そう思い観察していて、気がついた。",
        "彼の口は、常に開いている。",
        "口を閉じるという、たったそれだけで、印象はかなり変わるように思った。",
        "人は見た目が9割、まさにその通りだと感じた。"
      ]
    },
    {
      "title": "パフォーマンスの高いチームは心理的安全がある",
      "created": 1562485031,
      "updated": 1574903700,
      "id": "5de0c53c2954df00179da990",
      "lines": [
        "パフォーマンスの高いチームは心理的安全がある",
        "Googleがパフォーマンスの高いチームは何が違うのかを分析した結果、",
        "1番の違いはチーム内の「心理的安全」だったそうだ。",
        "つまり何を言っても許されるし安心して働ける環境がパフォーマンスを上げる。",
        "「叱りつける」「圧迫する」コミュニケーションが得意な大企業がジリ貧な理由もよくわかる。"
      ]
    },
    {
      "title": "提案する時は松竹梅の3パターン作って、相手に選んでもらう",
      "created": 1574903473,
      "updated": 1574903473,
      "id": "5de0c53c2954df00179da991",
      "lines": [
        "提案する時は松竹梅の3パターン作って、相手に選んでもらう",
        "最初に入った会社の上司が「人に何かを提案する時は松竹梅の3パターン作って、相手に選んでもらうようにするとスムーズ」っていつも言ってて、選んでもらう理由を聞いたら「相手にも責任負わせれるでしょ」と返答がきてなるほどな？と。",
        ""
      ]
    },
    {
      "title": "失敗報告は褒める",
      "created": 1562485012,
      "updated": 1574903436,
      "id": "5de0c53c2954df00179da992",
      "lines": [
        "失敗報告は褒める",
        "　ナイス報告",
        "　おかげで傷が浅くなった。",
        "　早めに言ってくれてありがとう。",
        "",
        "ってやってたら、そのうち下から逆にツッコミ入るぐらい皆でやってくれるようになるよ。",
        "そのために情報共有とか整理は頑張らないといけないけど。俺一人が頑張るより効率良くなるし。"
      ]
    },
    {
      "title": "質問するときはWhyを除いた4W1Hでする",
      "created": 1574903077,
      "updated": 1574903375,
      "id": "5de0c53c2954df00179da993",
      "lines": [
        "質問するときはWhyを除いた4W1Hでする",
        "新卒との1on1で「Why」の質問を捨てたら、相手が話してくれる情報量が格段に増えた！",
        " 新卒の「研修楽しいです！」に対して「[* なんで]楽しいの？」と聞くと言葉に詰まるけど",
        " 「研修で[* 何やってる]時が楽しいの？」と聞くことで具体的な回答が返ってくる",
        "",
        "",
        "若い頃、『なぜ・どうして』から始まる質問を繰り返す僕に、先輩が教えてくれた質問のコツ。",
        "質問は自分の推論を前提と同時に提示して、発展的な結論を導出するために使え。その質問をWhyを除いた4W1Hで置き換えろ。回答に論理性が必要な『Why型質問』は、自分に問う質問であって相手に聞く質問ではない",
        "",
        "",
        "相手の行動の理由を知りたいとき、「どうして○○したのですか？」  ",
        "よりは、「○○したのには、なにか理由があるのですか？」  ",
        "と尋ねておいて、そこから深めていくほうが良い。  ",
        "対話を重視する人には常識的なことだが、今日まさに使った手法なので記しておく。"
      ]
    },
    {
      "title": "ミスしたときにするのは、指摘の連絡だけ。叱るのは人道とルールに反したと思った相手だけ",
      "created": 1562484817,
      "updated": 1574903284,
      "id": "5de0c53c2954df00179da994",
      "lines": [
        "ミスしたときにするのは、指摘の連絡だけ。叱るのは人道とルールに反したと思った相手だけ",
        "「上司って僕が仕事でミスしても全然怒りませんよね」って深く考えずに言ったら、",
        "「俺がするのは指摘の連絡だけ。叱るのは人道とルールに反したと思った相手だけ」って返されて、",
        "このひと人間出来すぎか…？ってなってる。"
      ]
    },
    {
      "title": "無料はロクでもないやつを呼び寄せ、わずか100円でも「本当に使ってみたい人」をしっかり選別できる",
      "created": 1574903207,
      "updated": 1574903207,
      "id": "5de0c53c2954df00179da995",
      "lines": [
        "無料はロクでもないやつを呼び寄せ、わずか100円でも「本当に使ってみたい人」をしっかり選別できる",
        "",
        "「無料コンサートを開くと凄まじくマナーが悪い。そこで100円にしたところ劇的に改善した」という\"金の壁\"に当てはまると思う。無料はロクでもないやつを呼び寄せ、わずか100円でも「本当に使ってみたい人」をしっかり選別できる",
        ""
      ]
    },
    {
      "title": "優秀な方ほど、自分を出さずに誰かを誉める",
      "created": 1574903165,
      "updated": 1574903181,
      "id": "5de0c53c2954df00179da996",
      "lines": [
        "優秀な方ほど、自分を出さずに誰かを誉める",
        "優秀な方ほど、自分を出さずに誰かを誉めるのです。",
        "私はここ四半世紀というもの、自信とは程遠いところで生きていますので、、、",
        "でも、優秀な方からいただいた言葉は小さな何かになりますから謹んで受け取らせていただき、心のなかに納めておきます😌",
        ""
      ]
    },
    {
      "title": "怒った上司 怒られた部下",
      "created": 1565676558,
      "updated": 1565676561,
      "id": "5de0c53c2954df00179da997",
      "lines": [
        "怒った上司 怒られた部下",
        "[https://gyazo.com/dcec638a51caa79d7754549355c3c107]",
        ""
      ]
    },
    {
      "title": "ディレクトリ構成",
      "created": 1565673971,
      "updated": 1591607519,
      "id": "5de0c53c2954df00179da998",
      "lines": [
        "ディレクトリ構成",
        "[https://twitter.com/suin/status/1263624124129095685 suin❄️TypeScript入門書執筆中さんはTwitterを使っています 「@tkek321 担当の境界を意識してこうします😌 元ツイの左図だと、コントローラー担当、ドメイン担当、テーブル担当が別れているチームを想定したアーキテクチャになっていますが、僕の経験上ではそれよりも、業務ごとに担当が分かれ、コントローラからDBまで一手に引き受けることのほうが自然なので。 https://t.co/abNnVOjX1R」 / Twitter]",
        "",
        "右(2枚目)は「技術駆動パッケージング」というアンチパターン。設計パターンごとにまとめるのは一見綺麗に整頓されているように見えるが、ドメインの関心事が設計パターンで分断されてしまい、業務概念ごとにまとまるべきものが低凝集になってしまう。特にマイクロサービス化を試みる場合非常に困る。",
        "",
        "○のパターン",
        "[https://gyazo.com/4b336bbccad5f3b4fd08295b4a71c45c]",
        "",
        "アンチパターン",
        "[https://gyazo.com/10de9afd745197402c977a262391c7a1]",
        "",
        "",
        "[https://gyazo.com/2884ea37b0fd21072a7c9e7b9b3ccf87]",
        "",
        ""
      ]
    },
    {
      "title": "説明書など、内容が難しそうな物をデザインする時に簡単そうに見せられるポイント",
      "created": 1565673740,
      "updated": 1565673750,
      "id": "5de0c53c2954df00179da999",
      "lines": [
        "説明書など、内容が難しそうな物をデザインする時に簡単そうに見せられるポイント",
        "・フォントは丸ゴシック",
        "・図形は角丸にして親しみ感",
        "・アイコンを入れる",
        "・文字間は広めにとる",
        "・暖色を使ってみる",
        "・強調箇所は太めのマーカー",
        "",
        "これだけで、簡単そうに見えて",
        "難しさのハードルが下がるマジック",
        "[https://gyazo.com/6b199266bf1849216f41cbeedc4c5f2a]",
        ""
      ]
    },
    {
      "title": "ICレコーダーは2つ用意しとくといいですよ。",
      "created": 1565673520,
      "updated": 1565673520,
      "id": "5de0c53c2954df00179da99a",
      "lines": [
        "ICレコーダーは2つ用意しとくといいですよ。",
        "ICレコーダーは2つ用意しとくといいですよ。おもむろに目の前に置くぶんと、見えないところにこっそり置いて全部録音しておくぶんと。ICレコーダーのスイッチが入ってない時に脅しや暴言吐くクレーマーけっこういますから",
        ""
      ]
    },
    {
      "title": "ちゃんと寝る＝コスパ最強",
      "created": 1565673226,
      "updated": 1565673228,
      "id": "5de0c53c2954df00179da99b",
      "lines": [
        "ちゃんと寝る＝コスパ最強",
        "むかし125時間起きっぱなしでいたら部屋で盛大にコケて「あっぶね〜！」って立ち上がって時計見たら26時間後で戦慄した。",
        "その後わりとマトモな生活を送ったが15日以上経っても凡ミスが減らず、想像以上に脳ミソ痛めつけてた現実を知る。",
        "結局「ちゃんと寝る＝コスパ最強」という実験結果を得た。"
      ]
    },
    {
      "title": "チェックするシステム",
      "created": 1562487080,
      "updated": 1562487080,
      "id": "5de0c53c2954df00179da99c",
      "lines": [
        "チェックするシステム",
        "Google では社員にクレジットカードを渡して、それぞれ経費のルールに従ってくれるように信用する方が、  ",
        "多少の不正や間違いはあるにしても、色々と提出させたりチェックする経費管理システムより余程安上がりだという、  ",
        "実験結果に至った。…科研や大学経費も少額出費に関してはそうしてほしい。"
      ]
    },
    {
      "title": "とにかく続けなさい。みんな辞めていくから",
      "created": 1562487056,
      "updated": 1562487056,
      "id": "5de0c53c2954df00179da99d",
      "lines": [
        "とにかく続けなさい。みんな辞めていくから",
        "先生にはいつも「とにかく続けなさい。みんな辞めていくから。  ",
        "どんなに才能があって秀でた人も辞めたらおしまい」と言われていた。  ",
        "実際、本当に実力があり才能がある人も辞めて行った。続けてる人が活躍している。  ",
        "「器用じゃない、才能がない」でも好きなら続けてたら良い。みんな辞めていくから。  "
      ]
    },
    {
      "title": "幼少時の教育格差",
      "created": 1562487008,
      "updated": 1562487008,
      "id": "5de0c53c2954df00179da99e",
      "lines": [
        "幼少時の教育格差",
        "",
        "幼少時の教育格差って人生に絶大な影響を及ぼすんだなってつくづく思いました。  ",
        "親から存分に支援されてきて、その恩恵に気付かずに「努力しない馬鹿が悪い」と笑う奴もいますが、  ",
        "努力の背景にも“努力ができ、結果を褒めてもらえる環境に恵まれたかどうか“という格差がありますよね。  ",
        ""
      ]
    },
    {
      "title": "OECD加盟国の政府総債務残高の推移",
      "created": 1562486899,
      "updated": 1562486899,
      "id": "5de0c53c2954df00179da99f",
      "lines": [
        "OECD加盟国の政府総債務残高の推移",
        "OECD加盟国の政府総債務残高の推移を見ると全ての国で増加していることが分かる。  ",
        "日本は世界最悪の勢いで「国の借金」が増加していると思っている人が多いだろうが、  ",
        "実は日本は驚くほど緩やかな増加であることも分かる。  ",
        "※褒めてない。もっと増やすべきだった。  "
      ]
    },
    {
      "title": "残業代はむしろ使用者に対するペナルティ",
      "created": 1562486879,
      "updated": 1562486879,
      "id": "5de0c53c2954df00179da9a0",
      "lines": [
        "残業代はむしろ使用者に対するペナルティ",
        "竹中平蔵氏が、残業代について、「残業代という補助金を出すのはおかしい」と言ったようだけど、  ",
        "労基法は、原則「1日8時間、週40時間を超えて働かせてはいけない」という立場だからね。  ",
        "残業代はむしろ使用者に対するペナルティなのよ。「盗人に刑罰を科すのはおかしい」くらいトンチンカンな意見。  "
      ]
    },
    {
      "title": "貧困の苦しみと言うのはそこから逃れる明日が見えない苦しみ",
      "created": 1562486865,
      "updated": 1562486865,
      "id": "5de0c53c2954df00179da9a1",
      "lines": [
        "貧困の苦しみと言うのはそこから逃れる明日が見えない苦しみ",
        "貧困の苦しみと言うのは物理的なその瞬間の苦しみだけでなくそこから逃れる明日が見えない苦しみで、  ",
        "限られた一定期間がまんすればこの苦しみから逃れて戻る場所がある、  ",
        "という人間にはけして味わうことのできないものだと思う。  ",
        "実際に溺れている人と洗面器に顔をつけて息を止めてる人くらい違うかと。  "
      ]
    },
    {
      "title": "インセル 無敵の人",
      "created": 1562486755,
      "updated": 1562486840,
      "id": "5de0c53c2954df00179da9a2",
      "lines": [
        "インセル 無敵の人",
        "",
        "秋葉原無差別殺傷事件から10年ですが,  ",
        "加藤智大の「死ぬ気になればなんでもできるだろ 死ぬ気にならなくても何でもできちゃう人のセリフですね」  ",
        "「また長い一日が始まる ただただ苦痛なだけ」あたりは共感度高いので",
        "僕も通り魔にならないようにしなきゃですね  ",
        "",
        "",
        "「人殺し」には二つ凄いところがあって「負け組が一瞬で勝ち組を凌駕してしまえる」ところ。  ",
        "もう一つは「一人殺しても自分は死刑にならない」ところです。  ",
        "つまり一人殺すだけでほとんど「完全勝利」に近いことになってしまう。  ",
        "",
        "",
        "hagex殺害事件いろいろ言われてるけど、  \"無職42歳で人生完全投棄を決断して凶行に走るひきこもり\" って  ",
        "一昔前はレアポケモンみたいな扱いだったのに、  みんな結構「なるほどね」と受け入れていて、  ",
        "いよいよ氷河期世代がのっぴきならない世代に入ってきたんじゃないかな、  ",
        "という気がしてならない。  ",
        "",
        "",
        "インセルの話題で「非モテ男がテロリストに！」と盛り上がるのはいいですけど、  ",
        "あと20年で男性の3人に1人は生涯非婚になるのでこれをどう考えていくべきかという話ですね。  ",
        ""
      ]
    },
    {
      "title": "大人しいのは社会性の欠如と紙一重",
      "created": 1562486815,
      "updated": 1562486815,
      "id": "5de0c53c2954df00179da9a3",
      "lines": [
        "大人しいのは社会性の欠如と紙一重",
        "低能先生も今日の交番を襲撃した元自衛官も「大人しい」という証言記事が出ているけど、  ",
        "大人しいのは社会性の欠如と紙一重。自分の内面を話すと浮いてしまうから沈黙を学習して内向的になる。  ",
        "ネットで罵詈雑言を投稿しているのも大部分は大人しい人。リアルで明るく話す人はネットでは寡黙な場合が多い  ",
        ""
      ]
    },
    {
      "title": "団塊の言う「昔は貧しかった」",
      "created": 1562486638,
      "updated": 1562486713,
      "id": "5de0c53c2954df00179da9a4",
      "lines": [
        "団塊の言う「昔は貧しかった」",
        "団塊の言う「昔は貧しかった」は「携帯電話とかテレビゲームはなかった」という意味でしかなく、  ",
        "奴らは「働けば働くほど給料ガンガン上がってほとんど誰でも結婚できて  ",
        "豊かになって家も車も買えて老後の心配もない」という  ",
        "今では夢のような生活を手にしていたのだ。  ",
        "",
        "昭和は労働時間も長かったしパワハラセクハラ全開だったかも知れないけど、  ",
        "中卒が金の卵で結婚して家も建てれて子供を大学に行かせられたのと、  ",
        "院卒でもワープワで家どころか車も買えず、子供を大学どころか結婚も出来ないのと、  ",
        "どっちがハードモードなのか？  "
      ]
    },
    {
      "title": "インフレターゲットはなぜ2%か",
      "created": 1562486690,
      "updated": 1562486690,
      "id": "5de0c53c2954df00179da9a5",
      "lines": [
        "インフレターゲットはなぜ2%か",
        "インフレターゲットは、何故２％に置くのかから、整理してほしい連中です…(¯―¯٥)  ",
        "この２％はあくまで完全雇用になるインフレ率が２％ということから行っているということです…(¯―¯٥)",
        ""
      ]
    },
    {
      "title": "今の若い世代の「金がない」",
      "created": 1562486656,
      "updated": 1562486656,
      "id": "5de0c53c2954df00179da9a6",
      "lines": [
        "今の若い世代の「金がない」",
        "",
        "ほんとに若い世代が「できないから金がない」なら救いがあるんだけど、  ",
        "今の若い世代の「金がない」は「勉強もまあまあできて、大学までいって、  ",
        "それで就職してももらえる金額がこんなもん・・・」という感覚だから困ってるわけで。  ",
        "「もっとがんばればいいだろ」というのが逆効果にしかならないんだよ。  ",
        "",
        ""
      ]
    },
    {
      "title": "昔の労働時間 テレビ",
      "created": 1562486614,
      "updated": 1562486619,
      "id": "5de0c53c2954df00179da9a7",
      "lines": [
        "昔の労働時間 テレビ",
        "だいたい今の70代が猛烈に働いていたのなら  ",
        "相撲の結びの一番が6時前で6時半からナイターが始まるわけないだろう。  ",
        "5時で仕事終わっていたんだ。  "
      ]
    },
    {
      "title": "緊縮財政のギリシヤ",
      "created": 1562486548,
      "updated": 1562486556,
      "id": "5de0c53c2954df00179da9a8",
      "lines": [
        "緊縮財政のギリシヤ",
        "財政は黒字になったけど、貧困率は20%になりGDPは8年で25%減って、  ",
        "これ、戦争に負けたのとおんなじだろ。いや、この道はダメだ。  ",
        "数字合わせをするために人が死ぬなんてバカげてる。  ",
        "",
        ""
      ]
    },
    {
      "title": "緊縮財政のギリシャ",
      "created": 1562486468,
      "updated": 1562486517,
      "id": "5de0c53c2954df00179da9a9",
      "lines": [
        "緊縮財政のギリシャ",
        "財政は黒字になったけど、貧困率は20%になりGDPは8年で25%減って、  ",
        "これ、戦争に負けたのとおんなじだろ。いや、この道はダメだ。  ",
        "数字合わせをするために人が死ぬなんてバカげてる。  ",
        "",
        "",
        "財政は黒字になったけど、貧困率は20%になりGDPは8年で25%減って、  ",
        "これ、戦争に負けたのとおんなじだろ。いや、この道はダメだ。  ",
        "数字合わせをするために人が死ぬなんてバカげてる。  ",
        "",
        ""
      ]
    },
    {
      "title": "人間の幸福度に一番大きな影響を与えるのは、『幼少期の両親との人間関係』",
      "created": 1562486413,
      "updated": 1562486413,
      "id": "5de0c53c2954df00179da9aa",
      "lines": [
        "人間の幸福度に一番大きな影響を与えるのは、『幼少期の両親との人間関係』",
        "「ハーバード大学の研究によれば、人間の幸福度に一番大きな影響を与えるのは、  ",
        "お金や地位ではなく、『幼少期の両親との人間関係』である…」  ",
        "救いが無い  "
      ]
    },
    {
      "title": "認知的不協和",
      "created": 1562486370,
      "updated": 1562486370,
      "id": "5de0c53c2954df00179da9ab",
      "lines": [
        "認知的不協和",
        "ブラック企業の人がすぐに「やりがい」を語り始めるのは、認知的不協和だったんだね。　  ",
        ""
      ]
    },
    {
      "title": "奴隷の首輪自慢",
      "created": 1562486148,
      "updated": 1562486148,
      "id": "5de0c53c2954df00179da9ac",
      "lines": [
        "奴隷の首輪自慢",
        "定額で働かされることに慣れてしまった教員の中には、  ",
        "自分と同程度に残業や休日出勤ができない教員を役立たず呼ばわりするような人もいます。  ",
        "哀れな奴隷は自分が幸せになることよりも他人が自分程度に不幸になることを望みます。  ",
        "定額で働かせた業界の結果サンプルとしてお知りおき下さい。  ",
        ""
      ]
    },
    {
      "title": "自殺の前に「就業中意味もなく突然涙が出て来て止まらなくなる」現象",
      "created": 1562486132,
      "updated": 1562486132,
      "id": "5de0c53c2954df00179da9ad",
      "lines": [
        "自殺の前に「就業中意味もなく突然涙が出て来て止まらなくなる」現象",
        "（某先生へ）職業柄、過労自殺の裁判例をたくさん見てますが、  ",
        "みんな自殺の前に「就業中意味もなく突然涙が出て来て止まらなくなる」現象が高確率で起きてます。  ",
        ""
      ]
    },
    {
      "title": "雑多ひとまとめメモ",
      "created": 1562484277,
      "updated": 1562485734,
      "id": "5de0c53c2954df00179da9ae",
      "lines": [
        "雑多ひとまとめメモ",
        ""
      ]
    },
    {
      "title": "ファイアウォールの設定",
      "created": 1562485356,
      "updated": 1562485357,
      "id": "5de0c53c2954df00179da9af",
      "lines": [
        "ファイアウォールの設定",
        "ファイアウォールの設定を間違えてサーバにsshできなくなってしまっても  ",
        "慌てず焦らずIPv6でつないでみよう。ほら繋がった。  ",
        "よいこのみんなはIPv6側の設定を忘れないようにしようね  "
      ]
    },
    {
      "title": "ITリテラシー低めの社員に調べ方を教える",
      "created": 1562485256,
      "updated": 1562485264,
      "id": "5de0c53c2954df00179da9b0",
      "lines": [
        "ITリテラシー低めの社員に調べ方を教える",
        "ITリテラシー低めの社員からサポートを求められた時、  ",
        "笑顔でその人の席まで行き、「実は私も知らないんですよ〜」と言いながら、  ",
        "その人のパソコンでググって調べてから対応していた結果、問い合わせが減った気がする。  "
      ]
    },
    {
      "title": "引用元や参考文献書く",
      "created": 1562485197,
      "updated": 1562485197,
      "id": "5de0c53c2954df00179da9b1",
      "lines": [
        "引用元や参考文献書く",
        "初心者の技術記事も「分からんかったけどここ見てやった」と  ",
        "引用元や参考文献書くだけで数段価値が上がるのに何故やられないのかについて考えてたけど、  ",
        "そういう文化を作れなかったオッサンがわるいといういつもの結論に落ち着けた。良かった。  "
      ]
    },
    {
      "title": "エンジニアの資質で最も重要なのが好奇心",
      "created": 1562485186,
      "updated": 1562485186,
      "id": "5de0c53c2954df00179da9b2",
      "lines": [
        "エンジニアの資質で最も重要なのが好奇心",
        "好奇心がずば抜けて高かった後輩、同期、先輩はほとんど何かしらの形でエンジニアとして大成している気がする。  ",
        "あと自分が生徒さんを見るときもやらされではなく高い好奇心を持ってるかを見てる場合が多いなぁ。"
      ]
    },
    {
      "title": "人間は論理よりも納得感を大事",
      "created": 1562485003,
      "updated": 1562485003,
      "id": "5de0c53c2954df00179da9b3",
      "lines": [
        "人間は論理よりも納得感を大事",
        "学生の時に3年間営業してて、人間は論理よりも納得感を大事にしている人が多く、",
        "人間の意思決定はほぼバグってるってことに気づけたのはすごい面白いなぁと思った。",
        "与えられた知識があっても、自分の過去から信じたい情報を信じる。変わるコストは払いたくないとか。",
        ""
      ]
    },
    {
      "title": "TWITTERメモ - 目次 -",
      "created": 1575011778,
      "updated": 1595738924,
      "id": "5de0c5c068881a0017b39a5e",
      "lines": [
        "TWITTERメモ - 目次 -",
        "",
        "　仕事",
        "　　[https://paiza.hatenablog.com/archive/category/%E8%BB%A2%E8%81%B7%E3%83%BB%E5%B0%B1%E8%81%B7 転職・就職 カテゴリーの記事一覧 - paiza開発日誌]",
        "　　転職",
        "　　　全般・その他",
        "　　　　[https://qiita.com/yama-t/items/0dc67cda41a2eb710eeb エンジニアの転職メモ - Qiita]",
        "   　[https://qiita.com/yassai/items/3bdab4bf0c686a51b27a エンジニアを名乗るなら、いつでも転職できるようにしておこう - Qiita]",
        "    [就業規則・雇用契約書を書面で交付してもらう]",
        "  　　[仕事募集時、男性は60%くらい要件を満たしていればアプライする]",
        "   　[https://qiita.com/newta/items/9620056bb991f4b0f03d エンジニアが転職する時に考えることを採用面接官をしてる立場から書いてみた - Qiita]　-> この人の記事をチェックしてみる。人事なので",
        "　　　転職先の選び方",
        "　　　 [勉強会で会場貸ししてる会社はいい転職先]",
        "   　[客先常駐企業の引き合いを減らすには服装自由」といれとく]",
        "   　[会社を選ぶときは関東IT健保に加入しているかをみる]",
        "   　[スタートアップに転職するときは経営陣の経歴をしっかりチェック]",
        "　　　職務経歴書",
        "　　　　[職務経歴書やキャリアシートには失敗談を書く]",
        "　　　 https://aereal.org/resume",
        "　　　　[https://qiita.com/newta/items/77eb14b1d67bc7ef1980 見たいエンジニアの職務経歴書の書き方 - Qiita]",
        "    [https://qiita.com/GussieTech/items/eb6b52ddf6c144c02c9e 職務経歴書（スキルシート）を作ったので公開します。「書くべきポイント」と「アンチパターン」まとめ - Qiita]",
        "   　[Webデザイナー募集なのに何故ポートフォリオを紙で持って行くの？]",
        "   　[ポートフォリオを送る場合、返信用封筒(切手付き)も同封しておく]",
        "　　　面接",
        "　　　　[最後に質問ありますか？]",
        "    [面接時聞くこと]",
        "  　　[https://paiza.hatenablog.com/entry/2020/05/22/%E8%BB%A2%E8%81%B7%E3%81%97%E3%81%9F%E3%81%84%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E5%90%91%E3%81%91%E3%83%BB%E6%9C%80%E7%B5%82%E9%9D%A2%E6%8E%A5%E3%81%A7%E3%81%AE%E9%A0%BB%E5%87%BA%E8%B3%AA 転職したいエンジニア向け・最終面接での頻出質問と対策まとめ - paiza開発日誌]",
        "  　　[https://paiza.hatenablog.com/entry/2019/12/19/%E8%BB%A2%E8%81%B7%E3%81%97%E3%81%9F%E3%81%84%E3%82%A8%E3%83%B3%E3%82%B8%E3%83%8B%E3%82%A2%E3%81%8C%E3%82%84%E3%82%89%E3%81%8B%E3%81%97%E3%81%8C%E3%81%A1%E3%81%AA%E9%9D%A2%E6%8E%A5%E3%81%AE%E8%90%BD 転職したいエンジニアがやらかしがちな面接の落選理由と対策 - paiza開発日誌]",
        "   　[https://qiita.com/kamesennin/items/fc8242f7c395b828f650 エンジニア採用面接での「質問項目」と「意図」を公開する - Qiita]",
        "",
        "",
        "　 フリーランス・契約関連",
        "　　　※ コミュニケーションにまつわるものはここには書かない",
        "　　　[請負よりも準委任]",
        "　　　[私が地雷案件（≠炎上案件）を避けるためにやってたこと]",
        "　　　[フリーランスエンジニアの時給相場]",
        " 　　[契約書の書き方(瑕疵)]",
        " 　　[WEBサイト制作業務委託基本契約書21条 準委任にも使える]",
        " 　　[オーダーフォーム作るとしっかりしてそうと思われる]",
        " 　　[契約書を巻く前に作業をさせる人には注意する]",
        " 　　[初めてフリーランスとして契約する時は単価を低めに設定して1ヶ月契約するのがオススメ]",
        " 　 [ツテ無しフリーランスの営業]",
        "　　　[ICレコーダーは2つ用意しとくといいですよ。]",
        "　　 [請負での代金未回収案件]",
        "　　 [契約を締結する前にキャンセルされた時の代金の請求法]",
        "　　 [マイルストーン請求]",
        "　　 [見積もりの経験則]",
        "",
        "",
        "　　アプリ開発",
        "　　 [https://qiita.com/quqjp/items/8e42f3479da3b8a905ee leisim/logger をつかってログ出力を行う - Qiita]",
        "　　 [https://tech.studyplus.co.jp/entry/2020/04/13/102204 アプリ内課金の定期購入（サブスクリプション）をFlutterとFirebaseで実装するときのポイント - Studyplus Engineering Blog]",
        "　　　[全要素にイベント解析を入れて数字を取る]",
        "　  [ユーザーにまた来てもらうこと]",
        "　  [FABでご意見の受け付け]",
        "　  [ファイアウォールの設定]",
        "　  [わかりやすいトグルスイッチ]",
        "　　　[エラー時のUIを工夫してより適切な情報をユーザーから引き出す]",
        "　　　[https://qiita.com/MinoDriven/items/37599172b2cd27c38a33 関心の分離を意識した名前設計で巨大クラスを爆殺する - Qiita]",
        "　　 [ディレクトリ構成]",
        "　　　[関心の分離と命名の関係性]",
        "　　\t[お金が関わるサービスを運営するなら顧問弁護士さんをつけた方がいい]",
        "　　\t[無料はロクでもないやつを呼び寄せ、わずか100円でも「本当に使ってみたい人」をしっかり選別できる]",
        "　　\t[https://qiita.com/usugita_san/items/80da897afb4c7edab8a5?utm_content=buffere1d48&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer 僕はこうやって画面設計書を作ってる（Webシステムにおける簡潔な画面設計書の例） - Qiita]",
        "　　　[問い合わせ時にuuidを入れておくとエラーの内容がすぐわかる]",
        "",
        "　　心構え",
        "　　　[とにかく続けなさい。みんな辞めていくから]",
        "　　 [エンジニアの資質で最も重要なのが好奇心]",
        "",
        "　　業務効率化",
        "　　 [引用元や参考文献書く]",
        " 　 [英語で技術ブログ書くとき]",
        " 　 [時間のない中でマニュアルをつくる方法]",
        " 　　[説明書など、内容が難しそうな物をデザインする時に簡単そうに見せられるポイント]　",
        "　 　[トリプルチェックの弊害]",
        " 　　[優秀だと思わせる仕事ぶりまとめ]",
        " 　　自分が仕事をお願いする立場になって、『返事が早い』『性格が良い』ととても気持ちよく仕事できることに気づき、我が身のふりかたも気を付けようと思いました",
        "",
        "　 コミュニケーション",
        "　 　内部向け",
        "　 　 [信頼残高]",
        "　 　　[自分が何されて嬉しかったか相手に伝えるのが大事]",
        "　 　　[小泉進次郎構文は、他人にお願い事をするときにめちゃめちゃ効果を発揮する]",
        "　 　　[https://qiita.com/seki_uk/items/4001423b3cd3db0dada7 質問は恥ではないし役に立つ - Qiita]",
        "   　[http://www.hyuki.com/writing/techask.html 技術系メーリングリストで質問するときのパターン・ランゲージ]",
        "    [成果を誉める]",
        "    [褒めると仕事が進む]",
        "    [パフォーマンスの高いチームは心理的安全がある]",
        "  　 [失敗報告は褒める]",
        "  　　[仕事を安請け合いすると雑務処理係に任命される]",
        "  　　[怒った上司 怒られた部下]",
        "    [ミスしたときにするのは、指摘の連絡だけ。叱るのは人道とルールに反したと思った相手だけ]",
        "  　 [優秀な方ほど、自分を出さずに誰かを誉める]",
        "  　 [質問するときはWhyを除いた4W1Hでする]",
        "　 　外部向け",
        "　 　\t[初取引の際「無礼は３回目で」「罵倒は１回目で」アウトと決めて]",
        "　 　　[挨拶の時お土産を持っていくと喜ばれる]",
        "　 　　[お客相手にわからないことがあっても顔に出さない]",
        "　 　　[ITを知らない人に説明する時、医者と手術に例えるとうまくいく]",
        "　　　 [ITリテラシー低めの社員に調べ方を教える]",
        "　　　　[客に「プラグがちゃんと刺さっているか？」を確認させたい時]",
        "  　　[〜したいんですが、〇〇って出来ますか？]　",
        "　 　 [継続的にクライアントを満足させる]",
        "　 　　[提案する時は松竹梅の3パターン作って、相手に選んでもらう]",
        "  　 [ナメられないためにデザインにお金をかける]",
        "  　 [できませんと言わずに「できますよ。〇〇(無理な条件)です。」という]",
        "  　 [同意に至らないやり取りでも証跡を残す]",
        "",
        "　健康",
        "　　[ちゃんと寝る＝コスパ最強]",
        "　 [仕事より健康]  ",
        "　　[睡眠時間]",
        "　　[6時間でも8時間でも生産性は変わらんしずっとイライラしてる]",
        "",
        " ライフハック　",
        "　 [質問するときはWhyを除いた4W1Hでする]",
        " 　[定型発達者は問題のリカバリーよりも謝罪の方を重視]",
        "　　[アプリを作って脳を活性化]",
        "　\t[「内省」のもたらす劇的な効果]",
        "　　[本質的に顧客が望むのは謝罪ではなく、価値]",
        "  [口呼吸の人はとてもトロそう]",
        "  [人間は論理よりも納得感を大事]",
        "  [大人しいのは社会性の欠如と紙一重]",
        "  [正常性バイアス]",
        " 　[褒められて伸びるタイプは伸びる]",
        "  [マル秘メモの作成＆処分法]",
        "  [Google翻訳とDeepLを用いた英語の勉強]",
        "  [ルールを見極めて（特に判定方法と勝敗条件）地道に毎日取り組む]",
        "  [日本ラグビーの勝因]",
        "  [ランニングの効果]",
        "  [否定するなら原典を当たる]",
        "  [事実と意見を区別して話す技術]",
        "  [英語の発音を矯正するなら]",
        "  [口コミは地域住人の民度を反映している]",
        "　 [正しいイスの座り方]",
        "　 [ロードバイクを経費で買える]",
        "　 [英語を書く手順]",
        "　　[蚊の毒素は43°C以上で中和される]",
        "　　[ジョージアは以下の理由で最近日本人の若者に支持されてる]",
        "",
        "",
        "　[* 経済]",
        "　　[* 経済]",
        "　　　[インフレターゲットはなぜ2%か]",
        "　　　[金融政策のざっくりとした波及の流れ]",
        "　　[* 貧困]",
        "　　　[自殺の前に「就業中意味もなく突然涙が出て来て止まらなくなる」現象]",
        "　　　[奴隷の首輪自慢]",
        "　　　[認知的不協和]",
        "　　　[今の若い世代の「金がない」]",
        "  　[インセル 無敵の人]",
        "  　[貧困の苦しみと言うのはそこから逃れる明日が見えない苦しみ]",
        "  　[緊縮財政のギリシヤ]",
        "　　[* 格差]",
        "　　　[人間の幸福度に一番大きな影響を与えるのは、『幼少期の両親との人間関係』]",
        "　　　[幼少時の教育格差]",
        "　　　[昔の労働時間 テレビ]",
        "　　　[団塊の言う「昔は貧しかった」]",
        "　　[* その他]",
        "　　　[残業代はむしろ使用者に対するペナルティ]",
        "",
        "　その他",
        "　　[ツールと業務の標準化]　",
        "  [賃貸]",
        "　　[統計グラフ集]",
        "　　",
        "",
        "",
        "",
        "",
        "",
        "[https://blog.craftz.dog/how-to-handle-credit-card-frauds-on-stripe-for-your-saas-51ef21a331aa Stripeベースの自作サービスでカードの不正利用があった場合の対処法 - 週休７日で働きたい]",
        "",
        "[https://hirohitorigoto.info/archives/831 法人税増税しろと言っている人のロジックがよくわからない - ひろのひとりごと]",
        "",
        "[https://www.sohamkamani.com/blog/how-to-write-good-documentation/ How to Write Good Documentation (And Its Essential Elements) - Soham's blog]",
        "",
        "[https://gramener.github.io/visual-vocabulary-vega/ データの可視化手法まとめ｜Visual Vocabulary ft. Vega]",
        "",
        "みんな、医療保険は入れるうちに入っておこうね。都民共済で良いから。月1000円からあるから。月2000円なら50万くらいは返ってくるから。明日は我が身",
        "",
        "",
        "  [https://qiita.com/teradonburi/items/913fb8c311b9f2bdb1dd Flutter入門のためのDart入門 - Qiita]",
        "  [https://qiita.com/sekitaka_1214/items/129f41c2fbb1dc05b5c3 Flutter DartのclassとFirestoreデータを相互変換、そしてCRUDへ - Qiita]",
        "  [https://design.zaim.co.jp/n/n04086df6a583 新規登録 UI まとめてみた｜あき]",
        "  [http://photoshopvip.net/99366 商用可！手書きでナチュラルな無料フォント100個まとめ 2019年完全版（和 / 英文対応） - PhotoshopVIP]",
        "",
        ""
      ]
    },
    {
      "title": "開発 - 目次 -",
      "created": 1575022924,
      "updated": 1595884945,
      "id": "5de0f143467fb2001783039f",
      "lines": [
        "開発 - 目次 -",
        "このプロジェクトでは開発に関するものを扱います。",
        "",
        "とにかくなんでもメモするページ",
        " [雑多何でもメモ]",
        "",
        "[* ドキュメントや画像の保存について]",
        "　[公開するドキュメント]",
        "　画像",
        "",
        "[* 大事・今のプロジェクト]",
        "　[アプリをつくる手順 Ver3]",
        "　[アプリアイデア]",
        " [flutter]",
        "　[frontend]",
        "　[Java]",
        "　[C/C++]",
        "　[Swift]",
        "",
        "[* 言語など]",
        " [figma 関連]",
        "　[osコマンド]",
        " [css 関連]",
        " [スプレットシート]",
        "　[zshについて]",
        "",
        "",
        "[* 未分類・雑多]",
        " [ショートカットコマンド一覧]",
        " [docker チートシート]",
        "　[アプリの課金・ユーザーについて]",
        "　[github]",
        "　[google home]",
        "　[qiita]",
        " [セットアップ]",
        "　[自己管理スプレットシート]",
        "　[技術英語]",
        "　[chrome拡張]",
        " [gitコマンド]",
        " [python]",
        " [MACであと何分アラートアプリ]",
        " [アカウント管理]",
        "",
        " flutterのライブテンプレートというか自分用widgetまとめ機能",
        " 　よく使うwidgetをまとめる",
        " 　flutterはwidgetが直感的にかけないので、alfredからflutter \"widget名\"で検索するとサンプルソースや使い方注意点が出てくる",
        " 　ライブテンプレート",
        "[https://gyazo.com/b183cbd1aa3e83aa4d8dbb0b0f5bc69c]",
        ""
      ]
    },
    {
      "title": "ライブテンプレート",
      "created": 1572040222,
      "updated": 1575016633,
      "id": "5de0f1902d39150017d17be0",
      "lines": [
        "ライブテンプレート",
        " preferences -> editor -> Live Templates -> Flutter",
        " 右側の + ボタン -> live templete",
        "  abbreviation と templete textに値を入れる",
        "  　abbreviation に `pri` と入力 ",
        "  　 頭文字３文字に固定することをマイルールにする",
        "  　templete text に `print('$var$ : $$$var$');`",
        "\t\tNo applicateble contexts Dfineを`dart - toplevel`に変更する",
        "\t\tapply",
        "\t\tOK",
        "",
        "",
        " 自作したテンプレート",
        "  table:templete",
        "   print\tprint('$var$ : $$$var$');",
        "",
        " エスケープシーケンスは`$$`",
        "",
        "[https://gyazo.com/6f07603c9e75cea1fe749dc7fa1b19df]",
        "",
        "",
        " その他に作った物",
        "　 Theme.of(context).",
        "　 row",
        "　 column",
        "　 MediaQuery.of(context).size.",
        "　 SizedBox(height: 32),",
        "　 Navigator",
        "",
        "#flutter",
        ""
      ]
    },
    {
      "title": "providerの学び方",
      "created": 1575010807,
      "updated": 1575010864,
      "id": "5de0f1912d39150017d17be1",
      "lines": [
        "providerの学び方",
        "　　[https://twitter.com/_mono/status/1170516947970097152 mono 🎯 @自宅 💙さんのツイート: \"Flutter状態管理フローチャートを書いた(　´･‿･｀) https://t.co/YS9wqexLtQ 周りを勉強する際に見通しが良くなるはず(　´･‿･｀)… \"]",
        "　　[https://gyazo.com/c2137b985dd95190f50933cdd8b11d57]",
        "",
        "　[https://medium.com/flutter-jp/inherited-widget-37495200d965 InheritedWidget を完全に理解する 🎯 - Flutter 🇯🇵 - Medium]",
        "",
        "　provider",
        "　　[https://gyazo.com/5e1db3a42dd5f84547af12c529fdc290]",
        "　　[https://fireship.io/lessons/advanced-flutter-firebase/ Flutter Provider with Firebase]",
        "　　[https://blog.codemagic.io/flutter-tutorial-provider/ Flutter Tutorial: Provider Overview for Humans - Codemagic blog]",
        "",
        ""
      ]
    },
    {
      "title": "効率の良いflutterの学び方",
      "created": 1571208744,
      "updated": 1575010803,
      "id": "5de0f1912d39150017d17be2",
      "lines": [
        "効率の良いflutterの学び方",
        "",
        " [Flutterの効率良い学び方 https://medium.com/flutter-jp/flutter-learning-c5640c5f05b9]を軸にしていく",
        "　インストールして最初のカウントアプリを出せるところから",
        "",
        "　学ぶ順番",
        "　　[Write Your First Flutter App, part 1 https://codelabs.developers.google.com/codelabs/first-flutter-app-pt1/index.html?index=..%2F..index#5]",
        "　　[Write Your First Flutter App, part 2 https://codelabs.developers.google.com/codelabs/first-flutter-app-pt2/#0]",
        "　　[Build Native Mobile Apps with Flutter https://www.udacity.com/course/build-native-mobile-apps-with-flutter--ud905]",
        "　　[Learn more https://flutter.dev/docs/get-started/learn-more#other-resources] -> Flutter basics",
        "　　 [Introduction to widgets https://flutter.dev/docs/development/ui/widgets-intro]",
        "　　 [Building layouts https://flutter.dev/docs/development/ui/layout/tutorial]",
        "　　 [Adding interactivity to your Flutter app https://flutter.dev/docs/development/ui/interactive]",
        "  [Codelabs https://flutter.dev/docs/codelabs]",
        "   [- 上から順に片っ端からやっていく]",
        "   [https://codelabs.developers.google.com/codelabs/flutter/#8 Building Beautiful UIs with Flutter]",
        "   [https://codelabs.developers.google.com/codelabs/flutter-firebase/#4 Firebase for Flutter]",
        "   [https://codelabs.developers.google.com/codelabs/mdc-101-flutter/#0 MDC-101 Flutter: Material Components (MDC) Basics (Flutter)]",
        "   [https://codelabs.developers.google.com/codelabs/mdc-102-flutter/#6 MDC-102 Flutter: Material Structure and Layout (Flutter)]",
        "   [https://codelabs.developers.google.com/codelabs/mdc-103-flutter/#9 MDC-103 Flutter: Material Theming with Color, Shape, Elevation, and Type (Flutter)]",
        "   [- https://codelabs.developers.google.com/codelabs/mdc-104-flutter/#0 MDC-104 Flutter: Material Advanced Components (Flutter)]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " Qiita投稿",
        " 　figma material design",
        "",
        " Firebase",
        "  Authentication",
        "  Database",
        "  (Storage,Hosting,Functions)",
        "",
        " theme",
        " [providerの学び方]",
        "",
        " アプリ",
        "　　[crudアプリ]",
        "\t\tポートフォリオ",
        "\t\t組み合わせタイマー",
        "",
        " メディア",
        "　　[https://www.youtube.com/channel/UCwXdFgeE9KYzlDdR7TG9cMw/videos YouTube]",
        "　　[https://qiita.com/aoinakanishi/items/220fcb6463e8d090b9a0 Flutterウィークリー #1 - Qiita]",
        "　 [https://medium.com/flutterpub FlutterPub – Medium]",
        "　 [https://medium.com/flutter-community Flutter Community – Medium]",
        "",
        " 余裕があったらやる感じの記事",
        "　\t[https://dart.dev/codelabs/async-await Asynchronous programming: futures, async, await | Dart]",
        "　　[https://github.com/flutter/samples/blob/master/INDEX.md samples/INDEX.md at master · flutter/samples]",
        "　　[https://flutter.dev/docs/cookbook#animation Cookbook - Flutter]",
        "　　[https://blog.codemagic.io/flutter-tutorial-provider/ Flutter Tutorial: Provider Overview for Humans - Codemagic blog]",
        "  [https://medium.com/flutter-jp/inherited-widget-37495200d965 InheritedWidget を完全に理解する 🎯 - Flutter 🇯🇵 - Medium]",
        "  [https://medium.com/flutter-jp/datetime-17e618c8e26e Dart の DateTime の扱いあれこれ - Flutter 🇯🇵 - Medium]",
        "  [https://medium.com/flutter/material-range-slider-in-flutter-a285c6e3447d Material RangeSlider in Flutter - Flutter - Medium]",
        ""
      ]
    },
    {
      "title": "flutter",
      "created": 1569590571,
      "updated": 1575530274,
      "id": "5de0f1912d39150017d17be3",
      "lines": [
        "flutter",
        "[*** flutterに関するものは[https://scrapbox.io/ampersand-flutter/ ampersand-flutter]に記述すること]",
        "",
        "",
        " セットアップ",
        "\t [dartのセットアップ]",
        "\t [flutterのセットアップ]",
        "\t [Intelij IDEAのインストール・設定]のflutterの項目参照",
        "",
        " 参考URL",
        "  [Flutterでの開発をスムーズに行うためのTips集 https://medium.com/flutter-jp/tips-b2487a63a8]",
        "",
        " 自分学習用",
        " 　[効率の良いflutterの学び方]",
        "",
        "　widgetの自分用まとめ",
        "　 [別プロジェクトに記述 https://scrapbox.io/ampersand-flutter/%E3%81%93%E3%81%AE%E3%83%9A%E3%83%BC%E3%82%B8%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6]",
        "",
        " メモ色々",
        "\t　[ライブテンプレート]",
        ""
      ]
    },
    {
      "title": "暗記しない暗記法 - 外部記憶装置としてのScrapbox -",
      "created": 1573972651,
      "updated": 1574637898,
      "id": "5de0f1912d39150017d17be4",
      "lines": [
        "暗記しない暗記法 - 外部記憶装置としてのScrapbox - ",
        "#qiita #scrapbox #記憶 #暗記 ",
        "scrapbox  chrome-extension Alfred ",
        "[https://qiita.com/advent-calendar/2019/yumemi_no1/day/1/edit カレンダーに参加する - Qiita]",
        "　12/01発表",
        "",
        "  暗記しない暗記法 - 外部記憶装置としてのScrapbox - ",
        " 　開発効率を高める",
        " 　爆速開発手法",
        " 　爆速開発暗記法",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* シチュエーション]",
        "（Flutterでアプリを開発中・・・）",
        "「あれ、Containerの角を丸めるのってどうするんだっけ？」",
        "[https://gyazo.com/eb5b1ce94ba75f143527d81034876b26]",
        "「忘れた、調べよ」（Alfredで検索）",
        "[https://gyazo.com/04947388847bdfa250ba7f5b1d862f89]",
        "↓の画面が開く",
        "[https://gyazo.com/300e0c5eb41c9e6f3245da3d4550abcf]",
        "",
        "下のページをクリック",
        "「あ、あった。`Container( decoration: BoxDecoration(borderRadius: BorderRadius.circular(4.0), ), );`だわ」",
        "「そうだった。`color`は`decoration`の中にいれなきゃね。」",
        "[https://gyazo.com/ee006007329dc3b6c7c01d413ee3626f]",
        "「できた。」",
        "",
        "chrome拡張を用いて検索することも可能です。",
        "[https://gyazo.com/a9b9b1f8f4cf4b91c1ed5f8ba12a8c0d]",
        "",
        "",
        "",
        "",
        "　",
        "[* この記事ですること]",
        "　メモを取る、メモから情報を引き出す。とても大事なことであると皆んな知っています。けれども徐々にメモをとらなくなります。なぜか？面倒だからです。scrapboxを使って面倒を最小化しましょう。更に、ツールや拡張と組み合わせることでより[* 手軽]に知識を蓄積、より[* 手軽]に知識を引き出す手法を紹介します。",
        "",
        "",
        "　scrapboxは多種多様な使い道がありますが、今回は上記の例のように「あれって、どうするんだっけ？」→ 「とりあえず検索しよ」といった具合の使い方を前提とします。",
        "　　　scrapboxには本当にいろんな使いかたがあります。以下を参考にしてください。",
        "",
        "　scrapbox以外のアイテムとして",
        "　　chrome拡張",
        "　　alfred",
        "を利用します。",
        "",
        "",
        "[* scrapboxとは？]",
        "scrap",
        "詳細は以下を参照にしてください。",
        "ざっくりいうと、",
        "　カード型wiki",
        "　[* 手軽]",
        "　情報がリンクで緩やかにつながる",
        "　全文検索できる",
        "　階層構造を持たない",
        "",
        "scrapboxの始め方は以下の記事が詳しいです。御覧ください。",
        "[http://improvement-for-relief.com/scrapbox-basical-operation Scrapboxの導入方法と、基本的な操作方法 | 薬剤師が教える！目標達成の処方箋]",
        "",
        "",
        "[* 手軽に知識を蓄積する]",
        "[https://gyazo.com/ec1a6855a3ca8cbab3b9818a66097d71]",
        "",
        "＋ボタンから新規のページをつくりましょう。",
        "　ページには多くを記述する必要はありません。なぜならページはscrap(断片)だからです。コードスニペットをコピペする要領で、深いこと考えずに取り敢えず適当に放り込むぐらいの気楽さで記述します。",
        "　全文検索をかけた時に引っかかりやすい文字を入れておくと良いでしょう。",
        "",
        " alfred + memo",
        "",
        " alfredに登録する",
        " chrome拡張",
        " 　リンク",
        "",
        "[* 手軽に知識を引き出す]",
        "　全文検索をalfredからする",
        " Scrapbox同時検索",
        " 一時メモをpc起動時にひらく",
        "",
        "[* その他]",
        " 階層型をつくるには",
        " 　ピン留め",
        " 　リンク",
        "",
        "[* 最後に]",
        "",
        ""
      ]
    },
    {
      "title": "gitコマンド",
      "created": 1571462634,
      "updated": 1575524336,
      "id": "5de0f1912d39150017d17be5",
      "lines": [
        "gitコマンド",
        "code:command",
        " echo \"# ChromeExtension\" >> README.md",
        " git init",
        " git add README.md",
        " git commit -m \"first commit\"",
        " git remote add origin git@github.com:ampersand-dev/ChromeExtension.git",
        " git push -u origin master",
        "",
        "`git commit -a --allow-empty-message -m ''`",
        "",
        "code:add - commit - push",
        " git add .",
        " git commit -m \"バックアップ\"",
        " git push origin master",
        ""
      ]
    },
    {
      "title": "アプリアイデア",
      "created": 1569586520,
      "updated": 1596241515,
      "id": "5de0f1912d39150017d17be6",
      "lines": [
        "アプリアイデア",
        " [アプリ構築テンプレート]",
        "自分が当たり前にしていることを他者と共有するアプリ　チェックリーみたいな",
        "",
        "　[自分用時間管理]",
        "　[自分用家計簿]",
        "　[自分用バックアップ設計書]",
        "　[inv-web]",
        "　[技術書 同人誌試し読みサービス]",
        "　[音声売買アプリ]",
        "　[強制力アプリ]",
        "　[ポモドーロ]",
        "　[看板式TODO]",
        "　[升目状のアプリ]",
        "　[財務分析]",
        "　[今日遅延するかも]",
        "　[A3紙付箋メモ]",
        " [個人向け作業メモ]",
        " [家計簿]",
        " [名刺作成]",
        " [官報]",
        " [結婚式前撮りサービス]",
        " [バーコードリーダーを使ったアプリ開発 中古図書斡旋など]",
        " [マテリアルアイコンを検索するサイト]",
        " [テキスト手話変換アプリ]",
        " [音声認識でただテキストを表示するだけのアプリ]",
        " [点字変換アプリ]",
        " [本棚アプリ]",
        " [農家と直接やり取りできるecサイト]",
        " [投票サイト]",
        "　[組み合わせタイマー]",
        "　[京都タクシー割り勘]",
        "　[fitbit]",
        "　[絵師にお金払って絵を書いてもらうサービス]",
        "　[写真整理アプリ]",
        "　[緊急時のためのqrコードアプリ]",
        " [googlespletsheetラッパー]",
        " [自分用dashboard]",
        " [組み合わせタイマー]",
        " [まであと何分]",
        " [Let's search for Icon]",
        " 漫画prまっち",
        "　[選択肢を選んでいくチャートアプリ]",
        "　[twitter上で賞品を宣伝するアプリ]",
        " gist埋め込みのようなサービス",
        "　タクシー・uber",
        "　屋台アプリ",
        "　オンライン募集アプリ",
        "　　[https://kumareru.com/guide/about/ クマレルとは | クマレル （α版）]",
        " 残業監視アプリのがいい感じなので見る",
        "　[scrapbox自動バックアップ]",
        ""
      ]
    },
    {
      "title": "写真整理アプリ",
      "created": 1574577212,
      "updated": 1574577244,
      "id": "5de0f1912d39150017d17be7",
      "lines": [
        "写真整理アプリ",
        "　写真をアップロード",
        "　　Google mapで場所確認",
        "　　日付",
        "　　天気",
        "　　時間",
        "　　メモ",
        ""
      ]
    },
    {
      "title": "GitのSSH鍵認証でパスワードを入力せずに済むようにする",
      "created": 1574204449,
      "updated": 1574204473,
      "id": "5de0f1912d39150017d17be8",
      "lines": [
        "GitのSSH鍵認証でパスワードを入力せずに済むようにする",
        "　[https://qiita.com/shinki_uei/items/70f8f9ae50f1b9e24dce GitのSSH鍵認証で毎回パスワードを要求される - Qiita]",
        "　code:zsh",
        "  dev@kaihatsunoMac-mini ssh-key % ssh-add /Users/dev/my/app/setting/ssh-key/id_rsa",
        "  Enter passphrase for /Users/dev/my/app/setting/ssh-key/id_rsa: ",
        "  Identity added: /Users/dev/my/app/setting/ssh-key/id_rsa (ampersand.dev@gmail.com)",
        "  ",
        "  dev@kaihatsunoMac-mini ssh-key % ssh-add -l               ",
        "  4096 SHA256:D9s0atfxRq3Le6b+MKqFcnXANeB5sK1Egh3xGlra8B0 ampersand.dev@gmail.com (RSA)",
        "  dev@kaihatsunoMac-mini ssh-key % ",
        "  ",
        "  ",
        "  ",
        "  ",
        "  ",
        ""
      ]
    },
    {
      "title": "scrapboxまとめ",
      "created": 1573974517,
      "updated": 1573976354,
      "id": "5de0f1912d39150017d17bea",
      "lines": [
        "scrapboxまとめ",
        "#scrapbox",
        "",
        "　[https://scrapbox.io/rashitaactivity/%E3%80%8EScrapbox%E6%83%85%E5%A0%B1%E6%95%B4%E7%90%86%E8%A1%93%E3%80%8F 『Scrapbox情報整理術』 - 倉下忠憲のポートフォリオ]より",
        "　　カード型のwiki",
        "　　 wikiは面倒くさい",
        "　　 　wikiの導入、更新、記法を覚える",
        "　　 　　そのうち億劫になって使われなくなる",
        "　　リンクによるネットワーク化",
        "　　　階層的フォルダではない。",
        "　　　　Markdownエディタなど",
        "　　　　　でも、目次ページつくって、ピンどめして、そこに箇条書きリンクをつなげれば擬似的に階層化できる",
        "　　　情報はフラットで、そのフラットな情報をリンクでつなげる",
        "　　取りあえず書きやすい",
        "　　　書き方は`[]`で囲むだけ",
        "　　　箇条書き",
        "　　　とりあえず、情報を置く",
        "　　　とりあえず、リンクを春",
        "　　　とりあえず、ハッシュタグ",
        "　　リンクに基づいた関連ページがエディタ下部に表示される",
        "　　緩やかなつながり",
        "　　　厳格な階層構造",
        "　　以下に気楽にかけるか",
        "　　ゆるく",
        "　　scrap",
        "　　 [https://ejje.weblio.jp/content/scrap scrapの意味・使い方・読み方 | Weblio英和辞書]",
        "　　　切れ端、断片",
        "　　ページの最小単位",
        "　　　そのページの内容だけで完結する最小限の要素で構成する",
        "",
        "[https://scrapbox.io/forum-jp/ Scrapboxへの要望]",
        "[https://scrapbox.io/customize/ Scrapboxカスタマイズコレクション]",
        "acrapscripts",
        "",
        "　[https://scrapbox.io/ampersand/%E8%AA%AD%E6%9B%B8 読書 - 生活全般]にあとでまとめること //todo",
        "　",
        "　",
        ""
      ]
    },
    {
      "title": "qiita",
      "created": 1569587120,
      "updated": 1584666049,
      "id": "5de0f1912d39150017d17beb",
      "lines": [
        "qiita",
        "　[qiita-前調べたやつ]",
        "　[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする]",
        "　[暗記しない暗記法 - 外部記憶装置としてのScrapbox -]",
        "　",
        "",
        " テンプレート",
        " 　この記事について",
        " 　この記事ですること",
        " 　この記事でしないこと",
        " 　対象",
        " 　諸注意",
        " 　私について",
        " 　リンク",
        ""
      ]
    },
    {
      "title": "技術英語",
      "created": 1571260255,
      "updated": 1583093731,
      "id": "5de0f1912d39150017d17bec",
      "lines": [
        "技術英語",
        "#英語 #ENGLISH",
        "　[技術英語を読むための工夫]",
        "",
        "　技術英語は同時並行した読み方をせずに、以下の順番で読みすすめること",
        "\t1. google翻訳した文章を(複数回)読む",
        "\t2. わからない単語、熟語をメモする",
        "\t3. 英文を(複数回)",
        "\t読む(ここはmouse dictionay を使用する)",
        "\t4. 実装する(不明点はtodoコメントをつけるだけにする)",
        "\t5. 実装して不明な点を調べる",
        "\t　　4と5は逆にしてもいいかも",
        "",
        "文法単位で",
        "",
        "table:English",
        " for crafting high-quality native interfaces\t~作成するため",
        " How to create an infinite, lazily loaded list.\t無限に遅延ロードされるリスト~\t,　は 〇〇で、ぐらいの意味",
        " As the user scrolls,\tユーザーがスクロールすると",
        " you have a Drawer in place,\t所定の位置にドロアーがある\tin placeで所定、haveである",
        " you'll modify the _buildRow function\t you'll modifyで修正します。\tyou'llは無視される文脈",
        " you build your UI out of widgets. \tUIをWidgetから構築します。\tout of widgets. -> from",
        " function takes the given Widget\t~指定されたWidgetを受け取ります",
        " ~. which means the text ~ \tつまり、テキストは~\twhich means つまり",
        " the text ends up centered on screen.\t画面の中央に配置されます\tends up 配置",
        " Flutter comes with 〇〇\tFlutterには〇〇が付属しており、",
        " suite of powerful basic widgets, \t\tsuite of  一揃いの、一連の",
        " of which the following are commonly used\tof which その中で\tfollowing 次のもの",
        " within your application.\t\twithin~ 〇〇内で",
        " Bringing it all together\tすべてをまとめる",
        " What follows is a more complete example \t以下はより完全な例です\tWhat follows 　以下",
        " This guide  takes a step back to explain ~\t\t一歩戻り",
        " The plugin automatically handles access ~\t\thandles　対処する、処理する",
        " It's all about the API keys\tAPIキーがすべてです\t",
        " current code creates a subtle race condition. \t微妙な競合状態が発生\trace condition 競合状態",
        " Flutter and Firebase work hand-in-hand to help you\t\thand-in-hand 連携して",
        " What are Material Design \tとは何ですか？",
        " Material  unite design and engineering \t結びつける\tunite　結びつける",
        " 〇 create a consistent user experience \tconsistent\tconsistent 一貫した",
        " Whenever multiple cards are present in a screen,\t\t複数のカードが表示されるたびに",
        "",
        " Rather than overriding everything,",
        " Rather than overriding everything,",
        " to make common use-cases straightforward",
        " through a forced uni-directional data-flowthrough a forced uni-directional data-flow",
        " When it comes to Flutter,",
        " Please feel free to send a PR to add more functionalities."
      ]
    },
    {
      "title": "crudアプリ",
      "created": 1573030852,
      "updated": 1573030852,
      "id": "5de0f1912d39150017d17bed",
      "lines": [
        "crudアプリ",
        "メモアプリ",
        "do did done メモアプリ",
        "まず、ページがある、これはナビゲーションの組み合わせ",
        "ページごとにタイトルがある。これはプロジェクト名",
        "タブはdo this done の3種類",
        "なんでもいいけどかんたんなcrudアプリをつくる"
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その２ figma準備編",
      "created": 1571741282,
      "updated": 1572996595,
      "id": "5de0f1912d39150017d17bee",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その２ figma準備編",
        "",
        "",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部]",
        "",
        "",
        "[** この記事でやること]",
        "　figmaの登録",
        "　マテリアルデザインを使用するのに必須なUIkitの取り込み",
        "　作業ファイルの作成",
        "[** リンク]",
        "[** 諸注意]",
        "[** 私について]",
        "",
        "",
        "[** 各種設定]",
        "[* figmaの登録]",
        " https://www.figma.com/",
        " `Try Figma For free` から登録しましょう。",
        " [https://gyazo.com/70fcba9997ffcc03845b5330d383cb71]",
        " 必要事項を入力して`Create account`しましょう",
        "[https://gyazo.com/83fd6df52711c3e82fe5e95cdf0bd952]",
        "　下記画面が出てくるので、名前と職業を入力し、同意して`Create Account`しましょう",
        "[https://gyazo.com/26a4ee97d87c895d7a123464faa3c110]",
        "　登録完了！",
        "[https://gyazo.com/69b03cf54d736f0402ad45b58c322d23]",
        "",
        "[* figmaの設定]",
        "　ちょっとわかり辛いですが、左下の `+ New Team ...`をクリックします。",
        "　figmaのフォルダ構成は",
        "　 直近のファイルが表示される`Recent`",
        "　 個人、下書き用途の`Drafts`",
        "　 チーム",
        "　 　チーム配下のプロジェクト",
        "　 　プロジェクト配下のファイル",
        "　 となっています。",
        "　 適当なチーム、適当なプロジェクト、適当なファイルを作っていきます。",
        "　[https://gyazo.com/568e9e771bb0dea0903a669fa2d7de27]",
        "　名前はなんでもいいです。私は個人開発としました。",
        "　[https://gyazo.com/495b2402b4fea3342755b9d764bba6bd]",
        "　ぼっちチームなので、`skip for now`",
        "　[https://gyazo.com/2c2aaae4d40d4d75064ce6a9341cb126]",
        " 当然`Free`",
        " [https://gyazo.com/983e9c20d44c7205018b6c1267cb30fb]",
        " チームを作成し終えました。",
        " [https://gyazo.com/cbac5c8f3843d231db22e6d62381c30a]",
        "",
        "",
        "",
        "　次にプロジェクトを作成します。右上の`New Project`をクリックしてください。",
        "　[https://gyazo.com/71f4c49c26146cdc29aa056342158db7]",
        "　名前を入力します。なんでもいいです。`Create Project`をクリック",
        "[https://gyazo.com/6720aa69fd1c29d1f8a5a2fcebbe773c]",
        "　(右上の`New File`からファイルをつくることができますが、今は飛ばします。)",
        "",
        "",
        "[* UIKitをもってくる]",
        "　マテリアルデザインを使用する上で必要不可欠なツールを引っ張って来ます。",
        "",
        "　[material design themeing kit https://www.figma.com/resources/assets/material-design-themeing-ui-kit/]を開いてください。`Open the Material Themeing kit in Figma`をクリックします。",
        "　[https://gyazo.com/c22207eff712eecb4354e9fdd9d12fde]",
        "",
        "　開けたら左上のメニューボタンから`Back to Files`で戻ります。",
        "　[https://gyazo.com/c1e9043629ad493cfe1ce8f743167776]",
        "　このファイルはDraftsに存在しますので、ドラッグアンドドロップでマテリアルデザインプロジェクトに持ってきます。",
        "　[https://gyazo.com/1f632570b7c579412b4b05a18aa38c45]",
        "　[Material Icons—Outline https://www.figma.com/resources/assets/material-icons-outline/]も上記手順と同様にマテリアルデザインプロジェクトに持ってきます。",
        "",
        "[* 作業場ファイルをつくる]",
        "　ここらへんはもうお好みの領域なのですが、作業場所ファイルを作ると便利です。",
        "　`material design themeing kit`はあらかじめ必要な設定を一通りしてあるファイルなので、このファイルをベースに作業場ファイルを作っていきます。",
        "　右クリックしてDuplicateします。",
        "　[https://gyazo.com/786e3b4ebbf0f90da31553df32b77cde]",
        "　Duplicateしたファイルを開いて、まずはページを作ります。",
        "　`Pages +`をクリックして名前を入力します。適当に作業場と命名しました。",
        "　[https://gyazo.com/6354d14026f970f21f3165662892dde5]",
        "　作業場以外のページを右クリックから`delete page`で削除していきます。",
        "　ファイル名も適当に作業場としましょう",
        "　[https://gyazo.com/a993334b4de75640898a05c1e1bd803e]",
        "　作業場のColor Styleのprimary と secondary 削除します。",
        "　次回以降手動で設定していきますので。",
        "　[https://gyazo.com/5b690584e1865042151cb4c4ba625958]",
        "",
        "",
        "",
        "[* 次のステップ]",
        " figmaに関して最もまとまっている記事です。ぜひ読んでください。",
        "\t　[FigmaではじめるUI（Web）デザイン｜Part1 https://note.mu/sixa_nao/n/n7603a9bc7580]",
        "\t　[FigmaではじめるUI（Web）デザイン｜Part2 https://note.mu/sixa_nao/n/n91d39cea73eb]",
        "　マテリアルデザインガイドをまとめました。次回の記事で事前知識として必要になります。",
        "　　",
        "",
        "",
        "",
        "",
        "",
        "",
        "- - - - - - - 全面差し替え - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* 前回]",
        "　前回の URLを貼る",
        "",
        "[* この記事ですること]",
        "* デザインを始めるための色々な設定をfigmaで行う。sketch,XDの人は適宜読み替えてください。",
        "* (マテリアルデザインについては、[別個に記事](https://qiita.com/ampersand-dev/items/28e3ba3dfd1871be9e78)を書いたので、それを参考にしてください。)",
        "",
        "",
        "",
        "　[* マテリアルデザインガイドを一通り読み込もう]",
        "　　英語で記述されているけど、そんなに難しくない。google翻訳を使いながら読んでいこう。",
        "　　ガチで読み込む必要はない。ざっくりと全体像を把握していく感じで。",
        "　　でも、以下のページは超重要なので読み込もう。",
        "　　　[layout https://material.io/design/layout/understanding-layout.html#]",
        "　　　[color https://material.io/design/color/the-color-system.html#color-theme-creation]",
        "　　　タイポグラフィー",
        "",
        "",
        "[* figma各種設定]",
        " まずはこれを参考にしてfigmaの設定をしよう",
        "　　[FigmaではじめるUI（Web）デザイン｜Part1 https://note.mu/sixa_nao/n/n7603a9bc7580]",
        "　　[FigmaではじめるUI（Web）デザイン｜Part2 https://note.mu/sixa_nao/n/n91d39cea73eb]",
        "",
        "　　※ リンク記事では、カラー、フォント、タイポグラフィをそれぞれ設定することになるが、リンク記事はマテリアルデザインに準拠していないので、適宜修正しながら設定すること。(自分はflutterを用いて開発するのでマテリアルデザインが必須なのです。)",
        "",
        "　　カラー",
        "　　　リンク記事のカラー設定はマテリアルデザインに準じて以下の設定に書き換える。",
        "\t　　table:color",
        "\t　　 名前\t指定\t自分の場合は...",
        "\t　　 primary\t自由\tuiごとに変える。300 -900番台で選ぶ感じ、使用頻度高いのは500と700",
        "\t　　 secondary\t自由\tuiごとに変える。使わない選択肢もあり。",
        "\t　　 background\t右記\twhite, gray50, gray100 (gray200 <- 背景色にしては濃すぎる)",
        "\t　　 success\t4CAF50\tvuetify参考にした。url貼る",
        "\t　　 error\tFF5252\tvuetify参考にした。",
        "",
        "\t\t\t色の濃淡は",
        "\t\t\t　white blackの場合、opacityを設定して表現する",
        "\t\t\t　それ以外の色の場合は、番台を変えて表現する。＋ー200がちょうどよいと思う。",
        "",
        "",
        "　　　配色は以下のページが参考になるから読む",
        "　　　自分は、よく以下の設定で使う",
        "　　　　primary color 500 or 700 色は自由",
        "　　　　secondary color 使いこなせないので、secondaryは設定しなかたｔ",
        "　　　　accent color green 500 とか red pink 500 を使っていた。Aのほうが良いかも",
        "　　　　",
        "",
        "\t　font ",
        "\t　 notosans jp か roboto を使用する。",
        "\t　 ちなみにrobotoはflutterのデフォルトフォントであるが、noto suns jp と変わらない気がするので、どっちでもいい",
        "\t　 英字でよく使われるのは、poppins、SF Pro Text、Montserrat など",
        "\t　 日本語はヒラギノ系を使うらしい？自分はあまり使ってない(使いこなしていない)",
        "",
        "　タイポグラフィ",
        "　　[マテリアルデザインガイド https://material.io/design/typography/the-type-system.html#type-scale]に合わせる",
        "　　これに合わせる",
        "　　[https://gyazo.com/9bdc1fd11abb5b765b2cb11b2e2e8860]",
        "",
        "",
        "　[* チートシートファイルを作ろう]",
        "　　完成したUIや資料として集めた UI を残しておくため、自作したコンポーネントを貯める場所",
        "　　　以下のページをつくる",
        "　　　　完成品を置くページ",
        "　　　　サンプルを置くページ",
        "　　　　よく使うものを溜めて置く場所",
        "",
        "",
        "　　UIkitを集める",
        "　　 [material design themeing kit https://www.figma.com/resources/assets/material-design-themeing-ui-kit/]",
        "　　  聖典です。ここのパーツを組み合わせていく感じ",
        "　　 [Material Icons—Outline https://www.figma.com/resources/assets/material-icons-outline/]",
        "　　 　アイコンは使うのが偏るので、一回使ったアイコンはまとめておくと後々楽です。",
        "",
        "",
        " よく使うサイトをお気に入りに入れる",
        " 　デザイン",
        " 　　[Cocoda https://cocoda-design.com/#1]",
        " 　　[figma https://www.figma.com/files/recent]",
        " 　　[material design guide https://material.io/design/]",
        " 　アイコン",
        "   [icoon-mono https://icooon-mono.com/]",
        " 　サンプル",
        "  　pinterrest",
        "  　dribbble",
        " 　素材",
        "   ぱくだそ",
        "   [unsplash https://unsplash.com/]",
        "   　外人の顔の使用頻度は結構高い",
        "",
        "他に「これおすすめ！」っていうのがあったら教えてください。",
        "",
        "",
        "[* cocoda初診っ車コンテンツやｒｙ]",
        "　　adobexdでやること前提なので、これをやるためだけにxdインストールして、やってみてください。",
        "　　",
        "　　入門編 - UIを完成させよう",
        "　　初級編 - UIグラフィックスの基礎を網羅しよう",
        "",
        "[* その他]",
        "　　ノンデザイナーズガイドブック",
        "　　　デザイン4原則はこの本が原典",
        "　　　名著で読みやすいので、できるだけ買おう",
        "",
        "",
        " figmaこれ使え",
        "　　website design",
        "　　Material Design 2.0 Theming kit + material icon outline",
        "　　https://www.figma.com/file/wjjvHXaIkzuvjJWKAwuzL7/公開用?node-id=0%3A1",
        "",
        ""
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする",
      "created": 1571128267,
      "updated": 1572928114,
      "id": "5de0f1912d39150017d17bef",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする",
        "",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部]",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その１ 概要編]",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その２ figma準備編]",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その３ Daily Cocoda編]",
        "",
        "　マテリアルデザインの重要部分()を一日目の自分にアドバイスする",
        " [デザインを何もしらない1日目の自分にマテリアルデザインの基本を簡単に説明する - font color typograpty 編]",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "フロントエンドエンジニアはデザインを学ぶべきか",
        "\t　仕事の幅が広がるし、デザイナーとのコミュニケーションもスムーズになるのでは？",
        "\t　マテリアルデザインベースで学ぶとflutterとの相性がとても良い",
        "\t　flutterとデザインを両方学びたいと思っている人はflutter で小さいcurdアプリをつくれるようになってからデザインに入門するといいと思う。flutterのwidgetの扱いに慣れれば、materialdeginでできること、できないことを知れる。",
        "",
        "",
        "",
        "#qiita",
        "#cocoda #figma #materialdesign #初心者 #UI #フロントエンド  #Design",
        ""
      ]
    },
    {
      "title": "デザインを何もしらない1日目の自分に \"実践的\" なマテリアルデザインの使い方を説明する - Layout Color Typography 編",
      "created": 1572598653,
      "updated": 1572902236,
      "id": "5de0f1912d39150017d17bf0",
      "lines": [
        "デザインを何もしらない1日目の自分に \"実践的\" なマテリアルデザインの使い方を説明する - Layout Color Typography 編",
        "#マテリアルデザイン #デザイン #新人プログラマ応援 #フロントエンド #UI",
        "",
        "#リンク",
        "* [デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その１ 概要編](https://qiita.com/ampersand-dev/items/e0768faf4b7260fc28d6)",
        "",
        "[* この記事について]",
        "　　マテリアルデザインを最低限、使いこなすための手法を説明する。",
        "　　この記事は[マテリアルデザインガイド https://material.io/]の要約、翻訳記事である。",
        "　　cocodaやdaily UI などでUIデザインをはじめる、はじめた１日目の自分を対象にしている。",
        " 　各コンポーネントの扱い方は説明しない。",
        " 　概念やコンセプトについても説明しない。",
        "　　オレオレ流です。間違いも多々あると思いますので、指摘お願いします。",
        "",
        "",
        "[* 私について]",
        "　　個人開発者としてモバイルアプリをつくって、その収益で生計を立てたいエンジニア",
        "　　Flutterで開発を始め、いくつかアプリを作ろうとするも、いづれのアプリもデザインが出来ずに断念",
        "　　デザインを学ぶ必要に迫られて、DailyCocoda!でデザインを学び始める。",
        "　　デザインは全くの初心者でセンス0",
        "　　7/23日から始めたDailyCocodaが10/15日に目出度く完走 <-- いまここ",
        "　　アプリをリリースして生計を立てる <-- これから",
        "",
        "",
        "[* [マテリアルデザインガイド https://material.io/design/]]",
        "　　マテリアルデザインを学ぶ上で欠かせない聖書 ブックマークに登録しておこう。",
        "　　英語で書かれているけど、とても読みやすい。必要に応じて翻訳掛けながら読もう。",
        "",
        "",
        "[* レイアウト]",
        "　　基本間隔",
        "\t　　8dpの間隔を基本単位とする。",
        "　　　ただし、アイコンやタイポグラフィのような小さな要素は4dpを使うこともできる。",
        "\t\t\t (補足: dpは以下を参考にしてください。)",
        "   \t　[https://material.io/design/layout/pixel-density.html#pixel-density Pixel density - Material Design]\t",
        "   \t　[https://qiita.com/nein37/items/0a92556a80c6c14503b2 【Android】いまさら聞けないdp入門 - Qiita]",
        "   \t　[http://e-words.jp/w/dp.html dpとは - IT用語辞典 e-Words]",
        "",
        "",
        "　　レスポンシブ",
        "\t\t\t\ttable:レスポンシブ",
        "\t\t\t\t 画面\tブレイクポイント\tカラム\tガーター\tマージン　",
        "\t\t\t\t\tモバイル\t360dp\t4カラム\t16dp\t16dp",
        "\t\t\t\t タブレット\t600dp\t8カラム\t24dp\t24dp",
        "\t\t\t ガーターの幅は(補足: 8dp間隔で)カスタマイズできる",
        "   \tガーターとマージンの幅は異なっていても構わない   \t(補足: コンテンツの内容によってはガーターは使わないこともあります。)",
        "\t\t\t\t[https://gyazo.com/42351239fdb0251248a79351de1c0e21]",
        "\t\t\t\t1がカラム、2がガーター、3がマージン",
        "",
        "　　クリック、タッチ領域",
        "　　　タッチターゲットは少なくとも48 x 48 dpで、それらの間に少なくとも8dpのスペースが必要",
        "　　\t[https://gyazo.com/d6a28b7219bad69ee0ee241ef97d14d8]",
        "　　　クリックターゲットは少なくとも24 x 24 dpで、それらの間に少なくとも8dpのスペースが必要",
        "\t \t[https://gyazo.com/190dffd4e0d9b4adebc39f7671f765ec]",
        "",
        "",
        "[* カラー]",
        "　　[2014 Material Design color palettes　https://material.io/design/color/#tools-for-picking-colors]",
        "　\t\tマテリアルカラーの色はこの中から選ぶ",
        "　\t\t基準となるのは500番",
        "　\t\tカラーの上に乗っかているテキストの色(白もしくは黒)が相性のいい色",
        "　\t\t例えばこのグリーンの場合、",
        "　\t\t[https://gyazo.com/70deb071ece4233eba1383512aaed30d]",
        "　\t\tグリーン500は黒色のテキストと相性がよく、グリーン600は白色のテキストとの相性がいい",
        "",
        "",
        "　　プライマリーカラー",
        "　　　プライマリーカラーは最も頻繁に画面とコンポーネント上に表示される色",
        "　　　セカンダリーカラーを使用しない場合、アクセントとしてプライマリーカラーを使用できる。",
        "　　　明るいバリエーションと暗いバリエーションを使用できる(補足: 例えば、グリーン500をプライマリーカラーとした場合、明るいバリエーションにグリーン300、暗いバリエーションにグリーン700を設定することが出来る。もちろん、バリエーションをより明るい、より暗い色を設定することも出来るし、使用しない選択肢もあり)",
        "",
        "",
        "　　セカンダリーカラー",
        "　　\tセカンダリーカラーは使用してもしなくても構わない",
        "　　\tプライマリーカラーと同様に、明るいバリエーションと暗いバリエーションを使用できる",
        "\t\t　セカンダリーカラーは以下の場合に適している",
        " 　　　フローティングアクションボタン　　",
        " 　　　スライダーやスイッチのようなコントロールコンポーネント",
        " 　　　選択したテキストをハイライトする",
        " 　　　プログレスバー",
        " 　　　リンクと見出し",
        " 　　（補足: マテリアルデザインにアクセントカラーはありません。代わりにセカンダリーカラーを使います？ <- 自分でもよくわかっていません。誰か教えて！）",
        "",
        "",
        "\t\tその他のカラー",
        "\t\t\tサーフェイスカラーはカードやシート、メニューの基準になる色",
        "\t\t\tバックグラウンドカラーは`FFFFFF`",
        "\t\t\t(補足: 自分の場合、サーフェイスカラーとバックグラウンドカラーはホワイト、グレイ50、グレイ100のいずれかから選択しています。)",
        "\t\t\tエラーカラーは`B00020`",
        "\t\t\t(補足: エラーカラー以外にもサクセスカラーがあると重宝します。私は[https://vuetifyjs.com/en/customization/theme Theme — Vuetify.js]に記載されている''#4CAF50'を使用しています。)",
        "",
        "　\t(補足: 以下の画像を参考に説明します。",
        "　\t　ブルー700がプライマリーカラーで、600と800がそのバリエーションです。",
        "　\t　ボトムアプリケーションバーにblueが使われているので、違いを強調するために、フローティングアクションボタンには、セカンダリーカラーのオレンジ500が使用されています。",
        "　\t　カードコンポーネント間の幅とマージンがやたらと狭いですね。dpは4でしょうか？",
        "　\t　あと、バックグラウンドカラーが白(fffffff)ではありません。おそらくグレイ50だと思います。)",
        "\t\t\t[https://gyazo.com/88466a6030a8618e30eeee224e594d40]",
        "",
        "",
        "",
        "  テキストとアイコンのカラー(不透明度)",
        "  　テキスト、アイコンともに黒(000000)もしくは白(ffffff)で表示し、必要に応じて不透明度を調整する",
        "  　table: opacity",
        "  　 100%\t強調度\tエラーのみ",
        "  　 87%\t強調度: 高\tタイトル、見出し、アクティブなアイコン",
        "  　 60%\t強調度: 中\t文章、コンテンツ、カラーヘルパーテキスト、ヒントテキスト、選択可能なアイコン",
        "  　 38%\t強調度: 低\t無効なテキスト、無効なアイコン",
        "\t\t\t(補足: dividerは12%)",
        "\t\t\t(補足: 以下の画像でいうと、",
        "\t\t\t　「56歳からコードを書き始めて食べていく方法」が黒(000000)の87%",
        "\t\t\t　それ以外のテキスト、アイコンが黒(000000)60%",
        "\t\t\t　画像はmediumさんから拝借しました。)",
        "\t\t\t[https://gyazo.com/c1d60a1d83dbbf16d59ab281ad10e1ea]",
        "",
        "[* タイポグラフィー]",
        "　　　この画像がすべて",
        "　　　[https://gyazo.com/f32690cde994525e6318291923960e4a]",
        "",
        "　　　Headlines(H1 ~ H6)",
        "　　　 H6はapp bar のタイトルに使用",
        "\t\t　\t[https://gyazo.com/6638a397d5b6a8d191e60460372d69e3]",
        "",
        "　　\tSubtitles",
        "\t　　\tHeadlineよりも小さい文字に使う。",
        "\t　　\t(補足: 記事のタイトルに使用されるイメージがあります。)",
        "",
        "　\t　Body",
        "　　\t　長いテキストに適している",
        "　　\t　小さいテキストサイズに適している",
        "　　\t　(補足: 記事の本文に使用されるイメージがあります。)",
        "",
        "　\t　Caption と overline",
        "　　\t　画像に注釈を付けたり、見出しを紹介するために控えめに使用される。",
        "",
        " \t Button",
        "  　　ボタンは通常大文字",
        "",
        "　　　具体的な使い方は以下を参照",
        "　　　　[https://gyazo.com/71816463ac9afe4cc305683b8f7d74e1]",
        "\t\t\t\t[https://gyazo.com/513cb0bae7932d760502e2fcd10b64a5]",
        "",
        "",
        "[* サンプル集]",
        "\t\tサンプルは[https://material.io/design/color/applying-color-to-ui.html#backdrop Applying color to UI - Material Design]を確認しよう",
        "",
        "[* この記事の参考にしたページ]",
        "  レイアウト",
        "\t\t　[https://material.io/design/layout/responsive-layout-grid.html# Responsive layout grid - Material Design]\t",
        "\t　　[https://material.io/design/layout/spacing-methods.html# Spacing methods - Material Design]",
        "\t　　[https://material.io/design/layout/applying-density.html#touch-click-targets Applying density - Material Design]",
        "\t　　[https://material.io/design/color/the-color-system.html#color-theme-creation The color system - Material Design]",
        "\t　　[https://material.io/design/color/applying-color-to-ui.html#top-bottom-app-bars Applying color to UI - Material Design]",
        "　\t　[https://material.io/design/color/text-legibility.html#text-types Text legibility - Material Design]",
        "\t　　[https://material.io/design/typography/the-type-system.html# The type system - Material Design]",
        "  カラー",
        "  　[https://material.io/design/color/the-color-system.html#color-usage-palettes The color system - Material Design]",
        "  　[https://material.io/design/color/applying-color-to-ui.html Applying color to UI - Material Design]",
        "  　",
        "  タイポグラフィー",
        "  　[https://material.io/design/typography/the-type-system.html The type system - Material Design]",
        "\t\t\t[https://material.io/design/typography/understanding-typography.html#type-properties Understanding typography - Material Design]",
        "\t\t\t[https://material.io/design/color/text-legibility.html#text-backgrounds Text legibility - Material Design]",
        "  dp",
        "  　[https://material.io/design/layout/pixel-density.html#pixel-density Pixel density - Material Design]\t",
        "  　[https://qiita.com/nein37/items/0a92556a80c6c14503b2 【Android】いまさら聞けないdp入門 - Qiita]",
        "  　[http://e-words.jp/w/dp.html dpとは - IT用語辞典 e-Words]",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* レイアウト]",
        "　　[https://material.io/design/layout/understanding-layout.html#usage Understanding layout]より",
        "　　　Structure",
        "　　\t > Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.",
        "    > ",
        "    > Smaller components, such as iconography and typography, can align to a 4dp grid.",
        "　　\t → 8dpの間隔を基本単位とする。",
        "　　\t → ただし、アイコンや、タイポグラフィのような小さいコンポーネントの場合は4dpを使うこともできる。",
        "　　\t dpは以下を参考にしてください。",
        "\t\t　　　　[https://material.io/design/layout/pixel-density.html#pixel-density Pixel density - Material Design]",
        "\t\t　　　　[https://qiita.com/nein37/items/0a92556a80c6c14503b2 【Android】いまさら聞けないdp入門 - Qiita]",
        "\t　\t　　　[http://e-words.jp/w/dp.html dpとは - IT用語辞典 e-Words]",
        "",
        "",
        "\t\t[https://material.io/design/layout/spacing-methods.html# Spacing methods]より",
        "\t\t　Baseline ",
        "\t\t　　>All components align to an 8dp square baseline grid for mobile, tablet, and desktop.",
        "\t\t\t\t→ すべてのコンポーネントは、8dpの正方形のベースライングリッドに揃えられる",
        "\t\t \t> Iconography, typography, and some elements within components can align to a 4dp grid.",
        "\t\t\t → アイコン、タイポグラフィ、コンポーネント内のいくつかの要素は4dpを使うことができる",
        "\t\t\t\t> Padding refers to the space between UI elements. It’s an alternative spacing method to keylines, measured in increments of 8dp or 4dp.",
        "",
        "　　　Spacing ",
        "\t\t\t\t> Keylines are determined by each element’s distance from the edge of the screen, measured in increments of 8dp.",
        "\t\t\t\t→ キーラインはスクリーンの端からの各要素の距離によって決定される。",
        "\t\t\t\t→ 8dpの増分で測定される。",
        "",
        "",
        "[* レスポンシブ]",
        "　　[https://material.io/design/layout/responsive-layout-grid.html# Responsive layout grid - Material Design]より",
        "　　　Columns, gutters, and margins ",
        "\t\t\t\t>The Material Design layout grid is made up of three elements: columns, gutters, and margins.",
        "\t\t\t\t→ マテリアルデザインのレイアウトグリッドは、カラム、ガーター、およびマージンの3つの要素で構成されている。",
        "\t\t\t\t>On mobile, at a breakpoint of 360dp, this layout grid uses 4 columns.",
        "\t\t\t\t>On tablet, at a breakpoint of 600dp, this layout grid uses 8 columns.",
        "\t\t\t\t>On mobile, at a breakpoint of 360dp, this layout grid uses 16dp gutters.",
        "\t\t\t\t>On tablet, at a breakpoint of 600dp, this layout grid uses 24dp gutters.",
        "\t\t\t\t>On mobile, at a breakpoint of 360dp, this layout grid uses 16dp margins.",
        "\t\t\t\t>On mobile, at a breakpoint of 360dp, this layout grid uses 16dp margins.",
        "",
        "\t\t\tGrid customization ",
        "\t\t\t >Gutters can be adjusted to create more or less space between the columns of a layout.",
        "\t\t\t >Within the same breakpoint, gutter and margin widths can be different from one another.",
        "\t\t\t\t→ ガーターの幅は(8dp間隔で)カスタマイズできる",
        "\t\t\t\t→ ガーターとマージンの幅は異なっていても構わない",
        "",
        "",
        "[* クリック、タッチ領域]",
        "  [https://material.io/design/layout/spacing-methods.html#touch-targets Spacing methods - Material Design]より",
        "  \tTouch targets ",
        "  \t　>Touch targets apply to any device that receives both touch and non-touch input. To balance information density and usability, touch targets should be at least 48 x 48 dp with at least 8dp of space between them.",
        "  \t → \tタッチターゲットは少なくとも48 x 48 dpで、それらの間に少なくとも8dpのスペースが必要",
        "",
        "\t\t\tClick targets",
        "\t\t\t >On non-touch-UIs, click targets should be at least 24 x 24 dp with at least 8dp of space between them..",
        "\t\t\t →  クリックターゲットは少なくとも24 x 24 dpで、それらの間に少なくとも8dpのスペースが必要",
        "",
        "",
        " [* カラー]",
        " 　[https://material.io/design/color/the-color-system.html#color-theme-creation The color system - Material Design]より",
        " 　　プライマリカラー",
        "\t 　　> A primary color is the color displayed most frequently across your app’s screens and components.",
        "\t 　　→ プライマリーカラーは最も頻繁に画面とコンポーネント上に表示される色",
        "",
        "　　　セカンダリーカラー",
        " 　　 > If you don’t have a secondary color, your primary color can also be used to accent elements.",
        "　　　　→ セカンダリーカラーを使用しない場合、アクセントとしてプライマリーカラーを使用できる。",
        "",
        " 　　 >Dark and light primary variants",
        " 　　 > You can make a color theme for your app using your primary color, as well as dark and light primary variants.",
        "\t　　\tプライマリーカラーと同様に、明るいバリエーションと暗いバリエーションを使用できる",
        "",
        " 　　 > ~ Having a secondary color is optional, and should be applied sparingly to accent select parts of your UI.",
        " 　　 → セカンダリーカラーは使用してもしなくても構わない",
        " 　　 → セカンダリーカラーはUIの一部のアクセントに控えめに適用する",
        "",
        " 　　 > Secondary colors are best for:",
        " 　　 > Floating action buttons　",
        " 　　 > Selection controls, like sliders and switches",
        " 　　 > Highlighting selected text",
        " 　　 > Progress bars　　",
        " 　　 > Links and headlines　",
        " 　　 > ",
        " 　　　→ セカンダリーカラーは以下の場合に適している",
        " 　　　　フローティングアクションボタン　　",
        " 　　　　スライダーやスイッチのようなコントロールコンポーネント",
        " 　　　　選択したテキストをハイライトする",
        " 　　　　プログレスバー",
        " 　　　　リンクと見出し",
        "",
        "　　　Surface, background, and error colors",
        "　　　　>Surface colors affect surfaces of components, such as cards, sheets, and menus.",
        "　　　　→ サーフェイスカラーはカードやシート、メニューに影響を与える",
        "",
        "\t\t\t\t>The background color appears behind scrollable content. The baseline background and surface color is #FFFFFF.",
        "\t\t\t\t→ バックグラウンドカラーは`FFFFFF`",
        "",
        "\t\t\t\t>Error color indicates errors in components, such as invalid text in a text field. The baseline error color is #B00020.",
        "\t\t\t\t→ エラーカラーは`B00020`",
        "",
        "　　　2014 Material Design color palettes",
        "　\t\t\tマテリアルカラーの色はこの中から選ぶ",
        "　\t\t\t基準となるのは500番",
        "　\t\t\tカラーの上に乗っかているテキストの色(白もしくは黒)が相性のいい色",
        "",
        "",
        "\t\t\tText backgrounds Icons and Other symbols",
        "\t\t\t\t[https://material.io/design/color/text-legibility.html#text-backgrounds Text legibility - Material Design]より",
        "\t\t\t\t\t>High-emphasis text has an opacity of 87%",
        "     > Medium-emphasis text and hint text have opacities of 60%",
        "     > Disabled text has an opacity of 38%",
        "\t\t\t\t\t>High emphasis helper: This text uses a hex value #000000 at 87% opacity",
        "     > Default color helper text: This text uses a hex value of #000000 at 60% opacity",
        "     > Default error helper text: This text uses a hex value of #B00020 at 100% opacity",
        "     >Active icons have an opacity of 87%",
        "     > Inactive icons have an opacity of 60%",
        "     > Disabled icons have an opacity of 38%",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* タイポグラフィー]",
        "　　[https://material.io/design/typography/the-type-system.html# The type system - Material Design]",
        "",
        "　　　Headlines",
        "　　　　>In the type scale, headlines span from a range of 1 through 6. Headlines are the largest text on the screen, reserved for short, important text or numerals.",
        "  　 > ",
        "  　 > For headlines, you can choose an expressive font, such as a display, handwritten, or script style. These unconventional font designs have details and intricacy that help attract the eye.",
        "",
        "  　 H6はapp bar のタイトルに使用",
        "",
        "　\tSubtitles",
        "\t　\tコンテンツ内部の見出し、タイトルで使用されるイメージが自分にはある",
        "",
        "　　Body",
        "　　　> it’s typically used for long-form writing as it works well for small text sizes. ",
        "　　　→ 長いテキストに適している",
        "　　　→ 小さいテキストサイズに適している",
        "",
        "　　Caption and overline",
        "　　 >Caption and overline text (text with a line above it) are the smallest font sizes. They are used sparingly to annotate imagery or to introduce a headline.",
        "　　　→  画像に注釈を付けたり、見出しを紹介するために控えめに使用されます。",
        "",
        "  Button",
        "   >Button text is typically an all caps sans serif.",
        "\t\t\tボタンは通常大文字",
        ""
      ]
    },
    {
      "title": "class",
      "created": 1572774047,
      "updated": 1572774059,
      "id": "5de0f1912d39150017d17bf2",
      "lines": [
        "class",
        "",
        " code:dart",
        "  void main() async {",
        "  ",
        "    /// DogクラスObjectを作成",
        "    var fido = Dog(",
        "      id: 0,",
        "      name: 'Fido',",
        "      age: 35,",
        "    );",
        "  ",
        "    /// fidoはDogクラスであるが、Map型ではない",
        "    print(fido);",
        "    // Dog{id: 0, name: Fido, age: 35}",
        "    print(fido is Dog);",
        "    // true",
        "    print(fido is Map);",
        "    // false",
        "  ",
        "    /// fido.toMap()はDogクラスではなく、Map型である。",
        "    print(fido.toMap());",
        "    // {id: 0, name: Fido, age: 35}",
        "    print(fido.toMap() is Dog);",
        "    // false",
        "    print(fido.toMap() is Map);",
        "    // true",
        "    ",
        "    /// こういうこともできる",
        "    print(fido.toString());",
        "    // Dog{id: 0, name: Fido, age: 35}",
        "    ",
        "  ",
        "  }",
        "  ",
        "  class Dog {",
        "    /// dogクラスのインスタンス変数の宣言",
        "    final int id;",
        "    final String name;",
        "    final int age;",
        "  ",
        "    /// コンストラクタ",
        "    /// コンストラクタはクラスをnewした瞬間に実行される関数です。",
        "    ///最初にやっておかなくちゃいけない処理、例えばメンバ変数の初期化処理などでよく活用されます。",
        "    ///クラスをnewした瞬間に実行される関数",
        "    Dog({this.id, this.name, this.age});",
        "  ",
        "    /// メソッド",
        "    /// DogクラスオブジェクトをMapオブジェクトに変換する。",
        "    /// これしないと、sqlliteのinsertが使えない",
        "    Map<String, dynamic> toMap() {",
        "      return {",
        "        'id': id,",
        "        'name': name,",
        "        'age': age,",
        "      };",
        "    }",
        "  ",
        "    // Implement toString to make it easier to see information about",
        "    // each dog when using the print statement.",
        "    @override",
        "    String toString() {",
        "      return 'Dog{id: $id, name: $name, age: $age}';",
        "    }",
        "  }",
        "  ",
        ""
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その１ 概要編",
      "created": 1571741181,
      "updated": 1572308105,
      "id": "5de0f1912d39150017d17bf3",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その１ 概要編",
        "",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部]",
        "",
        "",
        "[* どうやってデザイン学ぼうか悩んでいる１日目の自分へ]",
        "\t\tツールはsketchでもいいけど、無料で使えるfigmaを使おう。sketchファイルはfigmaで取り込めるよ。",
        "\t　アウトプットのDaily Cocodaを優先してやろう。",
        "\t　時間があったらUIトレースでインプットしよう。",
        "\t　[マテリアルデザインガイド https://material.io/design/]は聖書 よく見よう。ちなみに日本語版はない。",
        "\t\tとにかく毎日Daily Cocodaを完成させよう。完成度は問わない。",
        "",
        "",
        "[* なぜfigmaか]",
        "　　デザインツールはXDでも、figmaでも、sketchでも何でもOK",
        "　　自分はchromebookとmacを併用しているので、ブラウザベースのfigmaを使おう。",
        "",
        "",
        "[* アウトプット - Cocoda(Daily cocoda)]",
        "  Cocodaとは、UIデザインをアウトプットして実践力が身につけられるサービス",
        "　　もっと簡単にいうとprogateのデザインバージョン",
        "　　Daily CocodaはCocodaのサービスの一つで、日替わりで指定されたお題のUIを作っていくもの",
        "　　　メリット",
        "　　　　1日1題でUI1枚か2枚分 ちょうど一日で終わるぐらいの分量なのが良い",
        "　　　　多種多様なお題があるので、実力が身につく",
        "　　　デミリット",
        "　　　　興味ないお題の日はやる気でない。(お題のskip機能がない)",
        "　　　　続かない。(初日お題提出者は700以上人いるが最終日はわずか23人)",
        "",
        "",
        "[* インプット -UIトレース]",
        "　　アプリをスマートフォンからスクリーンショットで撮影して、その画像をベースに同じUIをつくる",
        "　　Twitter,facebook,instangramのようなSMS系や、google系アプリのデザインがおすすめ",
        "　　やり方は色々あるけど、flutterでアプリを作ろうとしている自分には以下を勧める",
        "\t　　ラインを意識する",
        "\t　　幅を意識する",
        "\t　　サイズを意識する",
        "\t　　　マテリアルデザインは8を基準にしたレイアウトっぽいので、8の倍数を意識する",
        "　\t　厳密にトレースしなくていい。むしろマテリアルデザインに準拠する形に直していくと良い",
        "　\t　ちなみに、スクリーンショットした画像はiphoneシリーズはwidth375、pixcel3はwidth360に合わせる",
        "　\tここに自分のをいれる　mediumトレース",
        "",
        "",
        "[* マテリアルデザインガイド]",
        "  自分はflutterをやってるからマテリアルデザインガイドを重宝することになる。ブックマークに入れておくこと。",
        "  ちなみに、日本語バージョンはない。google翻訳しながら見よう。でも読みやすい英文なので気構える必要はない。",
        "",
        "",
        "[* 心構え的な]",
        "　　とにもかくにも、毎日DailyCocodaをやっていこう。",
        "　　目安時間は気にしない。60分とか70分とか書いてあるけど、無理 1つのお題に6時間ぐらい費やすことになる。",
        "\t　とにかく毎日Daily Cocodaをやろう。２日以上かけると間違いなくだらける。",
        "\t　最初は糞デザイン量産して経験値を貯めろ。レベルを上げろ。",
        "\t　UIトレースは時間が余ったらやる感じ",
        "\t　お前のデザインなど誰も見ないから、毎日やれ",
        "\t　2~3日先のお題を知って、予め資料集めをするのはあり。ちょっとずるい感じするけど。",
        "",
        ""
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部",
      "created": 1571741166,
      "updated": 1572307210,
      "id": "5de0f1912d39150017d17bf4",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部",
        " TODO - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "  一日目の写真",
        "  最終日の写真",
        "",
        " タグ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "figma フロントエンド 新人プログラマ応援 デザイン cocoda flutter",
        "",
        "",
        " 本文 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* ３ヶ月やるとどうなるか]",
        "　　Daily Cocoda 1日目",
        "　　　[https://gyazo.com/bb9884d90a0c952ab338440564f59887]",
        "　　　ちなみによく見かけるこのアイドルの方はぱくだそから取得してきました。",
        "",
        "　　Daily Cocoda 50日目(最終日)",
        "　　　[https://gyazo.com/85349fce0fe49c12ecc8549ba1970c2d]",
        "",
        "[* 諸注意]",
        "　　デザインシステムはマテリアルデザインを採用しています。",
        "　　オレオレ流です。間違いも多々あると思いますので、指摘お願いします。",
        "　　ここでいう３ヶ月とは、6H/日 * 90日です。(でも９０日のうち２０日ぐらいはサボっています。真面目にやれば一日6H *60ぐらい)",
        "\t\tこのページはデザイン一日目の自分を対象にしています。",
        "",
        "",
        "[* 私について]",
        "　　個人開発者としてモバイルアプリをつくって、その収益で生計を立てたいエンジニア",
        "　　Flutterで開発を始め、いくつかアプリを作ろうとするも、いづれのアプリもデザインが出来ずに断念",
        "　　デザインを学ぶ必要に迫られて、DailyCocoda!でデザインを学び始める。",
        "　　デザインは全くの初心者でセンス0",
        "　　7/23日から始めたDailyCocodaが10/15日に目出度く完走 <-- いまここ",
        "　　アプリをリリースして生計を立てる <-- これから",
        ""
      ]
    },
    {
      "title": "MAC 初期設定",
      "created": 1570179951,
      "updated": 1575883853,
      "id": "5de0f1912d39150017d17bf5",
      "lines": [
        "MAC 初期設定",
        "",
        "",
        "[* アカウント作成]",
        "ampersand.dev@gmail.com",
        "",
        " 手順",
        " 　クリーンインストール前",
        " 　　osの最新化",
        "   　`システム環境設定` -> `ソフトウェア・アップデート`",
        "　 　timemachimeにバックアップ",
        "　 　各種設定のエクスポート",
        "　　 　idea のプラグインをメモする",
        "　 　　`my/documents/mac初期化`フォルダを作ったのでそこに格納",
        "　 　 　[https://lblevery.com/sfn/work/mac-work/dictionary-registration/ Macの辞書登録の方法 | lblevery] -> `ユーザ辞書.plist`",
        "　 　 　`/Users/dev/.zshrc`",
        "　 　　スキッティーず",
        "　 　　 code:text",
        "　 　 　 アプリで稼げるようになったらするこ",
        "    　 ・10万以上する高級風俗店に行く",
        "    　 ・ソニーのフルサイズを買う",
        "    　 ・Mac book proを買う",
        "    　 ・日本中を旅する",
        "    　 ・本格的にカメラの勉強をする",
        "    　 ・オーダーメイドのワイシャツを買う",
        "    　 ・オーダーメイドのコートを買う",
        "    　 ・アイコンをデザイナーに作ってもらう",
        "    　 ・iPhoneを買う",
        "    　 ・apple watch買う",
        " 　　　github へのバックアップ",
        "\t\t\t　\tcode:zsh",
        "\t\t\t\t\t git add .",
        "\t\t\t\t\t git commit -m 'mac初期化'",
        "\t\t\t\t\t git push origin master ",
        " 　　　アプリのスクリーンショット",
        "     [https://gyazo.com/466bc810820530a0afd6d53fc3d18f24]",
        "     [https://gyazo.com/c0959e9c7e6659b50b0933fd0aca826a]",
        "     [https://gyazo.com/31da591c651ff81cf3563e3c47c3474f]",
        "　　　　　[https://gyazo.com/71fbd76bf200ff4f72a9bb07927a8cb1]",
        "　　　　　[https://gyazo.com/b80b457a5a22ba1cfb262b435962cc7b]",
        "　　　　　[https://gyazo.com/460ff9e0009f1060093a1e0e77043eb4]",
        "",
        "",
        "",
        "　　クリーンインストール",
        "　　 timemachineのHDDは外すこと。外さないと初期化してもタイムマシーンからバックアップされてしまう。　　　[https://tech.qookie.jp/posts/mac-clean-install-2/]を参考にする",
        "　　　 win キーを押しながらRを押したらうまくいったｎ",
        "　　　フルネーム　開発",
        "　　　アカウント名　dev",
        "　　　アカウント amepersand.dev@gmail.com",
        "　　　パスワードはマスターパスワード",
        "　　　バックアップディスクを暗号化にチェック",
        "",
        "　　クリーンインストール後の初期設定",
        "　　　timemachineから必要なフォルダをバックアップ？",
        "　　　ディスクユーティリティーから重複しているドライブを削除して重複解除",
        "　　　システム環境設定",
        "　　　　一般 -> Apple ID 再入力",
        "　　　　マウス -> スクロール方向のチェックをはずす",
        "　　　　セキュリティーとプライバシー -> 15分後にスリープ",
        "　　　　セキュリティーとプライバシー -> file valt をオン　icloudから復旧にon",
        "　　　　セキュリティーとプライバシー -> ファイヤーウォールをオン",
        "　　　　省エネルギー -> 15分",
        "　　　　日付と時刻 -> 時計 -> 日付を表示にチェック",
        "　　　　時報をアナウンスを入れてみる",
        "　　　dockから不要なのを表示しなくする",
        "",
        "　　ダウンロード",
        "　　 インターネット",
        "　　　　google chrome",
        "　　　　google日本語入力",
        "　　　　intelijidea ",
        "　　　 android sudio",
        "　　　 google drive",
        "　　　アプリ",
        "　　　　xcode",
        "　　　　GIPHY Capture",
        "　　　　Magnet ",
        "　　　　 Magnet有効化",
        "　　　　[Alfred]",
        "　　　　HyperSwitch",
        "　　　　 HyperSwitchの有効化",
        "　　　　f.lux",
        "　　　　steam",
        "　　　　tg pro",
        "",
        "  コマンドなど",
        "   [homebrew https://brew.sh/index_ja]",
        "   [node]",
        "    ※ ecma scriptに必要",
        "",
        "  その他",
        "  　LaunchPad -> DictionayTool -> 辞書設定",
        "   隠しファイルの表示",
        "   ディスプレイ映らないときはシャットダウンして、すべてのケーブルを外して１５秒まって、再度つなげて起動",
        "\t\t\tTG ファン `E23D17FC-0C07F699-654C57A1-F12290EC-D241843A`",
        "\t\t\t[github]の鍵の設定",
        "",
        "",
        "[* キーボードの設定]",
        " `ctrl + space`でひらがなと英字の切り替え",
        " `caps lock + shift`で半角と全角の切り替え ",
        " homebrewダウンロード",
        "",
        "",
        "[https://gyazo.com/0960ad6e3c1c33e6c7ca7970731eb77d]",
        "[https://gyazo.com/d3ef2b2a5dbc79df1d59c468ffdb67a2]",
        "",
        "",
        "　スタートアップ時にひらく設定",
        "　　OpenScrapboxMemo.command",
        "　　SleepPreparationTime.command",
        ""
      ]
    },
    {
      "title": "ショートカットコマンド一覧",
      "created": 1572249733,
      "updated": 1572251437,
      "id": "5de0f1912d39150017d17bf6",
      "lines": [
        "ショートカットコマンド一覧",
        "#チートシート",
        "コマンドがあっちゃこっちゃに散らかっているので、集約してみる",
        "よく使う順に並び変える？",
        "",
        "table:コマンド",
        " 名前\tコマンド\t備考",
        " clipy\tcmd + shift + V\t",
        " scrapbox\tcmd + ↑ or ↓\t行頭、行末",
        " scrapbox\tcmd + → or ←\t文頭、文末",
        "  mac\tctrl + ↓ から 矢印選択\t別ディスプレイのウインドウをアクティブにする",
        "\talfred\talt + shift\tランチャーを開く",
        "\tidea\tshift + enter \t行を追加する",
        "\tidea\talt + → or ←\t次 or 前の単語を選択する 矢印キーの拡張版って感じ",
        "\tidea\tshift + shift\tランチャーを開く",
        "\tidea\t\tホットリロードする",
        "\tidea\t\treformatする",
        "\tchrome\tタブ移動\tctrl + tab (+ shift) ",
        " chrome\t閉じる\tcmd + W  (+ shift)",
        " chrome\t1画面前後に進む\talt + ↑ or ↓ もしくは pagedown or pageup",
        " chrome\t一番上下に進む\tcmd + ↑ or ↓  もしくは home or end",
        " chrome\t前次のページに戻る\tcmd + ← or →",
        " chrome\tリンクを新しいタブで開く\tcmd + enter",
        " chrome\t検索欄にカーソルをあわせる\t/ (拡張)",
        "",
        "",
        "",
        "",
        "table:alfredコマンド",
        " 名前\tコマンド\t備考",
        " メモを取る\tmemo 〇〇\t[雑多何でもメモ]の最終行に記述される",
        " 英語を記録する\tenglish 〇〇\t[技術英語]の最終行に記述される",
        ""
      ]
    },
    {
      "title": "技術英語を読むための工夫",
      "created": 1572173396,
      "updated": 1572227613,
      "id": "5de0f1912d39150017d17bf7",
      "lines": [
        "技術英語を読むための工夫",
        " 順番",
        " 　同じ文章を三回読む",
        " 1. google翻訳で全文を日本語化して読む",
        "  ここの時点でわからない単語を文章ベースで登録する",
        " 2. フラッシュカードで読む",
        " 3. mousedictionayを使って読む",
        "",
        "",
        "",
        " 参考",
        "  [3年かけてたどり着いた英語記事を読むための方法 https://qiita.com/tomoyamachi/items/cdb2ccb78c6c9651e0ab]",
        "",
        "",
        "　読みやすくする",
        "\t\t[https://chrome.google.com/webstore/detail/dom-distiller-reading-mod/oiembdaoobijmdmeobkalaehgifealpl DOM Distiller Reading Mode - Chrome ウェブストア]",
        "\t\t　ショートカット作成すること",
        "",
        "",
        "　サマリー化",
        "\t\tMacの要約ツール",
        "\t\t　ショートカット作成すること",
        "\t\t[https://smmry.com/ SMMRY - Summarize articles, text, websites, essays and documents]",
        "",
        "",
        "　読み逃さない",
        "　　Spreed フラッシュカード拡張",
        "　　　ショートカット作成 or 右クリックから実行",
        "",
        "",
        "　辞書ツール",
        "　　[https://qiita.com/wtetsu/items/c43232c6c44918e977c9 Chrome拡張の高速な英語辞書ツールをつくりました(Mouse Dictionary) - Qiita]",
        "　　　ショートカット作成すること",
        "　　google翻訳",
        "　　　こちらは単語単位での登録",
        "",
        "",
        "　覚える",
        "　　[技術英語]",
        "　　scrapbox拡張で登録できるようにする",
        "　　 english + 〇〇",
        "",
        "",
        ""
      ]
    },
    {
      "title": "chrome拡張",
      "created": 1571460940,
      "updated": 1571994078,
      "id": "5de0f1912d39150017d17bf9",
      "lines": [
        "chrome拡張",
        "　初心者向け",
        "　　[【結構簡単】ブラウザアクションボタン発火の自作Chrome拡張機能の作り方＆サンプル http://degitekunote.com/blog/2016/11/02/chrome-extension/]",
        "　拡張機能",
        "　　[公式 https://developer.chrome.com/extensions/manifest]",
        "　　[5分で作るChrome拡張機能 https://qiita.com/k__watanabe/items/4777ecf1242927768b53]",
        "　　[仕事募集時、男性は60%くらい要件を満たしていればアプライする]",
        "",
        "　したいこと",
        "　　画面をショートカットしてタイトルとURLを取得、クリップボートにコピー",
        "　　SCRAPOKX 拡張さがす。",
        "　　ページを開いたときに、テキストエリアの最初にカーソルがあっている\t",
        "",
        "code:scrapbox拡張",
        "　var cursor_line = document.getElementsByClassName('cursor-line')",
        "　",
        " var link = cursor_line[0].getElementsByClassName('link')",
        " window.open(link[0].href);",
        " ",
        " var page_link = cursor_line[0].getElementsByClassName('page-link')",
        " window.open(page_link[0].href);",
        " ",
        "[https://gyazo.com/77b33dd2185d51004ebeabef3532e197]",
        "",
        "#JavaScript 関連",
        ""
      ]
    },
    {
      "title": "python-utils",
      "created": 1571915840,
      "updated": 1571916039,
      "id": "5de0f1912d39150017d17bfa",
      "lines": [
        "python-utils",
        "　現在時間と開始の時間の差を計算",
        "　　code:時刻の差を計算",
        "　　 import datetime",
        "   dt1 = datetime.datetime(2014,8,28,20,57,41)",
        "   dt2 = datetime.datetime(2014,8,28,19,51,50)",
        "   dt3 = dt1 - dt2",
        "   ",
        "   now = datetime.datetime.now()",
        "   start_alarm_time = datetime.datetime(now.year,now.month,now.day,19,30,00)",
        "   diff = start_alarm_time - now",
        "   print(diff.seconds)",
        "",
        " mp3再生",
        " 　この処理の直後にsleepいれないと、音楽が始まる前に処理が終了されてしまうことに注意",
        "  code:mp3再生",
        "   import pygame",
        "   def sound(music):",
        "       # ライブラリの初期化",
        "       pygame.mixer.init()",
        "       # MP3ファイルのロード",
        "       pygame.mixer.music.load(music)",
        "       pygame.mixer.music.play(1)",
        "",
        "　pythonファイルをbat形式で実行する",
        "　 finder上でエイリアスを作成してデスクトップとかに貼り付け",
        "　　code:pythonファイルをbat形式で実行する",
        "　　 #!/bin/bash",
        "   MY_DIRNAME=$(dirname $0)",
        "   cd $MY_DIRNAME",
        "   pipenv run python main.py",
        "   ",
        ""
      ]
    },
    {
      "title": "一日の終わりの音楽をMACから爆音で流す",
      "created": 1571893511,
      "updated": 1571911653,
      "id": "5de0f1912d39150017d17bfb",
      "lines": [
        "一日の終わりの音楽をMACから爆音で流す",
        "　鳴らす時間を設定",
        "　　19:30",
        "　現在時間と開始の時間の差を計算",
        "　　code:時刻の差を計算",
        "　　 import datetime",
        "   dt1 = datetime.datetime(2014,8,28,20,57,41)",
        "   dt2 = datetime.datetime(2014,8,28,19,51,50)",
        "   dt3 = dt1 - dt2",
        "   ",
        "   now = datetime.datetime.now()",
        "   start_alarm_time = datetime.datetime(now.year,now.month,now.day,19,30,00)",
        "   diff = start_alarm_time - now",
        "   print(diff.seconds)",
        "　差の秒数待つ",
        "　音楽開始",
        "　　音楽を決める",
        "　　　ホタルの光",
        "　　　戦場のメリークリスマス",
        "　　　G戦場のアリア",
        "　　（日本語いれる？）",
        "　音楽はループする",
        "　(30分経過したら止める？)",
        "　　並列化する必要あり",
        ""
      ]
    },
    {
      "title": "python",
      "created": 1571801380,
      "updated": 1571890810,
      "id": "5de0f1912d39150017d17bfc",
      "lines": [
        "python",
        " [python環境設定]",
        " [一日の終わりの音楽をMACから爆音で流す]",
        " [python-utils]",
        ""
      ]
    },
    {
      "title": "pipenv",
      "created": 1571889991,
      "updated": 1571890675,
      "id": "5de0f1912d39150017d17bfd",
      "lines": [
        "pipenv",
        "　インストール",
        "\t `brew install pipenv`でインストール",
        "",
        " すでに`Pipfile`がある場合は`pipenv install`するだけで環境を用意できる",
        " ライブラリをインストールする場合は`pip install 〇〇`の代わりに`pipenv install 〇〇`",
        "",
        "　実行する場合、`python main.py`の代わりに`pipenv run python main.py`",
        "",
        "",
        "#python #仮想環境",
        ""
      ]
    },
    {
      "title": "pythonプロジェクトを作成(pipenv)",
      "created": 1571890111,
      "updated": 1575879720,
      "id": "5de0f1912d39150017d17bfe",
      "lines": [
        "pythonプロジェクトを作成(pipenv)",
        " プロジェクトフォルダを[* finder]から作る(ideaからではない)",
        " ideaで上記フォルダを開く",
        " `cmd + ;`でProject Structureを開く",
        " 　Project Structure -> Project Settings -> Project -> Project SDK -> New...  -> python SDK -> Pipenv Environment ",
        "　 Base interpreter :  `usr/local/bin/python3.7`",
        "　 Install packages from Pipfile にチェック",
        "　 Pipenv executabole: `Auto-detected: /usr/local/bin/pipenv`",
        "　 [https://gyazo.com/f63f982113e3dd8086d3e64617a554f3]",
        "   PipfileとPipfile.lockが作られる",
        "　うまくいくための条件？",
        "　　Base interpreter と Pipenv executabole と `whitch python`の場所が同じ",
        "　 　whitch python -> `python: aliased to python3` -> `whitch python3` ",
        "",
        "",
        "　その後のpipenvの使い方は[pipenv]参考",
        ""
      ]
    },
    {
      "title": "python環境設定",
      "created": 1571864121,
      "updated": 1571890274,
      "id": "5de0f1912d39150017d17bff",
      "lines": [
        "python環境設定",
        " macのpython",
        "  MACの場合、python2 及び python3 は最初からインストールされている。",
        "  python3を使うには、`pyhon3`コマンドを使用する。",
        "",
        "",
        " でも色々不都合あるので、というよりpython2使わないので、[pythonコマンドが走ったら、python2ではなくpython3を実行する]ように設定を変更",
        "",
        "",
        "　[pipenv]を参考にインストール",
        "",
        "",
        "　[pythonプロジェクトを作成(pipenv)]",
        "",
        "",
        "",
        "---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------",
        "curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py",
        "python get-pip.py ",
        "pip install --user pipenv",
        "python -m site --user-base",
        "/Users/dev/Library/Python/3.7",
        "`echo 'export PATH=\"$PATH:/Users/dev/Library/Python/3.7\"' >> ~/.zshrc`",
        "",
        "`echo 'export LANG=ja_JP.UTF-8:$PATH' >> ~/.zshrc`",
        "`echo 'export LC_ALL=ja_JP.UTF-8:$PATH' >> ~/.zshrc`",
        "source ~/.zshrc",
        "",
        "lang lc_allしないとideaの新規プロジェクト作成時、失敗する",
        "TypeError: stat: path should be string, bytes, os.PathLike or integer, not NoneType",
        "",
        "Warning: the environment variable LANG is not set!",
        "We recommend setting this in ~/.profile (or equivalent) for proper expected behavior.",
        "Creating a virtualenv for this project…",
        "",
        "[https://gyazo.com/f77e606a56f3fc287a409dc9b3cfcd3a]",
        "",
        "",
        " パッケージ管理",
        " 　[pyenv、pyenv-virtualenv、venv、Anaconda、Pipenv。私はPipenvを使う。 https://qiita.com/KRiver1/items/c1788e616b77a9bad4dd]がよくまとまっている。",
        "",
        " プロジェクトのディレクトリで`pipenv --python 3`で環境を構築する。",
        " 　プロジェクトのディレクトリで以下のファイル、フォルダができる",
        " 　　venv",
        " 　　Pipfile",
        "",
        "",
        ""
      ]
    },
    {
      "title": "zshについて",
      "created": 1570881296,
      "updated": 1571876232,
      "id": "5de0f1912d39150017d17c00",
      "lines": [
        "zshについて",
        "　bashのほぼ上位互換",
        "　パスを記述するファイル名はzsh (bashならbash_profile)",
        "",
        " ファイルを開いて書き込み",
        " 　`vi ~/.zshrc` もしくは`open -a TextEdit ~/.zshrc`でファイルを開いて以下を書き込み",
        " 　`export PATH=\"/Users/dev/my/app/setting/flutter/bin:$PATH\"`",
        " 一度に書き込み",
        "\t　`echo 'export PATH=/Users/dev/my/app/setting/flutter/bin:$PATH' >> ~/.zshrc`",
        " profileの更新と確認",
        " \t`source ~/.zshrc`",
        ""
      ]
    },
    {
      "title": "pythonコマンドが走ったら、python2ではなくpython3を実行する",
      "created": 1571874928,
      "updated": 1571875853,
      "id": "5de0f1912d39150017d17c01",
      "lines": [
        "pythonコマンドが走ったら、python2ではなくpython3を実行する",
        " Homebrewが入っていること",
        "",
        "code:pythonコマンドが走ったら、python2ではなくpython3を実行する",
        " brew install python",
        " echo 'alias python=python3' >> ~/.zshrc",
        " source ~/.zshrc",
        " python python --version",
        "3系統のバージョンであることを確認する。",
        "",
        "#環境設定　#初期設定 #pyhton",
        ""
      ]
    },
    {
      "title": "flutterのセットアップ",
      "created": 1570964711,
      "updated": 1571786454,
      "id": "5de0f1912d39150017d17c02",
      "lines": [
        "flutterのセットアップ",
        " flutter のインストールと設定",
        " 　[公式 https://flutter.dev/docs/get-started/install/macos]からSDKをダウンロードする。",
        " 　解凍する。",
        " 　適当なフォルダに置く",
        " 　　`/Users/dev/my/app/setting/flutter`に置いた",
        " 　パスを通す",
        " 　　bashの場合は`vi ~/.bash_profile` もしくは`open -a TextEdit ~/.bash_profile`",
        " 　　zshの場合は`vi ~/.zshrc` もしくは`open -a TextEdit ~/.zshrc`",
        " 　\t　使用しているシェルの確認は `echo $SHELL`",
        " 　　`export PATH=\"/Users/dev/my/app/setting/flutter/bin:$PATH\"`",
        "  　　　`export PATH=\"/home/chrx/Desktop/flutter/bin:$PATH\"`",
        " \t profileの更新と確認",
        "  \t　`source ~/.bash_profile` or `source ~/.zshrc`",
        "  \t　`echo $PATH`",
        "  別ターミナルを開いて`flutter --version`",
        "  `flutter doctor`で一つずつ不具合を潰していく",
        ""
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その３ Daily Cocoda編",
      "created": 1571741394,
      "updated": 1571742161,
      "id": "5de0f1912d39150017d17c03",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする その３ Daily Cocoda編",
        "",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部]",
        "",
        "[* 目次]",
        "　私の一日目のやつ",
        "　私の２周め一日目のやつ",
        "　資料集め",
        "　作る",
        "",
        "",
        "　最初に資料を集めよう。",
        "\t　資料集めは妥協しない。じっくり時間をかけて良いデザインを集められれば、いいデザインができる",
        "\t　pinterest",
        "\t　 〇〇 appで検索",
        "\t　dribbble",
        "\t　 moble に設定して検索",
        "\t　cocoda",
        "\t　 投稿されたデザインを別タブで開いて良さげなのを選別していく",
        "\t　スマートフォンのアプリ",
        "\t　　よく使われているアプリのスクリーンショットを取得していく",
        "",
        "　作成に取り掛かる",
        "　　全体像を気まます。",
        "　　\t具体的にいうと、appbar bottom navigation bar tab、その他マテリアルコンポーネントの何を使うか決めます。",
        "　　コンポーネントをはめ込む",
        "　　 シートを作る",
        "　　 　picel3なので、hight720 wide 360で作ります。",
        "　　 　システムバーとか一番したのやつ",
        "　　色、フォント、他ぽグラフぃーを決める",
        "　　コンテンツ部分を作り込んでいく",
        "　　微調整",
        "　　完成",
        "　　モックにはめ込む　",
        "　　　pixcel3",
        "　　　iphone",
        ""
      ]
    },
    {
      "title": "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする Daily Cocoda編_2",
      "created": 1571741408,
      "updated": 1571741408,
      "id": "5de0f1912d39150017d17c04",
      "lines": [
        "デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする Daily Cocoda編_2",
        "[デザインを何もしらないエンジニアがDailyCocoda！を3ヶ月かけて完走したので、1日目の自分にアドバイスする 共通部]",
        ""
      ]
    },
    {
      "title": "node",
      "created": 1571463983,
      "updated": 1571469361,
      "id": "5de0f1912d39150017d17c05",
      "lines": [
        "node",
        "　初期設定",
        "　 [【Mac】node.jsインストール方法 https://qiita.com/yacchi1123/items/a85598bf7a35cb1307dc]",
        "　 [MacにNode.jsをインストール https://qiita.com/kyosuke5_20/items/c5f68fc9d89b84c0df09]",
        "　 [aaqa]",
        ""
      ]
    },
    {
      "title": "Intelij IDEAのインストール・設定",
      "created": 1571360537,
      "updated": 1584232503,
      "id": "5de0f1912d39150017d17c08",
      "lines": [
        "Intelij IDEAのインストール・設定",
        "//todo 後で書く",
        ""
      ]
    },
    {
      "title": "inteliJIDEAからgithubにアクセスする",
      "created": 1571365631,
      "updated": 1571365731,
      "id": "5de0f1912d39150017d17c09",
      "lines": [
        "inteliJIDEAからgithubにアクセスする",
        "",
        "　github",
        "　　[https://github.com/new]からプロジェクトと同じ名前のリポジトリを作る",
        "　　作ったリポジトリのurlを控える",
        "　　　githubというプロジェクト名にした場合、[https://github.com/ampersand-dev/github.git]がurl",
        "　　　sshのほうがいいかも",
        "",
        "",
        "",
        "intelij idea ",
        "　 プロジェクトを作成する。",
        "　 コンソールから`git init`を実行する。",
        "　 必要なら`touch readme.md`と`touch gitignore`を実行する。",
        "　 コンソール上でプロジェクト名を右クリック -> git -> repogitory -> Remotes -> + -> URLを入力 -> ok",
        "",
        "[https://gyazo.com/5d4738d17d3e241bfe097462e8ef2b3e]"
      ]
    },
    {
      "title": "セットアップ",
      "created": 1569590340,
      "updated": 1571360542,
      "id": "5de0f1922d39150017d17c0b",
      "lines": [
        "セットアップ",
        " [heroku]",
        " [laradock]",
        "　[ubuntu]",
        "　[docker]",
        " [github]",
        " [dartのセットアップ]",
        " [flutterのセットアップ]",
        "　[MAC 初期設定]",
        "　[Intelij IDEAのインストール・設定]",
        ""
      ]
    },
    {
      "title": "qiita-前調べたやつ",
      "created": 1571128228,
      "updated": 1575023370,
      "id": "5de0f1922d39150017d17c0c",
      "lines": [
        "qiita-前調べたやつ",
        "[お前らの記事のタイトルは間違っている〜爆速で誰でもできるQiitaでバズらせる6個の必殺技まとめ　https://qiita.com/SugarShootingStar/items/bba0fab1e55936e7234a]",
        "　タイトルに速度感を出す",
        "　タイトルに数字を入れてボリューム感を出す",
        "　記事で１番伝えたい所をタイトルに入れてアピール",
        "　ペルソナに初心者を含める",
        "",
        "",
        "[Qiitaでバズった話と、その次の記事が全くバズらん話　https://ytsubuku.com/buzz-on-qiita]",
        "　いいね数 = 閲覧数 × いいね率(いいね/閲覧)のため、閲覧数が少ないいいね率が低いのどちらかと思われる。",
        "　閲覧数を増やすためにはタグ選定は大事",
        "　https://qiita.com/tags からタグ付け数が多い記事を選ぶと良さそう。（タグのフォロワーも多くなるのでタイムラインに乗りやすい。）",
        "　タイトルはめちゃ大事",
        "　技術書というマスなジャンルと、成り上がりというユニークなワードを組み合わせたのが良かったっぽい",
        "　いいね率を上げるためには　共感を呼べるもの　ストックしたくなるもの　役に立ったもの　という記事を書くことが大事。",
        "* タグ選定は大事",
        "",
        "",
        "[Qiitaの全記事分析｜バズる投稿を考察する https://qiita.com/mtitg/items/25e3d0d75429dcfeb199]",
        " 月曜朝7~8時に初心者向けの機械学習系の内容で、タイトル20~36文字で本文ができれば1万文字程度の記事を書くと良い",
        "",
        "",
        "[Qiita初投稿でも狙ってバズらせられた話『5つの成功と2つの失敗 https://blog.farts.work/archives/857%5D]",
        "* タイトルの吟味",
        "  * おそらく一番重要。クリックしてもらえなかったらどんなに頑張っても意味がない（あとめっちゃ悲しい）ので、実は意外と時間をかけた。",
        "  * むやみにターゲットを絞りすぎない",
        "  * 定量的な数値で興味を引き立てる",
        "  * キャッチーなワードを入れる",
        "  * タイトルは最大40文字くらい",
        "",
        "+ ファーストインプレッションの向上",
        "  * 大体誰しもが3～5秒くらいで価値を見定める",
        "言いたいことだけ端的に言う（今回は記事ターゲットやこの記事で実現出来ること）",
        "文字よりも画像（いければgif画像）",
        "なんか面白そうな内容（今回はアニメ関連なアプリみたいな）",
        "投稿タイミング",
        "月・火曜日頃、遅くとも週の真ん中くらいまでには投稿",
        "",
        "# gif",
        "(GIF動画でスクリーンショットを撮るScreen To Gifを導入。Gyazoの有料版に手が出ない人へ。)[https://blog.f-arts.work/archives/762]",
        "",
        "",
        " また、ファーストビューに収まるぐらい上部に、その記事でのゴールや完成図が載っていると読まれやすいです。",
        "記事を訪れたユーザーがファーストビューや1〜2スクロール分を読んで「このページは課題解決してくれそうかどうか」を即座に判別できないと、すぐ離脱されます。",
        "",
        "",
        ""
      ]
    },
    {
      "title": "dartのセットアップ",
      "created": 1570964644,
      "updated": 1570964758,
      "id": "5de0f1922d39150017d17c0d",
      "lines": [
        "dartのセットアップ",
        "  ※[homebrew https://brew.sh/index_ja]がインストールされていること",
        "  code: zsh",
        "   brew tap dart-lang/dart",
        "   brew install dart",
        "   dart --version",
        ""
      ]
    },
    {
      "title": "github",
      "created": 1569587773,
      "updated": 1575524382,
      "id": "5de0f1922d39150017d17c0e",
      "lines": [
        "github",
        "　[githubのssh設定]",
        "　[inteliJIDEAからgithubにアクセスする]",
        " [GitのSSH鍵認証でパスワードを入力せずに済むようにする]",
        "　[gitコマンド]",
        "　[githubでプライベートプロジェクトを作る]",
        "",
        "#環境構築 #セットアップ"
      ]
    },
    {
      "title": "SSH",
      "created": 1570945120,
      "updated": 1570946670,
      "id": "5de0f1922d39150017d17c0f",
      "lines": [
        "SSH",
        "sshとは",
        "　セキュアに他のコンピュータを遠隔操作する仕組みのこと",
        "　暗号化された通信方法",
        "　リモートコンピュータと通信するためのプロトコル",
        "　公開鍵暗号方式を採用",
        "",
        "従来は、TelnetやFTPなどの手法でリモート通信が行われていましたが、これらはパスワードを暗号化のない平文で送信してしまうため、盗聴のリスクがありました。",
        "",
        "　鍵のペアを作成",
        "　　code:zsh",
        "　　 ssh-keygen -t rsa -b 4096 -C \"ampersand.dev@gmail.com\"",
        "    Enter file in which to save the key (略): /Users/dev/my/app/setting/ssh-key/id_rsa",
        "    Enter passphrase (empty for no passphrase): マスターパスワード",
        "    Enter same passphrase again: マスターパスワード",
        " \t「id_rsa」（秘密鍵）と「id_rsa.pub」（公開鍵）ができる",
        "",
        " configの設定",
        "  デフォルト以外のフォルダやファイル名を指定してる場合は、config設定が必須",
        "  `vi ~/.ssh/config` `:wq`",
        " 　code:zsh",
        " 　 Host github github.com",
        "     HostName github.com",
        "     IdentityFile /Users/dev/my/app/setting/ssh-key/id_rsa",
        "     User git",
        ""
      ]
    },
    {
      "title": "Alfred",
      "created": 1570859803,
      "updated": 1570931935,
      "id": "5de0f1922d39150017d17c10",
      "lines": [
        "Alfred",
        " app storeから落とすのではなく、webから落とす",
        " webのほうが新しい",
        "",
        "[https://gyazo.com/e29ca15d689ab0b49eb31bdf0477cefd]",
        "",
        " alfred -> preference -> japan にする",
        "　alfred -> preference -> Launch Alfred at loginにチェックする",
        "　feature -> web bookmarks -> source -> google chrome bookmarksにチェックする",
        "　feature -> web bookmarks -> open bookmarks -> in bookmarks sorce brower にする",
        "",
        "　カスタムショートカットを作成する",
        "",
        "　spotlightが邪魔なので非表示化する",
        "　　[https://gyazo.com/0f73b123c71413d81e7baf0f930905df]",
        "チェックを外す",
        ""
      ]
    },
    {
      "title": "コマンド・ショートカット",
      "created": 1569587299,
      "updated": 1570862443,
      "id": "5de0f1922d39150017d17c11",
      "lines": [
        "コマンド・ショートカット",
        ""
      ]
    },
    {
      "title": "ポモドーロ",
      "created": 1570173305,
      "updated": 1570173960,
      "id": "5de0f1922d39150017d17c12",
      "lines": [
        "ポモドーロ",
        "　googleログイン",
        "　ポモドーロ",
        "　30分したら自動的にアプリを立ち上げて入力を促す",
        "　アプリはflutter webで作る",
        "　30分したら立ち上げはgoogle拡張か",
        "　webサイトブロック",
        "",
        " google拡張機能",
        " 　30分したら自動的にアプリを立ち上げ",
        " 　音を鳴らす or バイブを鳴らす",
        "",
        " アプリ",
        " 　flutter web",
        " 　　googleログイン",
        " 　　curdアプリ",
        " 　　分析機能",
        " 　　　前日比較、週間比較、月間比較など",
        "",
        " 別の案",
        " 　デスクトップアプリ化",
        " 　スマートフォンアプリ",
        " 　　通知はバイブ、通知　アプリの自動たちあげは無理か？",
        ""
      ]
    },
    {
      "title": "セルの入力値を取得",
      "created": 1570087280,
      "updated": 1570087321,
      "id": "5de0f1922d39150017d17c13",
      "lines": [
        "セルの入力値を取得",
        "//シートを取得",
        "  var sheet = SpreadsheetApp.getActive().getSheetByName('集計');",
        "  //セルを取得",
        "  var range1 = sheet.getRange('A1').getValue();       //A1を取得",
        "  var range2 = sheet.getRange('A2:D2').getValue();    //A2~D2の範囲を取得",
        "  var range3 = sheet.getRange(2, 3).getValue();       //getRange(n番目の行, n番目の列) C2を取得",
        "  var range4 = sheet.getRange(3, 1, 2, 3).getValue(); //getRange(n番目の行, n番目の列, n行取得, n列取得) A3~C4の範囲を取得",
        ""
      ]
    },
    {
      "title": "スプレットシート",
      "created": 1570085523,
      "updated": 1570087275,
      "id": "5de0f1922d39150017d17c14",
      "lines": [
        "スプレットシート",
        "　[自分のセル位置を知る]",
        "　[セルの入力値を取得]",
        " [ログの見方]",
        "",
        "=ColorActionTable()",
        "= ColorActionTable(a, b)",
        "= ColorActionTable((row()), (column()))",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "ログの見方",
      "created": 1570086323,
      "updated": 1570086323,
      "id": "5de0f1922d39150017d17c15",
      "lines": [
        "ログの見方",
        "[https://gyazo.com/3498102f1914b2a71d336288ad0a262b]",
        ""
      ]
    },
    {
      "title": "自分のセル位置を知る",
      "created": 1570085708,
      "updated": 1570085730,
      "id": "5de0f1922d39150017d17c16",
      "lines": [
        "自分のセル位置を知る",
        "= row()",
        "= column()",
        ""
      ]
    },
    {
      "title": "inv-web",
      "created": 1569582635,
      "updated": 1570080441,
      "id": "5de0f1922d39150017d17c18",
      "lines": [
        "inv-web",
        " [* [inv関連]]",
        " ",
        "# inv-web開発日誌",
        "",
        "## メモ",
        "`touch inv-web.md`",
        "",
        "",
        "## git",
        "inv.repoとcrawler.gitフォルダ作成  ",
        "```",
        "mkdir inv.repo",
        "cd inv.repo",
        "mkdir crawler.git",
        "cd crawler.git",
        "```",
        "",
        "crawler.gitをリモートリポジトリに",
        "```",
        "git init --bare --shared=true",
        "```",
        "",
        "ローカルリポジトリを設定",
        "ディレクトリのパスは変えないこと",
        "```",
        "git init",
        "git add .",
        "git commit -m \"test commit!\"",
        "",
        "git remote add crawler ~/Dropbox/inv.repo/crawler.git",
        "",
        "git push crawler master",
        "```",
        "```",
        "git clone -o [好きな名前] [Dropbox上のレポジトリへのパス]",
        "```",
        "",
        "## laradock",
        "",
        "### インストール",
        "```",
        "cd /inv/web/docker",
        "git clone https://github.com/LaraDock/laradock.git",
        "",
        "cd laradock",
        "cp env-example .env",
        "```",
        "",
        ".envファイル修正",
        "```",
        "# NGINX_HOST_HTTP_PORT=80",
        "NGINX_HOST_HTTP_PORT=3000",
        "",
        "# MYSQL_VERSION=latest",
        "MYSQL_VERSION=5.7",
        "MYSQL_DATABASE=web-db",
        "MYSQL_USER=web-user",
        "MYSQL_PASSWORD=secret",
        "# MYSQL_PORT=3306",
        "MYSQL_PORT=3366",
        "```",
        "",
        "起動",
        "",
        "```",
        "cd /inv/web/docker/laradock",
        "docker-compose up -d nginx mysql",
        "```",
        "",
        "プロジェクト作成",
        "```",
        "docker exec -it laradock_workspace_1 bash",
        "apt-get update",
        "composer create-project laravel/laravel i-web --prefer-dist",
        "",
        "exit",
        "docker-compose stop",
        "```",
        ".envファイル修正",
        "```",
        "# APP_CODE_PATH_HOST=../",
        "APP_CODE_PATH_HOST=../web",
        "http://localhost:3000",
        "```",
        "",
        "mysql 設定",
        "```",
        "# MYSQL_VERSION=latest",
        "MYSQL_VERSION=5.7",
        "# MYSQL_DATABASE=default",
        "MYSQL_DATABASE=inv-web-db",
        "# MYSQL_USER=default",
        "MYSQL_USER=user",
        "# MYSQL_PASSWORD=default",
        "MYSQL_PASSWORD=secret",
        "# MYSQL_PORT=3306",
        "MYSQL_PORT=3307",
        "```",
        "docker-compose up --build -d nginx mysql",
        "",
        "",
        "------------------------------------------------",
        "",
        "unix_socket",
        "```",
        "docker exec -it laradock_mysql_1 bash",
        "mysql -u root -p",
        "show variables like '%sock%';",
        "| socket                                  | /var/run/mysqld/mysqld.sock",
        "```",
        "",
        "database,php",
        "```",
        "'database' => env('DB_DATABASE', 'inv-web-db'),",
        "'username' => env('DB_USERNAME', 'user'),",
        "'password' => env('DB_PASSWORD', 'secret'),",
        "```",
        "",
        "http://localhost:81",
        "https://qiita.com/ekzemplaro/items/aa7162278008a08be247",
        "",
        "php artisan serve --host=localhost --port=81",
        "",
        "## dockerコマンド",
        "```",
        "sudo chmod -R 777 ./",
        "docker-compose up -d nginx mysql",
        "docker exec -it laradock_workspace_1 bash",
        "",
        "docker-compose stop",
        "docker-compose restart",
        "",
        "docker-compose up -d nginx mysql",
        "```",
        "",
        "## memo",
        "バージョンの違いか、`php artisan migrate:make`は通らないけど、",
        "`php artisan make:migration`は通る  ",
        "[mysqlの設定 ユーザー作成など](https://qiita.com/maejima_f/items/34cf3b8eb5ffbe256ad9)",
        "",
        "[mysqlの設定](http://www.dn-web64.com/archives/web/laradock_laravel/",
        ")",
        "",
        "[mysqlのverを8->5.7にして動かないとき](https://qiita.com/lara_bell/items/d4bd1340a5cc7dfcfcb4)",
        "",
        "[mysql上で`mysql: [Warning] World-writable config file '/etc/mysql/conf.d/my.cnf' is ignored.が出たとき`](https://jflute.hatenadiary.jp/entry/20131118/1384759432)",
        "chmod 644 /etc/mysql/conf.d/my.cnf",
        "",
        "php artisan make:migration create_categories_table  ",
        "php artisan make:migration create_comments_table  ",
        "php artisan make:migration   ",
        "",
        "docker exec -it laradock_workspace_1 bash  ",
        "php artisan migrate",
        "",
        "docker exec -it laradock_mysql_1 bash",
        "mysql -u root -p",
        "",
        "",
        "php artisan tinker",
        "App\\User::all()->toArray();",
        "",
        "php artisan make:controller InvController",
        ""
      ]
    },
    {
      "title": "css 関連",
      "created": 1570080421,
      "updated": 1570080421,
      "id": "5de0f1922d39150017d17c19",
      "lines": [
        "css 関連",
        " [* [vuetify]]",
        ""
      ]
    },
    {
      "title": "figma 関連",
      "created": 1569590232,
      "updated": 1570080402,
      "id": "5de0f1922d39150017d17c1a",
      "lines": [
        "figma 関連",
        "　[fontawesome5]",
        " [material design]",
        " [エンプティステート]",
        ""
      ]
    },
    {
      "title": "osコマンド",
      "created": 1570080203,
      "updated": 1570080203,
      "id": "5de0f1922d39150017d17c1b",
      "lines": [
        "osコマンド",
        " [fingerprint]",
        ""
      ]
    },
    {
      "title": "エンプティステート",
      "created": 1570076943,
      "updated": 1570077258,
      "id": "5de0f1922d39150017d17c1c",
      "lines": [
        "エンプティステート",
        "表示する情報がない時にユーザーが見る画面のこと。 ここで何を表示するかでアプリの価値は大きく変わる。",
        "[UIデザイナー必見！ アプリの導入画面で使われる主な４つの手法 https://hajipion.com/1358.html]",
        ""
      ]
    },
    {
      "title": "組み合わせタイマー",
      "created": 1569831117,
      "updated": 1592099453,
      "id": "5de0f1922d39150017d17c1d",
      "lines": [
        "組み合わせタイマー",
        "参考",
        "　[アプリをつくる手順]",
        "　[組み合わせタイマーのマーケティング]",
        "",
        "　アプリ",
        "　　[組み合わせタイマー - 開発前マーケティング -]",
        "　　[組み合わせタイマー - デザイン -]",
        "　　[組み合わせタイマー - 開発 -]",
        "　　[組み合わせタイマー - 広告・宣伝 -]",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "自己管理スプレットシート",
      "created": 1569673807,
      "updated": 1569677061,
      "id": "5de0f1922d39150017d17c1e",
      "lines": [
        "自己管理スプレットシート",
        "[* メモ]",
        "　[チェックボックス https://tanuhack.com/useful-tool/spreadsheet/todo-checkbox/]",
        "",
        " 可視化",
        " 　OK GOOGLE おはよう　おやすみ",
        " 　　スプレットシートに記録",
        " 　何時に何をしたか",
        " 　日単位時間順",
        " 　行動した時間帯",
        " 　　朝ごはんを食べた時間帯",
        " 　　　06-09時 4回/週",
        " 　種別のグラフ",
        " 　　Y軸が回数(30分単位)",
        " 　　X軸が項目",
        " 　項目",
        " 　　仕事",
        " 　　なにもしてない",
        " 　　ゲーム",
        " 　　家事",
        " 　　運動",
        " 　　UE",
        "",
        "　ポモドーロ",
        "　　MACに仕込む",
        "　　　スケジューラーに仕込む",
        "　　　GUIから開始停止を触れるようにする",
        "　　　時間●分前に声で知らせる",
        "　　　終わったらGASを開く",
        "　　　そもそもプログラム一本書いてwaitさせておけばいい",
        "　　　　wait 25分 wait 30分",
        ""
      ]
    },
    {
      "title": "google home",
      "created": 1569589607,
      "updated": 1569673555,
      "id": "5de0f1922d39150017d17c1f",
      "lines": [
        "google home",
        "[* メモ]",
        "　体重を記録する",
        "　起床、就寝",
        "　scrapbox メモ",
        "　gas連携",
        "　ログ取り忘れ時のリマインダー　",
        " google-home-notifier",
        "　メモ",
        "　アマゾン配送状況",
        "　翻訳",
        "　ルーティーン機能",
        "",
        "[* 音声コマンド]",
        "　携帯を鳴らして",
        "　音楽を再生して  -> spotify",
        "　　次の曲",
        "　今日の天気は？",
        "　タイマーを10秒後に設定",
        "",
        "[* gas連携]",
        " ポモドーロ",
        " 作業ごとにgooglehomeに話しかけてその時刻とメモを取る",
        " 　「ok google タスク 〇〇を開始」",
        " 　→ スプレットシートに時刻、メモが記述される",
        " 　table: 例",
        " 　 日にち\t時刻\tメモ",
        " 　 20190621\t10:21\t〇〇を開始",
        "　記録を可視化する手立てが必要",
        "",
        "[* ルーチン]",
        "　06:30",
        "　8:00",
        "　11:00",
        "　14:00",
        "　17:00",
        "　20:00",
        "",
        "[* WakaTime]",
        " gasと連携したい",
        ""
      ]
    },
    {
      "title": "nuxt",
      "created": 1569590180,
      "updated": 1569590811,
      "id": "5de0f1922d39150017d17c21",
      "lines": [
        "nuxt",
        "　[nuxt プロジェクト作成]",
        "　[lint fix]",
        "　[no-console解除]",
        " [dotenv https://qiita.com/yfujii1127/items/c77bff6f0177b4ff219e]",
        " [画面のresize]",
        " [no-console解除]",
        " [storeのサンプル]",
        " [フォルダ構成]",
        " [firebase ver nuxt 1] ",
        " [firebase ver nuxt 2] "
      ]
    },
    {
      "title": "inv関連",
      "created": 1569590495,
      "updated": 1569590520,
      "id": "5de0f1922d39150017d17c23",
      "lines": [
        "inv関連",
        " [inv-web]",
        " [docker チートシート]",
        ""
      ]
    },
    {
      "title": "vuetify",
      "created": 1564553694,
      "updated": 1569590295,
      "id": "5de0f1922d39150017d17c25",
      "lines": [
        "vuetify",
        "　[vuetify基本]",
        "　[vuetify]",
        "　[vuetify responsive navigation]",
        "　[grid]",
        "",
        ""
      ]
    },
    {
      "title": "vuetify基本",
      "created": 1569590278,
      "updated": 1569590278,
      "id": "5de0f1922d39150017d17c27",
      "lines": [
        "vuetify基本",
        " nuxt でコード補完を効かせるには以下を実行する必要がある",
        " 　code:bash",
        " 　 npm i vuetify --save",
        " [font weights https://vuetifyjs.com/ja/framework/typography]",
        "  code:js",
        "   <span class=\"font-weight-thin\">this is text.</span>",
        " [color https://vuetifyjs.com/ja/framework/colors]",
        "  クラスで使用できるカラーはリンク先のページで",
        "  textの場合は〇〇--text",
        "  code:js",
        "   <span class=\"red\">this is text.</span>",
        "   <span class=\"indigo lighten-5\">this is text.</span>",
        "   <p class=\"pink lighten-4 red--text\">sssssssssssssssssssssssssssssssssssss</p>",
        " [spacing https://windii.jp/frontend/nuxt/vuetify-tutorial]",
        "  code:javascript",
        "     <v-card-title class=\"font-weight-bold pb-0\">",
        "      新規会員登録フォーム(3分で完了)",
        "    </v-card-title>",
        "    <v-card-text>",
        "      WINDIIキャリアに登録すると、スキルシートを簡単にPDFに出力したり、企業からのオファーが届くようになります！",
        "    </v-card-text>",
        "　 pb-0といった形で表記する。",
        "　　　1文字目は、margin の m かpadding の p",
        "　　　2文字目は、top bottom right left 、もしくは y(top bottom) x(right left) all のいずれか",
        "　　　3文字目は、ハイフン",
        "　　　4文字目は0 - 5 の範囲 一単位4px",
        " [grid]",
        ""
      ]
    },
    {
      "title": "fingerprint",
      "created": 1569589088,
      "updated": 1569589096,
      "id": "5de0f1922d39150017d17c28",
      "lines": [
        "fingerprint",
        "`keytool -list -v -keystore ~/.android/debug.keystore -alias androiddebugkey -storepass android -keypass android`",
        ""
      ]
    },
    {
      "title": "docker",
      "created": 1569587744,
      "updated": 1569587749,
      "id": "5de0f1922d39150017d17c29",
      "lines": [
        "docker",
        "",
        " docker-compose",
        "```touch docker-compose.yml```",
        "",
        "以下を記述したとする。",
        "```",
        "# version3が最新",
        "version: '3'",
        "services:",
        "  dart:",
        "    image: google/dart`",
        "```",
        "",
        "docker-compose run dart",
        "",
        "名前|コマンド|備考",
        ":-|:-|:-|",
        "起動|docker-compose up",
        "停止|docker-compose down|",
        "確認|docker-compose ps|",
        "",
        "",
        "",
        "## メモ",
        "```",
        "docker run -p 3306:3306",
        "--env MYSQL_ROOT_PASSWORD=mysql",
        "--name test-mysql",
        "mysql:latest",
        "",
        "docker ps",
        "docker ps -a",
        "",
        "docker stop ",
        "docker rm",
        "",
        "docker pull python",
        "docker run -it --name pytest python:latest /bin/bash",
        "```",
        "",
        "export UID=${UID} GID=${GID}",
        "",
        "# ホストでidコマンドを打って出た値を指定する。",
        "#こうすることでvolumesの権限がホストとdockerで一致する。",
        "# 左辺がローカルフォルダ、右辺がdockerフォルダ",
        "",
        "#環境構築 #セットアップ"
      ]
    },
    {
      "title": "ubuntu",
      "created": 1569587511,
      "updated": 1569587511,
      "id": "5de0f1922d39150017d17c2a",
      "lines": [
        "ubuntu",
        "ubuntu",
        "`ctrl + shift + M　`",
        "# ubuntu セットアップ",
        "",
        "## コマンドで実行",
        "",
        "```",
        "# フォルダ作成 -Rは下部のディレクトリも対象にするオプション",
        "# chown 所有者の変更 root -> ando",
        "# chmod 権限の変更 フルコン",
        "sudo mkdir /inv",
        "sudo chown -R ando inv",
        "sudo chmod -R 777 /inv",
        "",
        "sudo mkdir /inv_data",
        "sudo chown -R ando /inv_data",
        "sudo chmod -R 777 /inv_data",
        "",
        "sudo apt-get update -y",
        "sudo apt-get upgrade -y",
        "",
        "# gparted",
        "sudo apt-get install gparted -y",
        "",
        "# Audacious",
        "sudo apt-get install audacious -y",
        "",
        "# vlcメディアプレーヤー",
        "sudo apt-get install vlc",
        "",
        "# chrome",
        "sudo sh -c 'echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'",
        "sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -",
        "sudo apt-get update",
        "sudo apt-get install google-chrome-stable",
        "",
        "# virtualbox",
        "sudo apt-get install virtualbox",
        "",
        "# atom",
        "sudo add-apt-repository ppa:webupd8team/atom",
        "sudo apt-get update",
        "sudo apt-get install atom",
        "",
        "# Rundeck",
        "sudo apt-get install openjdk-8-jdk -y",
        "wget http://dl.bintray.com/rundeck/rundeck-deb/rundeck-2.8.2-1-GA.deb",
        "sudo dpkg -i rundeck-2.8.2-1-GA.deb",
        "service rundeckd status",
        "",
        "sudo apt-get -y install php",
        "sudo apt install composer",
        "sudo apt-get install php7.2-mbstring",
        "sudo apt-get install php7.2-dom",
        "sudo apt-get install php7.2-xml",
        "sudo apt-get install php7.2-cli",
        "sudo apt-get install php7.2-zip",
        "",
        "# docker",
        "https://qiita.com/shimisunet/items/b20d1cb45074486c026d",
        "sudo systemctl enable docker",
        "",
        "# docker-compose",
        "sudo curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose",
        "sudo chmod +x /usr/local/bin/docker-compose",
        "",
        "# docker sudo　なくて実行できるようにする",
        "sudo groupadd docker",
        "sudo gpasswd -a ${USER} docker",
        "sudo chgrp docker /var/run/docker.sock",
        "sudo service docker restart",
        "sudo sed -i -e \"s/#ExecStart=\\/usr\\/bin\\/dockerd -H fd:\\/\\//ExecStart=\\/usr\\/bin\\/dockerd -H fd:\\/\\/ -H tcp:\\/\\/0.0.0.0:2376/g\" /lib/systemd/system/docker.service",
        "sudo systemctl daemon-reload",
        "sudo systemctl restart docker",
        "# 再起動",
        "docker -v",
        "",
        "# vnc",
        "sudo apt-get install vnc4server -y",
        "# パスワード設定",
        "vncpasswd",
        "# VNCサーバの初回起動。これによって設定ファイルが作成される。",
        "vncserver :1",
        "# 起動確認ができたらVNCサーバを停止する",
        "vncserver -kill :1",
        "",
        "# スケジューラー",
        "sudo apt-get install gnome-schedule",
        "```",
        "",
        "http://server_ip_address:6080/vnc.html",
        "",
        "sudo apt-get install gnome-schedule",
        "----------------",
        "## 手動実行",
        "",
        "### 画面の向きを変更する",
        "https://sicklylife.jp/ubuntu/1804/help/look-resolution.html",
        "",
        "同じ画面で夜間モード設定",
        "",
        "## Audacious",
        "音調の設定",
        "",
        "## chrome  ",
        "and0nagai.r@gmal.comのログイン",
        "",
        "## virtualbox",
        "バックアップから仮想環境を戻す。",
        "",
        "# tewak",
        "ワークスペースをモニタ全部に設定",
        "",
        "----------------",
        "## その他注意事項など",
        "",
        "### 音量",
        "max近くまで音大きくすると聞こえるようになる",
        "",
        "#環境構築 #セットアップ",
        ""
      ]
    },
    {
      "title": "アプリの課金・ユーザーについて",
      "created": 1569587354,
      "updated": 1569587354,
      "id": "5de0f1922d39150017d17c2b",
      "lines": [
        "アプリの課金・ユーザーについて",
        "個人開発",
        "# 個人開発メモ",
        "メモとして使っていく",
        "",
        "",
        "### MVP（Minimum Viable Product）",
        "調べてみる",
        "",
        "---",
        "",
        "### 月額課金",
        "* 課金モデルは、広告 + 月額課金で、100円/月払うと広告が消せる",
        "",
        "### 課金率",
        "* レビュー",
        "  * レビューがないアプリはダウンロードされないので、レビューを促す機能は必須！",
        "* プッシュ通知をすると、起動率が上がるので広告モデルでは激オススメ",
        "  * onesignalを使えば無料で簡単に導入可",
        "  * プッシュ内容は「アプリの機能解説」にしておけば特に嫌がられて離脱という事はないし、むしろユーザー教育にもなって一石二鳥",
        "  * ユーザーの行動を促すのは難しいけど、プッシュ通知は、簡単に行動を促せる神ツールの１つ！",
        "* プッシュ通知で喜ばせる",
        "* 月額課金の成約率を上げる方法",
        "  * ① 詳しい月額課金説明",
        "  * ② 綺麗にデザインされた課金ページ",
        "",
        "### ユーザー数",
        "* 一言で説明できるアプリを",
        "  * ユーザーの離脱の大きな原因の一つはアプリがよくわからないから。分からないとすぐやめる。",
        "* ユーザサポート",
        "  *  ユーザサポートを最優先にする",
        "  * 即レスする",
        "    * もし90分以内に返事が来たら、彼らは間違いなく驚く。彼らの不満げな態度はそれだけで180度変わる。 ",
        "    * もしすぐに回答できないような問い合わせが来ても、とにかく何か返事をする",
        "* 良いランディングページを作る",
        "* ユーザフォーラム運営に時間をかける[https://blog.craftz.dog/how-ive-attracted-the-first-500-paid-users-for-my-saas-that-costs-5-mo-4111ddad9f50]",
        "* ロードマップを公開する",
        "* 課金ユーザを特別扱いする",
        "* 自分の得た知見を惜しまずブログに書く",
        "  * 、ブログは無駄にお金を浪費することなく存在感を高めて集客できる方法です。",
        "",
        "",
        "### アプリ数",
        "* 決済処理はStripeで楽に実装する",
        "* サイズは150MBまで",
        "  * 150MB超えるとWiFiないとダウンロード出来なくなるから、広告にお金掛けれない個人開発では大事なポイント！",
        "* アプリを使った数より、そこから積み上げた、他でも流用できるモジュールの山が何より大事",
        "  * お問い合わせモジュール",
        "  * 課金モジュール",
        "  * 設定画面",
        "  * プッシュ通知",
        "  * 通信モジュール",
        "  * お知らせ機能、",
        "",
        "",
        "### その他",
        "* Phoneの巨大化に合わせて、確定/キャンセル/画面遷移ボタンなどよく使うボタンを画面下部に全部集めて片手で操作ができるようにしています。",
        "* 押せるボタンは全て緑色に統一しています。",
        "* 英語",
        "  * この経験を通して一つ言えることがある。海外向けのサービスを作るためにまず英語を学ぶのではなく、海外向けサービスを作って英語を学ぶのが最短のアプローチ",
        "  * ユーザサポートは必要にかられて必死でやるので、学習効果が高い。",
        "  * 相手の言い回しが印象に残るから忘れづらい。",
        "  * 過去の自分の返信を改めて見返すと間違った表現が沢山見つけられる。",
        "  * その失敗は座学のテストで間違うよりも強く失敗体験として残る。だから効率がいい。",
        "",
        "[React Native製アプリのクオリティを上げるために工夫した事](https://blog.craftz.dog/lessons-learned-from-creating-my-mobile-app-to-build-a-high-quality-react-native-app-dcf021ce37ef)",
        "",
        "# 【無料】iPhoneアプリの宣伝・予約ができるサイトまとめ！送付先も掲載！",
        "[【無料】iPhoneアプリの宣伝・予約ができるサイトまとめ！送付先も掲載！ \\| イリテク](https://iritec.jp/review/1510/)",
        "]",
        "",
        "# 予約トップ10",
        "",
        "# メモ",
        "* 自分のメディアをもつ",
        "* プレスリリースを送る",
        "* ブロガーさんにメールを送る",
        "* 個人ブロガー",
        "* 予約トップ10  ",
        ""
      ]
    },
    {
      "title": "本棚アプリ",
      "created": 1569586959,
      "updated": 1569586959,
      "id": "5de0f1922d39150017d17c2c",
      "lines": [
        "本棚アプリ",
        "バーコード読み込み、自分で本棚を模した枠を作れる、枠にバーコードで読み混んだ本を放り込む",
        ""
      ]
    },
    {
      "title": "音声認識でただテキストを表示するだけのアプリ",
      "created": 1569586917,
      "updated": 1569586933,
      "id": "5de0f1922d39150017d17c2d",
      "lines": [
        "音声認識でただテキストを表示するだけのアプリ",
        "テキストは対話を想定して反対側に表示される",
        ""
      ]
    },
    {
      "title": "テキスト手話変換アプリ",
      "created": 1569586928,
      "updated": 1569586928,
      "id": "5de0f1922d39150017d17c2e",
      "lines": [
        "テキスト手話変換アプリ",
        "テキストは対話を想定して反対側に表示される",
        ""
      ]
    },
    {
      "title": "バーコードリーダーを使ったアプリ開発 中古図書斡旋など",
      "created": 1569586889,
      "updated": 1569586896,
      "id": "5de0f1922d39150017d17c2f",
      "lines": [
        "バーコードリーダーを使ったアプリ開発 中古図書斡旋など"
      ]
    },
    {
      "title": "マテリアルアイコンを検索するサイト",
      "created": 1569586874,
      "updated": 1592099728,
      "id": "5de0f1922d39150017d17c30",
      "lines": [
        "マテリアルアイコンを検索するサイト",
        "from [アプリアイデア]",
        "",
        "検索欄から検索すると候補が表示される。候補がない場合マテリアルアイコンの一覧を表示する。表示の中からアイコンを選ぶと次からそのアイコンに検索名が付与される。",
        "",
        "",
        "-> [Let's search for Icon] としてアプリを作成済み",
        ""
      ]
    },
    {
      "title": "自分用バックアップ設計書",
      "created": 1569586410,
      "updated": 1569586410,
      "id": "5de0f1922d39150017d17c31",
      "lines": [
        "自分用バックアップ設計書",
        "自分用バックアップ設計書",
        "# 概要",
        "個人データのバックアップを取る  ",
        "差分方式で取得する。",
        "",
        "## 全体像",
        "名前|設定",
        ":-|:-|",
        "入力|`/my`と`/media/ando/HDS2-UTX/others`フォルダ",
        "出力|外付けHDD2台`backup`フォルダ",
        "トリガー|スタートアップ時",
        "ルートフォルダ|`/my/app/mybackup`",
        "",
        "## フォルダ構造",
        "### プロジェクトフォルダ",
        "### 入力元フォルダ",
        "* `/my/`",
        "* `/media/ando/HDS2-UTX/others/`",
        "",
        "### バックアップフォルダ",
        "* `backup/fullbackup`",
        "* `backup/yyyymm`",
        "* `backup/yyyymm/dd`",
        "",
        "#### エラー設計",
        "* エラーがあった場合、その場で終了",
        "* 翌日に再度実行される",
        "",
        "",
        "### ログ出力",
        "#### csv",
        "日付|開始|終了|方式|成否判定|実行後サイズ_GB|フォルダ名|備考",
        ":-|:-|:-|:-|:-|:-|:-|:-|",
        "20190324|0900|0921|フルバックアップ|成功|100|`FULLBACKUP`||",
        "20190325|0903|0926|差分バックアップ|成功|101|`O3/25`||",
        "",
        "### 削除方針",
        "手動",
        "",
        "#### ログ",
        "",
        "## 詳細設計",
        "* スタートアップスクリプトから起動",
        "* 今日の年、月、日を取得",
        "* 月フォルダをなければ作成",
        "* 日フォルダをなければ作成",
        "* 今月のフルアップバックは完了しているか？",
        "* 今月中でまだフルバックアップを取得していなければ取得",
        "* フルバックアップを取得していた場合差分バックアップ",
        "* ログ出力",
        "",
        "## db設計",
        "* ステータステーブル",
        "* 今やっているのがフルバックアップか差分バックアップか",
        "* 時間",
        "* バックアップ元ルートフォルダ",
        "* 成否",
        "* 備考",
        "  * 失敗時のエラーメッセージ",
        "",
        "## クラス設計",
        "~~最低限のrsyncするだけにする。~~",
        "全部組み込む",
        "* クラス名",
        "  * MyBackup",
        "* メソッド",
        "  * full",
        "  * diff",
        "  * auto",
        "",
        "",
        "`ctrl + shift + M　`",
        "",
        "## フォルダのバックアップ設計",
        "フォルダ名|配置|クラウド",
        "|:-|:-|:-|",
        "|app|mac|github",
        "|docs|mac|ithub",
        "|music|windows|google",
        "|pics|windows|mazon",
        "|temp|両方-",
        "|others|windows|-",
        "|inv_data|新と旧のパーティション",
        "",
        "### 基本方針",
        "* macのバックアップに新hdd",
        "* windowsのバックアップに旧hdd",
        "* パーティションを2つに区切ってosのバックアップ以外も入るようにする",
        "",
        "### どうするか？",
        "* macとwindowsにデータを退避させる。appとdocsはmac それ以外はwindows",
        "* 新旧フォーマットする。",
        "* パーティションを2つに区切る",
        "* 新は500GBとそれ以外でtimemachine用",
        "* 旧は500GBとそれ以外でwindowsbckup用",
        "* 500にはとりあえずinvdataをつっこんでおいて、これに関しては後日検討",
        "* ",
        "",
        "",
        "## rsync",
        "### 完全バックアップ",
        "* original_dirからbackup_dirへ完全バックアップ",
        "```",
        "rsync -av --delete /my/ /media/ando/旧外付けHDD/backup/fullbackup/my/",
        "rsync -av --delete /my/ /media/ando/HDS2-UTX/backup/fullbackup/my/",
        "rsync -av --delete /media/ando/HDS2-UTX/others/ /media/ando/HDS2-UTX/backup/fullbackup/others/",
        "rsync -av --delete /media/ando/HDS2-UTX/others/ /media/ando/旧外付けHDD/backup/fullbackup/others/",
        "```",
        "### 差分バックアップ",
        "* 翌日以降、backup_dirから変更のあったフォルダはdiff_dirへ差分バックアップ   ",
        "バックアップはハードコピー",
        "```",
        "# 新HDD MY",
        "original_dir=/my/",
        "backup_dir=/media/ando/HDS2-UTX/backup/fullbackup/my/",
        "diff_dir=/media/ando/HDS2-UTX/backup/`date +%d`/my/",
        "sudo rsync -av --delete --link-dest=${backup_dir} ${original_dir} ${diff_dir}",
        "",
        "# 旧HDD MY",
        "original_dir=/my/",
        "backup_dir=/media/ando/旧外付けHDD/backup/fullbackup/my/",
        "diff_dir=/media/ando/旧外付けHDD/backup/`date +%d`/my/",
        "sudo rsync -av --delete --link-dest=${backup_dir} ${original_dir} ${diff_dir}",
        "",
        "# 新HDD OTHERS",
        "original_dir=/media/ando/HDS2-UTX/others/",
        "backup_dir=/media/ando/HDS2-UTX/backup/fullbackup/others/",
        "diff_dir=/media/ando/HDS2-UTX/backup/`date +%d`/others/",
        "sudo rsync -av --delete --link-dest=${backup_dir} ${original_dir} ${diff_dir}",
        "",
        "# 旧HDD OTHERS",
        "original_dir=/media/ando/HDS2-UTX/others/",
        "backup_dir=/media/ando/旧外付けHDD/backup/fullbackup/others/",
        "diff_dir=/media/ando/旧外付けHDD/backup/`date +%d`/others/",
        "sudo rsync -av --delete --link-dest=${backup_dir} ${original_dir} ${diff_dir}",
        "",
        "",
        "```",
        "",
        "",
        "## bashメモ",
        "変数",
        "```",
        "var=\"aiueo\"",
        "echo $var",
        "```",
        "日付",
        "```",
        "echo $(date +%Y-%m-%d)",
        "2019-03-17",
        "```",
        "",
        "## バックアップメモ",
        "差分バックアップ",
        "```",
        "rsync -a --delete --link-dest=/path/link_dest/ /path/src/ /path/dest/",
        "```",
        "",
        "## 差分バックアップ",
        "1. original_dirからbackup_dirへ完全バックアップ",
        "1. 翌日以降、backup_dirから変更のあったフォルダはdiff_dirへ差分バックアップ  ",
        "バックアップはハードコピー",
        "```",
        "original_dir=/my/",
        "backup_dir=/media/ando/HDS2-UTX/backup/original/",
        "diff_dir=/media/ando/HDS2-UTX/backup/`date +%Y%m%d`/",
        "",
        "sudo rsync -av --delete --link-dest=${backup_dir} ${original_dir} ${diff_dir}",
        "```",
        "",
        "my others",
        ""
      ]
    },
    {
      "title": "自分用家計簿",
      "created": 1569586305,
      "updated": 1569586305,
      "id": "5de0f1922d39150017d17c32",
      "lines": [
        "自分用家計簿",
        "自分用家計簿",
        "# 自分用家計簿",
        "",
        "## 概要",
        "* 家計簿アプリをつくる",
        "* 家計簿の見える化をする",
        "",
        "## 要件",
        "* 取得元",
        "  * マネーフォワード",
        "  * amazon",
        "  * 手動入力",
        "* DB",
        "  * sqlite",
        "* スクレイピングする？",
        "* 可視化の練習",
        "* フロントエンド",
        "* フロントエンドはあえて作らずにgasでやる？",
        "",
        "## やりたいこと",
        "* 支出の可視化",
        "  * ガス",
        "  * 電気",
        "  * 食費",
        "  * 日用品",
        "  * 全部",
        "* 時系列にする。",
        "",
        "## メモ",
        "* データを取り込むところと見せるところは分けて考える。",
        "* 大事なのは家計簿を可視化すること。",
        "* 技術ありきではつくらない。",
        "",
        "## データ取得元",
        "* アマゾンカード",
        "* 会社でつくったカード",
        "* オリコ",
        "* アマゾン",
        "* viewカード",
        "",
        "## 作り方",
        "1. 毎月手動でcsvファイルを拾ってくる",
        "  * mazonn",
        "  * amazonカード",
        "  * 会社カード",
        "  * オリコカード",
        "  * viewカード",
        "2. プログラムを動かす",
        "3. 以上",
        "",
        "名前|取得サイト|ファイル名|取得の仕方|備考",
        ""
      ]
    },
    {
      "title": "自分用時間管理",
      "created": 1569586285,
      "updated": 1569586285,
      "id": "5de0f1922d39150017d17c34",
      "lines": [
        "自分用時間管理",
        "# コンセプト",
        "* 30分単位で時間管理する。",
        "* 睡眠時間と質を推測して質の高い睡眠をする。",
        "* 日々の生活の質を上げて開発効率を上げる。",
        "",
        "# したいこと",
        "* 音声登録",
        "* 睡眠をapi",
        "* flutter で作る？",
        "",
        " # 行動記録アプリ",
        " ## 概要",
        " * スタート、ストップを押して時間を測る。",
        " * もしくはカウントにして回数を測る。",
        "",
        "マイレコーダ　やりたいこと　生活の記録を取りたい",
        ""
      ]
    },
    {
      "title": "fitbit",
      "created": 1569585459,
      "updated": 1569585462,
      "id": "5de0f1922d39150017d17c38",
      "lines": [
        "fitbit",
        " 参考",
        "  [FitbitのAPIを手っ取り早く試してみる方法 https://qiita.com/makopo/items/32f41128c2e055cec68f]",
        "  [FitbitのOAuth 2.0 APIをPostmanで試してみる方法 https://qiita.com/makopo/items/7f5a47a7c58929b6fb93]",
        "",
        "",
        "　[https://dev.fitbit.com/] にアクセス",
        "　manage -> registerapp で[https://dev.fitbit.com/login]に飛ぶ",
        "[https://gyazo.com/a48adcfd4434406e589e230131cfe85d]",
        " 以下のように入力した。",
        " [https://gyazo.com/e20f3a09f7cf491c155043bb454daad8]",
        "　成功すると次の画面になる",
        "　[https://gyazo.com/5a4f12eefdec3dfab8afad3ae61ec7f5]",
        "22DMVZ",
        "b7c952e0219c8152c15ecb89721668fe",
        "http://localhost/",
        "https://www.fitbit.com/oauth2/authorize",
        "https://www.fitbit.com/oauth2/token",
        "　[OAuth 2.0 tutorial page https://dev.fitbit.com/apps/oauthinteractivetutorial]にアクセス",
        "",
        " [このサイトにアクセスできません。 http://localhost/#access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMkRNVloiLCJzdWIiOiI3Sk5SWjYiLCJpc3MiOiJGaXRiaXQiLCJ0eXAiOiJhY2Nlc3NfdG9rZW4iLCJzY29wZXMiOiJyc29jIHJzZXQgcmFjdCBybG9jIHJ3ZWkgcmhyIHJwcm8gcm51dCByc2xlIiwiZXhwIjoxNTYyNjY4MjMzLCJpYXQiOjE1NjIwNjM0MzN9.-dGokYtst32cP_gK41TG3ewGywwG-a5Q-AsFzKnm5yk&user_id=7JNRZ6&scope=settings+sleep+activity+social+profile+location+nutrition+weight+heartrate&token_type=Bearer&expires_in=604800]",
        "",
        "code:bash",
        " ",
        " curl\t-i ",
        " -H \"Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMkRNVloiLCJzdWIiOiI3Sk5SWjYiLCJpc3MiOiJGaXRiaXQiLCJ0eXAiOiJhY2Nlc3NfdG9rZW4iLCJzY29wZXMiOiJyc29jIHJzZXQgcmFjdCBybG9jIHJ3ZWkgcmhyIHJwcm8gcm51dCByc2xlIiwiZXhwIjoxNTYyNjY4MjMzLCJpYXQiOjE1NjIwNjM0MzN9.-dGokYtst32cP_gK41TG3ewGywwG-a5Q-AsFzKnm5yk\"",
        " https://api.fitbit.com/1/user/-/profile.json",
        ""
      ]
    },
    {
      "title": "docker チートシート",
      "created": 1569582717,
      "updated": 1569582727,
      "id": "5de0f1922d39150017d17c39",
      "lines": [
        "docker チートシート",
        "`ctrl + shift + M　`",
        "# docker チートシート",
        "",
        "## コマンド",
        "```",
        "docker images",
        "docker ps",
        "docker ps -a",
        "",
        "docker stop",
        "docker rm",
        "```",
        "",
        "## 例",
        "```",
        "docker pull python",
        "docker run -it --name pytest python:latest /bin/bash",
        "```",
        "",
        "## mysql",
        "```",
        "docker pull mysql",
        "",
        "docker run -p 3306:3306 -v /inv/docker/mysql_data:/var/lib/mysql --env  MYSQL_ROOT_PASSWORD=inv-mysql --name inv-mysql -d mysql:latest --character-set-server=utf8 --collation-server=utf8_unicode_ci",
        "",
        "",
        "",
        "docker container stop mysql",
        "```",
        "## オプション",
        "",
        "オプション名|意味",
        ":-:|:-:",
        "--rm  |コンテナー終了時に利用したデータを削除する",
        "-d    |バックプロセスとして起動する",
        "-e    |コンテナーに環境変数(MYSQL_ROOT_PASSWORD)を与える",
        "-p    |ホストのポートにコンテナーのポートを割り当てる",
        "--name|実行するコンテナーにmysqlという名前をつける",
        "-v    | host:containerでコンテナフォルダとホストフォルダを同期",
        "",
        "```",
        "CREATE SCHEMA testdb;",
        "commit;",
        "CREATE TABLE testdb.testtbl ( column_1 int );",
        "commit;",
        "INSERT INTO testdb.testtbl (column_1) VALUES (1234);",
        "INSERT INTO testdb.testtbl (column_1) VALUES (12347);",
        "INSERT INTO testdb.testtbl (column_1) VALUES (12354);",
        "INSERT INTO testdb.testtbl (column_1) VALUES (12348);",
        "commit;",
        "select * from testdb.testtbl;",
        "show variables like \"chara%\";",
        "```",
        "$ docker run -d --name blog -e MYSQL_ROOT_PASSWORD=password -p 3306:3306 mysql",
        "7851f576e101a87791154a3f71120c132fa3a1e06ec608575614e17a318a3644",
        ""
      ]
    },
    {
      "title": "laradock",
      "created": 1569582658,
      "updated": 1569582658,
      "id": "5de0f1922d39150017d17c3a",
      "lines": [
        "laradock",
        "# laradock設定",
        "複数プロジェクト設定する",
        "",
        "## laradockのクローン",
        "```",
        "cd /inv/web",
        "git clone https://github.com/Laradock/laradock.git",
        "```",
        "",
        "## envファイルコピー",
        "envファイルをenv-exampleから作成する",
        "```",
        "cd laradock",
        "cp env-example .env",
        "```",
        "",
        "## envファイルを修正",
        "```",
        "### Paths #################################################",
        "# DATA_PATH_HOST=~/.laradock/data",
        "DATA_PATH_HOST=/inv/data/.laradock_sample_mysql/data",
        "",
        "### NGINX #################################################",
        "# NGINX_HOST_HTTP_PORT=80",
        "NGINX_HOST_HTTP_PORT=81",
        "",
        "### MYSQL #################################################",
        "# MYSQL_VERSION=latest",
        "MYSQL_VERSION=5.7",
        "# MYSQL_DATABASE=default",
        "MYSQL_DATABASE=web-db",
        "# MYSQL_USER=default",
        "MYSQL_USER=web-master",
        "# MYSQL_PASSWORD=secret",
        "MYSQL_PASSWORD=fiselrk43fe",
        "# MYSQL_PORT=3306",
        "MYSQL_PORT=13309",
        "# MYSQL_ROOT_PASSWORD=root",
        "MYSQL_ROOT_PASSWORD=fjadsiswf2fer3",
        "```",
        "",
        "## env以外のDB周りの設定",
        "",
        "## 初回実行",
        "docker-compose up -d nginx mysql",
        "",
        "## DB作成",
        "",
        "## プロジェクト作成",
        "docker-compose exec workspace bash",
        "composer create-project --prefer-dist laravel/laravel inv-web",
        "sudo chmod -R 777 ./",
        "",
        "",
        "## nginxの設定",
        ""
      ]
    },
    {
      "title": "heroku",
      "created": 1569582607,
      "updated": 1569582607,
      "id": "5de0f1922d39150017d17c3b",
      "lines": [
        "heroku",
        "# heroku",
        "[heroku](https://www.heroku.com/home)関連のメモ",
        "",
        "",
        "",
        "## Heroku CLIをインストール",
        "ubuntu18の場合  ",
        "[url](https://devcenter.heroku.com/articles/heroku-cli#getting-started)",
        "```",
        "sudo snap install --classic heroku",
        "```",
        "",
        "## heroku画面からアプリの登録",
        "apps -> new -> Create new app -> App name 入力 -> create app  ",
        "次の画面でHerokuのDeplo方法が記載されている。",
        "",
        "## git",
        "```",
        "# メールアドレスとパスワードが求められる。",
        "heroku login",
        "",
        "# laradockフォルダは含まずに、PJフォルダのみを登録",
        "cd my-project/",
        "git init",
        "git add .",
        "git commit -am \"make it better\"",
        "git push heroku master",
        "```",
        "",
        "## Heroku Procfileの作成",
        "Heroku上でサーバーを立ち上げるために必要なファイル  ",
        "アプリフォルダ直下にProcfileファイルを作り以下を記述",
        "```",
        "web: vendor/bin/heroku-php-apache2 public/",
        "```",
        "",
        "## アプリケーションキーの設定",
        "settings -> Config Vars -> Reveal Congig Varsに",
        ".envのアプリケーションキーを記載",
        "",
        "## open app",
        "コンソールから 'heroku open' もしくは画面からOpen app",
        "",
        "-----------------------------------",
        "",
        "## その他",
        "```",
        "composer require ext-intl:*",
        "```",
        "HTTPSを強制する",
        "",
        "",
        "## memo",
        "名前|値",
        ":---|:---|",
        "pjname|invinvinv",
        "password|jio!s146Hs",
        "",
        "`heroku update`  ",
        "`which heroku`",
        ""
      ]
    },
    {
      "title": "material design",
      "created": 1564554412,
      "updated": 1568871376,
      "id": "5de0f1922d39150017d17c3c",
      "lines": [
        "material design",
        "[* リンク]",
        "[ガイドライン日本語版　https://services.google.com/fh/files/newsletters/googleplay_materialdesign_jp.pdf]",
        "[Material Design palettes https://material.io/resources/color]",
        "[公式　https://material.io]",
        "",
        "[* キーライン]",
        ">読みやすさと視覚的な一貫性を持たせるため、UI 要素の配置とサイズ設定には 8 dp",
        "> のベースライン グリッドを使用する必要があります。テキストをより正確に配置す",
        "> る場合は、4 dp のグリッドを使用できます。",
        "ベースライン グリッド は縦のラインのこと。",
        "8dpで運用するのがよいとのこと。",
        "",
        "[* color]",
        "　背景色はgrayの50〜300ぐらいの間で選ぶと良い",
        " カラーは[Material Design palettes https://material.io/resources/color]から選ぶ",
        "　システムステータスバー（一番上のバー）はMaterial Design palettesの +200がよい？",
        "　マテリアルカラーからprimary color もしくは primary color + secondary color を選ぶ",
        "　　色合い、濃さは何でもよい",
        "　 [https://material.io/design/color/applying-color-to-ui.html#typography-iconography]",
        " secondary color を使用する場面は以下の通り",
        " 　Floating action buttons",
        "  Selection controls, like sliders and switches",
        "  Highlighting selected text",
        "  Progress bars",
        "  Links and headlines",
        "",
        "",
        "灰色\t上品、スタイリッシュ、無機質、設定画面、Softbank、VSCO",
        "赤\tパワフル、ショッピング、アジア圏、お買い得、YouTube、Pinterest、Rakuten、GMail",
        "青\tクール、IT系、仕事効率化、欧米、Facebook、Twitter、Google Calendar、ワード",
        "緑\t調和、コミュニケーション、地方、初心者、生活、案内、Hulu、LINE、Udemy、Google Map、スプレッドシート",
        "黄色\t元気、警告、SnapChat、Kakao、LINE漫画、lynda、Outlook",
        "オレンジ\t健康、食事、クックパッド、生活、Retty、mixi、マネーフォワード、パワポ",
        "ピンク\t美容、可愛さ、恋愛、女性、MERY、家計簿、Hotpepper Beauty",
        "紫\t高貴、上級者、ミステリー、占い、Hotpepper Beauty",
        "茶\t自然、安心、ふるさと、知恵、カフェ、Instagram",
        "",
        "[* Text ] ",
        "https://material.io/design/color/text-legibility.html#text-types",
        " Material Designの推奨",
        " フォントは欧文はRoboto、和文はNoto Sans",
        " backgroundがffffffの場合のテキストの色を000000とした場合の透明度(opacity)は以下の通り",
        "table:text",
        " High-emphasis text\t87%",
        " Medium-emphasis text\t60%",
        "  hint text \t60%",
        "  Disabled text\t38%",
        "  error text\t100%",
        "",
        "[* icon]",
        "table:text",
        " Active icons\t87%",
        " Inactive icons\t60%",
        " Disabled icons\t38%",
        "",
        "[* type]",
        "https://material.io/design/typography/the-type-system.html#applying-the-type-scale",
        "[https://gyazo.com/57f4628719100f26de49c6b1ed5a92c4]",
        "",
        " ヘッダー",
        " \tタイトルはmedium 20",
        " \tfigmaにはtitleで設定済み",
        "\t [https://gyazo.com/9471536c918e5ffcffb9ce52e07932f7]",
        "",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "storeのサンプル",
      "created": 1564554262,
      "updated": 1564554262,
      "id": "5de0f1922d39150017d17c3e",
      "lines": [
        "storeのサンプル",
        "code:js",
        " export const state = () => ({",
        " })",
        " ",
        " export const getters = {",
        " }",
        " ",
        " export const mutations = {",
        " }",
        " ",
        " export const actions = {",
        " }",
        " ",
        "#nuxt",
        ""
      ]
    },
    {
      "title": "lint fix",
      "created": 1564554225,
      "updated": 1564554225,
      "id": "5de0f1922d39150017d17c3f",
      "lines": [
        "lint fix",
        "",
        "package.jsonの\"lint\"の行をコピーして --fixを追記",
        "",
        "修正前",
        "code:json",
        "     \"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\",",
        "",
        "修正後",
        "code:json",
        "     \"lint\": \"eslint --ext .js,.vue --ignore-path .gitignore .\",",
        "     \"lintfix\": \"eslint --fix --ext .js,.vue --ignore-path .gitignore .\",",
        "",
        "yarn lintfix で実行",
        "#nuxt"
      ]
    },
    {
      "title": "nuxt プロジェクト作成",
      "created": 1564554183,
      "updated": 1564554183,
      "id": "5de0f1922d39150017d17c40",
      "lines": [
        "nuxt プロジェクト作成",
        "",
        "code:bash",
        " yarn create nuxt-app ampersand-dashboard",
        "",
        "以下を選択",
        "yarn  ではなくnpmを選ぶ",
        "yarnはなぜかfirebase が入らない",
        "",
        "code:bash",
        " ✨  Generating Nuxt.js project in /my/app/vue_practice/ampersand-dashboard",
        " ? Project name ampersand-dashboard",
        " ? Project description My outstanding Nuxt.js project",
        " ? Author name ampersand",
        " ? Choose the package manager Npm",
        " ? Choose UI framework Vuetify.js",
        " ? Choose custom server framework None (Recommended)",
        " ? Choose Nuxt.js modules (Press <space> to select, <a> to toggle all, <i> to inv",
        " ert selection)Axios",
        " ? Choose linting tools (Press <space> to select, <a> to toggle all, <i> to inver",
        " t selection)ESLint",
        " ? Choose test framework None",
        " ? Choose rendering mode Universal (SSR)",
        "",
        "#nuxt",
        ""
      ]
    },
    {
      "title": "no-console解除",
      "created": 1564554014,
      "updated": 1564554018,
      "id": "5de0f1922d39150017d17c41",
      "lines": [
        "no-console解除",
        "",
        ".eslintrc.jsに追記",
        "code:js",
        "    rules: {",
        "     \"no-console\": \"off\",",
        "   }",
        "",
        "",
        ""
      ]
    },
    {
      "title": "firebase ver nuxt 2",
      "created": 1564553965,
      "updated": 1564553969,
      "id": "5de0f1922d39150017d17c42",
      "lines": [
        "firebase ver nuxt 2",
        "",
        "firebase その２",
        "以下が参考になる。",
        "`https://github.com/minetti0327/nuxt-vuexfire-firebase-sample`",
        "",
        "",
        "code:store/index.js",
        " import { vuexfireMutations } from 'vuexfire'",
        " ",
        " export const mutations = {",
        "   ...vuexfireMutations",
        " }",
        "",
        "code:store/todo.js",
        " import { firestoreAction } from 'vuexfire'",
        " import db from '~/plugins/firebase'",
        " const todos = db.collection('todos')",
        " ",
        " export const state = () => ({",
        "   todos: []",
        " })",
        " ",
        " export const getters = {",
        "   todos: (state) => {",
        "     return state.todos",
        "   }",
        " }",
        " ",
        " export const actions = {",
        "   setTodoRef: firestoreAction(({ bindFirestoreRef }) => {",
        "     bindFirestoreRef('todos', todos)",
        "       .then(() => {",
        "         // commit('setTodosLoaded', true)",
        "       })",
        "       .catch((err) => {",
        "         console.log(err)",
        "       })",
        "   })",
        " }",
        " ",
        " /*",
        "   // 指定したuserIDを引っ張ってくる",
        "   // https://volpe.hatenablog.com/entry/2019/04/01/094815",
        "   initStore: firestoreAction(({ bindFirestoreRef }, payload) => {",
        "     bindFirestoreRef('projects', projects.where('userId', '==', payload.userId))",
        "   })",
        " }",
        "  */",
        " ",
        "",
        "code:pages/todo/index.js",
        " <template>",
        "   <div>",
        "     <div>",
        "       <ul v-for=\"(todo, index) in todos\" :key=\"index\">",
        "         <li>title: {{ todo.title }}</li>",
        "       </ul>",
        "     </div>",
        "     <div class=\"form\">",
        "       <div>",
        "         add todo:",
        "         <input v-model=\"title\" type=\"text\" name=\"title\">",
        "       </div>",
        "       <div>",
        "         <button @click=\"submit\">",
        "           Submit",
        "         </button>",
        "       </div>",
        "     </div>",
        "   </div>",
        " </template>",
        " ",
        " <script>",
        " import { mapGetters } from 'vuex'",
        " import db from '~/plugins/firebase'",
        " export default {",
        "   data: () => {",
        "     return {",
        "       title: ''",
        "     }",
        "   },",
        "   computed: {",
        "     ...mapGetters({ todos: 'todo/todos' })",
        "   },",
        "   created: function () {",
        "     this.$store.dispatch('todo/setTodoRef')",
        "   },",
        "   methods: {",
        "     async submit() {",
        "       const todo = {",
        "         title: this.title",
        "       }",
        "       const ref = db.collection('todos')",
        "       await ref.add(todo)",
        "       this.title = ''",
        "     }",
        "   }",
        " }",
        " </script>",
        " ",
        "#nuxt",
        "#firebase_flutter設定",
        ""
      ]
    },
    {
      "title": "firebase ver nuxt 1",
      "created": 1564553901,
      "updated": 1564553929,
      "id": "5de0f1932d39150017d17c43",
      "lines": [
        "firebase ver nuxt 1",
        "firebase その１",
        "https://github.com/vuejs/vuefire/tree/master/packages/vuexfire",
        "",
        "※ 本当はfirebaseの情報はdirenvなどに記載したほうが良い",
        "",
        "以下をインポート",
        "code:bash",
        " npm install firebase vuexfire",
        "",
        "/pacages/firebase.jsを作成",
        "",
        "以下を入力",
        "中身はその時ごとのfirebaseの情報で",
        "code:js",
        " import firebase from 'firebase/app'",
        " import 'firebase/firestore'",
        " ",
        " if (!firebase.apps.length) {",
        "   firebase.initializeApp(",
        "     {",
        "       apiKey: 'AIzaSyA3paGCAbNLuhZO3oBKfnGXc8mAGpwppG8',",
        "       authDomain: 'nuxt-todo-8ecc9.firebaseapp.com',",
        "       databaseURL: 'https://nuxt-todo-8ecc9.firebaseio.com',",
        "       projectId: 'nuxt-todo-8ecc9',",
        "       storageBucket: '',",
        "       messagingSenderId: '514250798316',",
        "       appId: '1:514250798316:web:7e3d208766dc119c'",
        " ",
        "     }",
        "   )",
        " }",
        " const db = firebase.firestore()",
        " export default db",
        " ",
        "",
        "code:js",
        " plugins: [",
        "   '@/plugins/firebase.js'",
        " ]",
        "#nuxt",
        "#firebase_flutter設定",
        ""
      ]
    },
    {
      "title": "moment",
      "created": 1564553863,
      "updated": 1564553865,
      "id": "5de0f1932d39150017d17c44",
      "lines": [
        "moment",
        "https://qiita.com/dasisyouyu/items/a52359949a78247cc1c2",
        "https://github.com/nuxt-community/moment-module",
        ""
      ]
    },
    {
      "title": "fontawesome5",
      "created": 1564553795,
      "updated": 1564553800,
      "id": "5de0f1932d39150017d17c45",
      "lines": [
        "fontawesome5",
        "fontawesome5",
        "https://qiita.com/OvThAlmin/items/154e53952bc46d91d44c",
        "",
        "code:js",
        " import colors from 'vuetify/es5/util/colors'",
        " ",
        " export default {",
        "   mode: 'universal',",
        "   /*",
        "   ** Headers of the page",
        "   */",
        "   head: {",
        "     titleTemplate: '%s - ' + process.env.npm_package_name,",
        "     title: process.env.npm_package_name || '',",
        "     meta: [",
        "       { charset: 'utf-8' },",
        "       { name: 'viewport', content: 'width=device-width, initial-scale=1' },",
        "       { hid: 'description', name: 'description', content: process.env.npm_package_description || '' }",
        "     ],",
        "     link: [",
        "       { rel: 'icon', type: 'image/x-icon', href: '/favicon.ico' },",
        "       {",
        "         rel: 'stylesheet',",
        "         href:",
        "           'https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons'",
        "       }",
        "     ]",
        "   },",
        "   /*",
        "   ** Customize the progress-bar color",
        "   */",
        "   loading: { color: '#fff' },",
        "   /*",
        "   ** Global CSS",
        "   */",
        "   css: [",
        "   ],",
        "   /*",
        "   ** Plugins to load before mounting the App",
        "   */",
        "   plugins: [",
        "   ],",
        "   /*",
        "   ** Nuxt.js modules",
        "   */",
        "   modules: [",
        "     '@nuxtjs/vuetify',",
        "     // Doc: https://axios.nuxtjs.org/usage",
        "     '@nuxtjs/axios',",
        "     '@nuxtjs/eslint-module',",
        "     'nuxt-fontawesome'",
        "   ],",
        "   /*",
        "   ** Axios module configuration",
        "   ** See https://axios.nuxtjs.org/options",
        "   */",
        "   axios: {",
        "   },",
        "   /*",
        "   ** vuetify module configuration",
        "   ** https://github.com/nuxt-community/vuetify-module",
        "   */",
        "   vuetify: {",
        "     theme: {",
        "       primary: colors.blue.darken2,",
        "       accent: colors.grey.darken3,",
        "       secondary: colors.amber.darken3,",
        "       info: colors.teal.lighten1,",
        "       warning: colors.amber.base,",
        "       error: colors.deepOrange.accent4,",
        "       success: colors.green.accent3",
        "     }",
        "   },",
        "   /*",
        "   ** Build configuration",
        "   */",
        "   build: {",
        "     /*",
        "     ** You can extend webpack config here",
        "     */",
        "     extend(config, ctx) {",
        "     }",
        "   },",
        "   fontawesome: {",
        "     imports: [",
        "       {",
        "         set: '@fortawesome/free-solid-svg-icons',",
        "         icons: ['fas']",
        "       }",
        "     ]",
        "   }",
        " }",
        " ",
        "",
        " code:html",
        "            <v-list-tile-action>",
        "              <font-awesome-icon icon=\"dollar-sign\" />",
        "            </v-list-tile-action>",
        ""
      ]
    },
    {
      "title": "画面のresize",
      "created": 1564553752,
      "updated": 1564553752,
      "id": "5de0f1932d39150017d17c46",
      "lines": [
        "画面のresize",
        "code: javascript",
        "     // resize処理",
        "     mounted: function () {",
        "       window.addEventListener('resize', this.handleResize)",
        "     },",
        "     // resize処理",
        "     beforeDestroy: function () {",
        "       window.removeEventListener('resize', this.handleResize)",
        "     },",
        "     // resize処理",
        "     methods: {",
        "       handleResize: function () {",
        "         // resizeのたびにこいつが発火するので、ここでやりたいことをやる",
        "         this.$store.dispatch('layouts/isResponsive')",
        "       }",
        "     }",
        ""
      ]
    },
    {
      "title": "grid",
      "created": 1564553721,
      "updated": 1564553721,
      "id": "5de0f1932d39150017d17c47",
      "lines": [
        "grid",
        "grid",
        " 参考",
        " 　[Vuetifyチュートリアル。CSSを書かないマテリアルデザイン https://windii.jp/frontend/nuxt/vuetify-tutorial]",
        " 　[Vuetifyの使い方(UIフレームワークで手軽に構築) https://www.wakuwakubank.com/posts/668-vuejs-vuetify/]",
        " 　[Note to siteru-vuetify https://tositeru.github.io/Notebook/js/vuetify.html]",
        " 　[Vuetifyでよくあるダッシュボードっぽいレイアウト https://gist.github.com/ainehanta/11c2fb30097bd3ca45c034299478afe6]",
        " v-container",
        "  v-container: ページ中央にセンタリングする。 fluidプロパティを渡すと横幅をフルに展開する。",
        " v-layout",
        " 　divで囲んでdisplay:flex;と書くのと同じ意味",
        " 　[https://gyazo.com/0aa98a1109557a2c6fe550374e84692e]",
        "",
        " v-flex",
        "  12ポイント",
        "  sm6 としたらsmサイズ以上の場合は6/12で表示 xsは100%表示",
        "  xs6ならxsサイズ以上が6/12なのですべてのサイズで6/12になる",
        "  xs6 md12 の場合、xs以上は6/12 、mdだけ12/12で表示",
        "  code: js",
        "       <v-flex sm6>",
        "         <v-card>",
        "           <v-card-title>",
        "             新規会員登録フォーム(3分で完了)",
        "           </v-card-title>",
        "         </v-card>",
        "       </v-flex>",
        "",
        " breakpoint",
        "  [https://gyazo.com/2caa082f55e1f224b64136289a6c41fb]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "vuetify responsive navigation",
      "created": 1564553647,
      "updated": 1564553647,
      "id": "5de0f1932d39150017d17c48",
      "lines": [
        "vuetify responsive navigation",
        "vuetify responsive navigation",
        "code:store/layouts.js",
        " export const state = () => ({",
        "   drawer: true,",
        "   responsive: false,",
        "   mobileBreakPoint: '960',",
        "   color: 'success',",
        "   drawerWidth: 260",
        " })",
        " ",
        " export const getters = {",
        "   drawer: (state) => { return state.drawer },",
        "   responsive: (state) => { return state.responsive }",
        " }",
        " ",
        " export const mutations = {",
        "   setResponsive: (state, bool) => { state.responsive = bool },",
        "   setDrawer: (state, bool) => { state.drawer = bool },",
        "   toggleDrawer: (state) => { state.drawer = !state.drawer }",
        " }",
        " ",
        " export const actions = {",
        "   isResponsive (context) {",
        "     // todo: state.mobileBreakPointから取得する方法を模索する。",
        "     if (window.innerWidth < 960) {",
        "       context.commit('setResponsive', true)",
        "     } else {",
        "       context.commit('setResponsive', false)",
        "     }",
        "   }",
        " }",
        "",
        "code:layouts/defalut.js",
        " <template>",
        "   <v-app",
        "     id=\"inspire\"",
        "   >",
        "     <layouts-drawer />",
        "     <layouts-toolbar />",
        "     <layouts-view />",
        "   </v-app>",
        " </template>",
        " ",
        " <script>",
        "   import LayoutsView from '~/components/layouts/LayoutsView.vue'",
        "   import LayoutsDrawer from '~/components/layouts/LayoutsDrawer.vue'",
        "   import LayoutsToolbar from '~/components/layouts/LayoutsToolbar.vue'",
        "   export default {",
        "     components: {",
        "       /* LayoutsFooter, */",
        "       LayoutsDrawer,",
        "       LayoutsToolbar,",
        "       LayoutsView",
        "     },",
        "     // resize処理",
        "     mounted: function () {",
        "       window.addEventListener('resize', this.handleResize)",
        "     },",
        "     // resize処理",
        "     beforeDestroy: function () {",
        "       window.removeEventListener('resize', this.handleResize)",
        "     },",
        "     // resize処理",
        "     methods: {",
        "       handleResize: function () {",
        "         // resizeのたびにこいつが発火するので、ここでやりたいことをやる",
        "         this.$store.dispatch('layouts/isResponsive')",
        "       }",
        "     }",
        "   }",
        " </script>",
        " ",
        " <style scoped>",
        " </style>",
        " ",
        "",
        "code:components/LayoutsToolbar.js",
        " <template>",
        "   <v-toolbar",
        "     flat",
        "     prominent",
        "     style=\"background: #eee;\"",
        "     fixed",
        "     app",
        "   >",
        "     <v-btn",
        "       v-if=\"$store.state.layouts.responsive\"",
        "       icon",
        "       @click=\"$store.commit('layouts/toggleDrawer')\"",
        "     >",
        "       <v-icon>list</v-icon>",
        "     </v-btn>",
        " ",
        "     <v-toolbar-title>Fitbit Analyzer</v-toolbar-title>",
        "   </v-toolbar>",
        " </template>",
        " ",
        " <script>",
        "   export default {",
        "     name: 'LayoutsToolbar'",
        "   }",
        " </script>",
        " ",
        " <style scoped>",
        " ",
        " </style>",
        " ",
        ""
      ]
    },
    {
      "title": "12月の予定",
      "created": 1575092414,
      "updated": 1583409222,
      "id": "5de200af59185d0017661ed8",
      "lines": [
        "12月の予定",
        "[https://tenki.jp/forecast/6/29/6110/26100/1hour.html 京都市の1時間天気 - 日本気象協会 tenki.jp]",
        "",
        "　12/01(日)",
        "　 今日の予定",
        "　　　[https://qiita.com/advent-calendar/2019/yumemi_no1 今年イチ！お勧めしたいテクニック by ゆめみ feat.やめ太郎 Advent Calendar 2019 - Qiita]",
        " 　　午前",
        " 　　 新規開発に入る",
        "  　　[組み合わせタイマー]",
        "  　　概要設計とか",
        "  　午後",
        "  　　写真ベスト・セレクション",
        "  今日したこと",
        "   午前",
        "    [組み合わせタイマー]",
        "   午後",
        "    [組み合わせタイマー]",
        "    　プロジェクト作成",
        "    　GITHHUB",
        "    　STARTUP SCRIPT ",
        "    　静的解析",
        "    　土台を作る",
        "    　IOSシュミレーターが動かなくなったので、XCODE入れ直し",
        "",
        " 12/02(月)　雨",
        "　　予定",
        "　　　午前",
        "　　　　[組み合わせタイマー]",
        "　　　　　プロジェクトの土台を完成させたい。",
        "　　　午後",
        "　　　　カフェとか、本読んだり",
        "　　実際",
        "　　　午前",
        "　　　　組み合わせタイマー",
        "　　　　　THEME + PROVIDER",
        "　　　　 昼寝",
        "　　　午後",
        "　　　　飯食ってから昼寝したのがよくなかった。",
        "　　　　腹が痛くなって何もできなかった。",
        "",
        " 12/03(水)　晴れ",
        " 　予定",
        " 　　午前",
        " 　　　仕事",
        " 　　　じいちゃんのapplewatch",
        " 　　 PROVIDER + THEME",
        " 　　 　[https://medium.com/better-programming/how-to-create-a-dynamic-theme-in-flutter-using-provider-e6ad1f023899 How To Create a Dynamic Theme in Flutter Using Provider]",
        "  　　　[https://github.com/divyanshub024/chitr/blob/master/lib/screens/settings_page.dart chitr/settings_page.dart at master · divyanshub024/chitr]",
        " 　　　LOGIN",
        " 　　　 LOGIN PAGE",
        " 　　　 FIREBSE",
        " 　　　  FIREBASEのSCRAPBOX上のページの混在を避ける　一つにまとめる",
        " 　　　  ATHRICATION",
        " 　　　  FLUTTERに追加",
        " 　　　  LOGIN SCREEN",
        " 　　午後　",
        " 　　　出かける",
        " 　　　　ユニクロ",
        "",
        "　12/04(水)",
        "　　厚紙を捨てる",
        "　　板橋の口座からsbiへ振り込み、",
        "  紅葉見に行く",
        "   梨木神社",
        "   下鴨神社",
        "  土台を作り終える",
        "  　　firebase auth",
        "  情報まとめる",
        "",
        "　12/05(木)",
        "　　[組み合わせタイマー]",
        "　　明日何する",
        "",
        "",
        "　12/06(金)",
        "　 table:予実",
        "　  予定\t実際",
        "　  ご飯を買う\t◯",
        "　  出かける\t△",
        "　  漫画買う\t◯",
        "　  一部口座のお金を入れ替える\t◯",
        "　  アプリ作成\t△",
        "",
        "　12/07(土)",
        "　 table:予定",
        "　  予定\t実際",
        "　  譲渡会\t✕",
        "　  仕事\t◯",
        "",
        "　12/08(日)",
        "　 table:予定",
        "　  予定\t実際\t時間",
        "　  仕事\t△\t10時まで",
        "　  昼飯、風呂\t◯\t10-12時",
        "　  譲渡会\t✕\t12時から",
        "　  カフェ\t✕\t",
        "",
        "　12/09(月)",
        "　 table:予定",
        "　  予定\t実際\t時間\t備考",
        "　  京都\t\t\t日向大神宮",
        "　  飯\t◯\t\t",
        "　  仕事\t◯\t\t",
        "",
        "　　音声入力でメモを試す",
        "　　　読書メモの移行で",
        "",
        "　　京都雪どこいくか考える",
        "",
        "",
        "",
        "　12/12(木)",
        "　　[http://www.bunpaku.or.jp/exhi_special_post/mucha2019/ みんなのミュシャ　ミュシャからマンガへ―線の魔術 ｜ 京都府京都文化博物館]",
        "　　　日程的にこの日じゃなきゃだめっていうのはない。",
        "　　　強いていうなら紅葉狩りが終わったあと",
        "",
        "　12/17(火)",
        "　　todo",
        "　　 [- めしを食う]",
        "　　 帰宅準備する",
        "　　 　なにを持って帰るかリスト",
        "　　 　帰宅してすること",
        "　　 　家を出る前にすること",
        "　　 　ぎょうていの食べ納めとカード交換",
        "　　 [- オナニー]",
        "　　 今日までしたこと整理",
        "　　　バスですること",
        "　　　[旅装]",
        "",
        "　12/18(水)",
        "　　帰宅準備完了",
        "　　iphone修理",
        "　　hdd破壊",
        "",
        "　12/19(木)",
        "　　帰宅準備",
        "　　　６：００起床",
        "　　　７時出発",
        "　　　７時半京都駅",
        "　　　８時１５分頃まで朝マック",
        "　　　８：３０バス",
        "　　　京都駅烏丸口0830",
        " 　[１２月の帰宅予定立てる]",
        " 　[2019年12月時の旅装]",
        " 　[長期に渡ってアパートを空けるときにすること]",
        "",
        "リーちゃんの写真取ること",
        "",
        "　12/21(土)",
        "　　歯医者 10時",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　音楽",
        "　　みゆはん、佐咲さやか、さゆり、the pillows、ふあな、坂本真綾",
        "　　TUTAYA 四条寺町店に行ってみる",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "　東京ですることの詳細を詰める",
        "　散髪の予定入れる",
        ""
      ]
    },
    {
      "title": "賃貸",
      "created": 1575106438,
      "updated": 1591611630,
      "id": "5de237833cead6001791357a",
      "lines": [
        "賃貸",
        "[* 締結日によるので4月1日以前からの契約には適応されません]",
        "",
        "",
        "120年ぶりに民法が改正される。",
        "・敷金が借り主に返される",
        "・借りてる部屋が年月と共に変化しても綺麗にする義務がない",
        "・契約の取り決めに消費者が一方的に損する項目があっても有効とならない",
        "みたいなことが明記される。騙されそうになったら「民法変わりましたよね？」って言いましょう。",
        "",
        "賃貸の立会い確認が終了。予想通りガイドライン無視(耐用年数)の金額が提示された。そのことを不動産屋に伝えると、「ご存じでしたか？！」と言って即時に訂正された。5万円の支払いが6千円の敷金返金に変わった。無知では毟り取られる世の中。",
        "[https://gyazo.com/dd6b18321cb62d29722c8bab97b341d1]",
        "",
        "",
        "民法が改正されました！",
        "",
        "敷金",
        "・大家は、家賃の未払い分を引いた残りを返還しなければいけない",
        "・借りている人は、家具による床・カーペットのへこみ、クロスの変色・画鋲の穴を元通りにしなくてよい（ヤニ汚れ、ペットがつけた傷は元通りにする）",
        "",
        "利息",
        "交通事故などの遅延損害金は年5%から3%に！",
        ""
      ]
    },
    {
      "title": "絵師にお金払って絵を書いてもらうサービス",
      "created": 1575106599,
      "updated": 1575106606,
      "id": "5de2382459185d00176686a9",
      "lines": [
        "絵師にお金払って絵を書いてもらうサービス",
        "[https://twitter.com/shine_sann/status/1177083599473872897 しゃいん♥さんのツイート: \"3万円課金して10連10回して推しの量産型の絵が低率で来ることを祈るの、本当に理解に苦しむんですよね…。3万円を直接神絵師の口座にダンクすれば確定でオーダーメイドの推しの神絵がぽこじゃか出るんですよ。しかも神絵師と対話できるおまけつき。私はこれで今月5万溶かしました。後悔はしてません。\"]",
        ""
      ]
    },
    {
      "title": "Untitled",
      "created": 1575148488,
      "updated": 1582287744,
      "id": "5de2dbc1fe8f4b001731bd69",
      "lines": [
        "",
        "",
        ""
      ]
    },
    {
      "title": "組み合わせタイマーのアプリ構築",
      "created": 1575158736,
      "updated": 1575182800,
      "id": "5de303cd86203800177816d9",
      "lines": [
        "組み合わせタイマーのアプリ構築",
        " プロジェクト作成",
        "　 [https://gyazo.com/9dde23d82caedc01397e66862c90900b]",
        "　github",
        "　 [https://gyazo.com/a7a07fdc8d00639b84116c549f351957]",
        "　startup scriptに追加",
        "  auto gitに追加",
        "　静的解析",
        "　　[analysis_options.yaml]追加",
        ""
      ]
    },
    {
      "title": "firebase色々",
      "created": 1575335656,
      "updated": 1581418112,
      "id": "5de5b6e538df460017d62a32",
      "lines": [
        "firebase色々",
        "#firebse　",
        "ここ整理する",
        "",
        "flutterに関連する情報は[https://scrapbox.io/ampersand-flutter/firebase firebase - ampersand-flutter]",
        "それ以外はここ",
        "",
        "",
        " [firebase ver nuxt 1]",
        " [firebase ver nuxt 2]",
        " [https://www.youtube.com/playlist?list=PLl-K7zZEsYLn8h1NyU_OV6dX8mBhH2s_L Understanding Firebase Security Rules - YouTube]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "糖衣構文 syntactic sugar",
      "created": 1575439977,
      "updated": 1575440387,
      "id": "5de74e001a9a640017610b6c",
      "lines": [
        "糖衣構文 syntactic sugar",
        "",
        ">糖衣構文（とういこうぶん、英: syntactic sugarあるいはsyntax sugar）は、プログラミング言語において、読み書きのしやすさのために導入される書き方であり、複雑でわかりにくい書き方と全く同じ意味になるものを、よりシンプルでわかりやすい書き方で書くことができるもののことである。構文上の書き換えとして定義できるものであるとも言え",
        "by [https://ja.wikipedia.org/wiki/%E7%B3%96%E8%A1%A3%E6%A7%8B%E6%96%87 糖衣構文 - Wikipedia]",
        "",
        "> プログラミング言語における、やってくれる処理は同じだけど本来の書き方よりも簡単な書き方のこと",
        "by [https://wa3.i-3-i.info/word15704.html 糖衣構文 (syntax sugar)とは｜「分かりそう」で「分からない」でも「分かった」気になれるIT用語辞典]",
        "",
        "",
        "[https://gyazo.com/2f7f29f1153381bf5ba185e3d8ad5fb5]",
        "",
        "by [http://shuzo-kino.hateblo.jp/entry/2017/05/31/235442 v-modelは糖衣構文 - Bye Bye Moore]",
        ""
      ]
    },
    {
      "title": "依存注入 Dependency Injection DI",
      "created": 1575440458,
      "updated": 1575441514,
      "id": "5de7504870b5130017ec35ec",
      "lines": [
        "依存注入 Dependency Injection DI",
        "[https://qiita.com/hshimo/items/1136087e1c6e5c5b0d9f 猿でも分かる! Dependency Injection: 依存性の注入 - Qiita]",
        "",
        " Dependencyの意味について",
        " 　依存と訳すのは間違い",
        " 　オブジェクト(依存オブジェクト)と呼ぶのが正しい。",
        "",
        "[https://gyazo.com/4345ccd1760f4bb1d16fe7d27bffbd1c]",
        "[https://nekogata.hatenablog.com/entry/2014/02/13/073043 要するに DI って何なのという話 - 猫型の蓄音機は 1 分間に 45 回にゃあと鳴く]",
        ""
      ]
    },
    {
      "title": "トリプルチェックの弊害",
      "created": 1575509321,
      "updated": 1575509339,
      "id": "5de85d42f2f0bd00178425b0",
      "lines": [
        "トリプルチェックの弊害",
        "トリプルチェックの弊害ってエビデンスもあって、例えば、トリプルチェックをするとシングルチェックとエラー検出率が変わらないので、時間ロスするだけなんだよね。",
        "",
        "[https://gyazo.com/c61dff5bb8315d990623942c87161c3d]",
        "[https://gyazo.com/668d90f081b1b08f23853719586b555b]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "プロジェクト作成 - inteliJ IDEA -",
      "created": 1575523941,
      "updated": 1581416220,
      "id": "5de89656d4c6d60017e45f8e",
      "lines": [
        "プロジェクト作成 - inteliJ IDEA -",
        "[inteliJ IDEA からプロジェクトを作成]に移動",
        ""
      ]
    },
    {
      "title": "githubのssh設定",
      "created": 1575524284,
      "updated": 1575524284,
      "id": "5de897ba6aa46d0017ec8afd",
      "lines": [
        "githubのssh設定",
        "\t [ssh]の鍵を作成",
        "\t `ssh -T github` -> パスフレーズ入力 -> `Hi ampersand-dev! You've successfully authenticated, but GitHub does not provide shell access.`",
        ""
      ]
    },
    {
      "title": "githubでプライベートプロジェクトを作る",
      "created": 1575524411,
      "updated": 1581462534,
      "id": "5de89829b52bd70017339c38",
      "lines": [
        "githubでプライベートプロジェクトを作る",
        "[https://github.com/ GitHub]",
        "",
        " `new`",
        " 　[https://gyazo.com/2430de32aa2969d4bff149ab20e749f5]",
        "",
        " 名前を入力",
        " 　ideaと同じプロジェクト名で入力",
        "[https://gyazo.com/0bd107261b4309653a9a6dd255fa57aa]",
        "  Privateにするのを忘れずに",
        "  `create repository`",
        "",
        " ideaで実行する",
        "  [https://gyazo.com/7715a3661afa9e588c759af13d966c8b]",
        "  `git add .`を忘れずに",
        " 　code:zsh",
        "　  echo \"# grouping_timer2\" >> README.md",
        "   git init",
        "   git add README.md",
        "   git add . ",
        "   git commit -m \"first commit\"",
        "   git remote add origin git@github.com:ampersand-dev/grouping_timer2.git",
        "   git push -u origin master",
        "",
        "  code:zsh",
        "   git remote add origin git@github.com:ampersand-dev/grouping_timer2.git",
        "   git push -u origin master",
        "",
        "　画面を更新して確かめて見る",
        "",
        ""
      ]
    },
    {
      "title": "毎日自動的にpushする",
      "created": 1575525265,
      "updated": 1583358363,
      "id": "5de89b4310e8ed00179126a7",
      "lines": [
        "毎日自動的にpushする",
        " に追記",
        "open -e /Users/dev/my/app/Projects/StartupScripts/AutoGit/auto_git.command",
        "-e で text editで開く",
        "  code:zsh",
        "   #!/bin/bash",
        "   ",
        "   cd /Users/dev/my/app/Projects/StartupScripts",
        "   git add .",
        "   git commit -m 'auto commit'",
        "   git push -u origin master",
        "   ",
        "   cd /Users/dev/my/app/Practice/flutter_practice2",
        "   git add .",
        "   git commit -m 'auto commit'",
        "   git push -u origin master",
        "   ",
        "   cd /Users/dev/my/app/Projects/portfolio",
        "   git add .",
        "   git commit -m 'auto commit'",
        "   git push -u origin master",
        "   ",
        "   cd /Users/dev/my/app/Projects/grouping_timer2",
        "   git add .",
        "   git commit -m 'auto commit'",
        "   git push -u origin master",
        "   ",
        "",
        " 定期的にgithubにアクセスして本当にpushできているかたしかめること",
        ""
      ]
    },
    {
      "title": "アプリの画面デザインを作成する手順",
      "created": 1575621267,
      "updated": 1575682399,
      "id": "5dea12905def190017914065",
      "lines": [
        "アプリの画面デザインを作成する手順",
        "　[https://www.figma.com/file/JLZ4lK7243egZi1c13snsM/%E3%83%86%E3%83%B3%E3%83%97%E3%83%AC%E3%83%BC%E3%83%88?node-id=0%3A7178 テンプレート – Figma]をコピペする。",
        "　作り込んでいく",
        "",
        "",
        "　決めること",
        "　　アプリタイトル",
        "　　アプリのキャッチコピー",
        "　　アプリアイコン",
        "",
        "　ぐぐる",
        "　　名前 + アプリ",
        "　　　[https://apps.apple.com/jp/app/%E3%82%B7%E3%83%8A%E3%83%AA%E3%82%AA%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC/id603393474 ‎「シナリオタイマー」をApp Storeで]",
        "　　　　> 複数のタイマーを組み合わせてシナリオとして登録し、連続して動作させることができます。",
        "    > ",
        "    > ポモドーロタイマーやキッチンタイマーとしての使用はもちろんの事、受験勉強用やお仕事用など、ご自分の用途にあわせたシナリオをカスタマイズしてご利用ください。",
        "　　　名前 + アプリ -> 画像検索",
        "　　　　[https://www.google.com/search?q=%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC+app&rlz=1C5CHFA_enJP870JP870&sxsrf=ACYBGNQrFbjRAgGpk4yuIqGyTSvp9dpfEg:1575669801028&source=lnms&tbm=isch&sa=X&ved=2ahUKEwi-0pe2g6LmAhUCD6YKHbnJA6gQ_AUoAnoECAwQBA&cshid=1575669950478776&biw=1920&bih=890#imgrc=OFFVyCBv0XydiM: タイマー app - Google 検索]",
        "　　　　",
        "",
        "",
        "　類似アプリを探す",
        "  play stote",
        "  [https://flutterawesome.com/ Flutter Awesome]",
        "  ",
        "",
        "　類似デザインを探す",
        "　　[https://www.pinterest.jp/ (68) Pinterest]",
        "　　[https://dribbble.com/ Dribbble - Discover the World’s Top Designers & Creative Professionals]",
        " ",
        ""
      ]
    },
    {
      "title": "wakatimeのプラグインが動かない",
      "created": 1575879828,
      "updated": 1575879828,
      "id": "5dee048e3a686e00179d91a3",
      "lines": [
        "wakatimeのプラグインが動かない",
        "[https://github.com/wakatime/chrome-wakatime/issues/44 Unable to Log In · Issue #44 · wakatime/chrome-wakatime]",
        ""
      ]
    },
    {
      "title": "スクレイピング",
      "created": 1575879961,
      "updated": 1596266407,
      "id": "5dee05176eeefe00170a224b",
      "lines": [
        "スクレイピング",
        " 準備",
        " 　[https://qiita.com/ryuta69/items/c84501993635c72540a7 入門系記事にはない、実践/現場のPythonスクレイピング流儀【2019年最新】 - Qiita]",
        " 　 $ brew tap homebrew/cask",
        "   $ brew cask install chromedriver",
        "    `chromedriver to /usr/local/bin/chromedriver`",
        "    上記フォルダで右クリックして開くを押す",
        "",
        "",
        "#python",
        "brew cask install chromedriver",
        "brew cask install chromedriverbrew cask install chromedriverbrew cask install chromedriverbrew cask install chromedriver",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "開発元が未確認のため開けません。",
      "created": 1575880972,
      "updated": 1575880980,
      "id": "5dee090a6eeefe00170a318f",
      "lines": [
        "開発元が未確認のため開けません。",
        "#mac",
        "",
        "[https://materializer.co/lab/blog/219 【簡単】『開発元が未確認のため開けません』と表示され起動できないMacアプリを起動する方法〜macOS Sierra以降は必須〜 | Macアプリ開発ラボ]",
        ""
      ]
    },
    {
      "title": "京都 - 雪 -",
      "created": 1575884198,
      "updated": 1575884978,
      "id": "5dee159f6eeefe00170a5d6e",
      "lines": [
        "京都 - 雪 -",
        "　早朝拝観を予約する",
        "　北山や洛北につもりやすい",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "　金閣寺",
        "　銀閣寺",
        "　貴船",
        "　渡月橋",
        "　八坂の塔（法観寺）",
        "　　[https://gyazo.com/c1b2c0cc6cee47f5ebbeb681719fd5dd]",
        "　真如堂",
        "　大徳寺　瑞峯院",
        "　南禅寺",
        "　二年坂・三年坂",
        ""
      ]
    },
    {
      "title": "緊急時のためのqrコードアプリ",
      "created": 1575885969,
      "updated": 1575885969,
      "id": "5dee1c8e6eeefe00170a7008",
      "lines": [
        "緊急時のためのqrコードアプリ",
        "　　保険証、免許証の裏面にqrコードを貼り付ける",
        "　　コンビニでシールコピーできそう"
      ]
    },
    {
      "title": "会計士が教える銘柄選び―業種別の攻略法はこれだ!",
      "created": 1575887386,
      "updated": 1575887666,
      "id": "5dee22172fd5560017db571f",
      "lines": [
        "会計士が教える銘柄選び―業種別の攻略法はこれだ!",
        "[https://www.amazon.co.jp/%E4%BC%9A%E8%A8%88%E5%A3%AB%E3%81%8C%E6%95%99%E3%81%88%E3%82%8B%E9%8A%98%E6%9F%84%E9%81%B8%E3%81%B3%E2%80%95%E6%A5%AD%E7%A8%AE%E5%88%A5%E3%81%AE%E6%94%BB%E7%95%A5%E6%B3%95%E3%81%AF%E3%81%93%E3%82%8C%E3%81%A0-%E6%A4%8D%E6%9D%BE-%E4%BA%AE/dp/4532353009/ref=sr_1_4?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&keywords=%E4%BC%9A%E8%A8%88%E5%A3%AB%E3%81%8C%E6%95%99%E3%81%88%E3%82%8B&qid=1575887463&s=books&sr=1-4 会計士が教える銘柄選び―業種別の攻略法はこれだ! | 植松 亮 |本 | 通販 | Amazon]",
        "#読書 ",
        "",
        "　粗利",
        "　　売上総利益のこと　",
        "　　粗利利益=売上総利益 / 売上",
        "　　粗利利益率が高い",
        "　　　ブランド力、競争力がある",
        "",
        "　営業利益",
        "　　純粋な事業活動によって生じた利益",
        "　　会社の将来性を知るのに最も重要",
        "　　営業利益率が高いほど良い",
        "　　営業利益が高ければ最終赤字でも良い",
        "",
        "　時系列比較は3から5期すると良い",
        "",
        "　重要な三要素",
        "　　営業利益",
        "　　　企業の成長性を見る",
        "　　当期純利益　",
        "　　　株価への影響が大きい",
        "　　営業利益率",
        "",
        "　EPS ",
        "　　長期的には株価は EPSに連動する",
        "　　つまり EPS が右肩上がり、かつ、株価が低迷しているのが良い",
        "",
        "　一株当たり当期純利益 ",
        "　 企業規模に関係なく業績から分析できる ",
        "",
        ""
      ]
    },
    {
      "title": "時間の使い方",
      "created": 1575887717,
      "updated": 1575889018,
      "id": "5dee2361d38a3700179e8b48",
      "lines": [
        "時間の使い方",
        "書籍名不明",
        "#読書 ",
        "",
        "　[充実時間錯覚]　",
        "　[自我防衛機制]",
        "　[逃避行動]",
        "　[目的化傾向]",
        " [充実感を感じるために]",
        "",
        ""
      ]
    },
    {
      "title": "充実時間錯覚",
      "created": 1575887925,
      "updated": 1575887925,
      "id": "5dee2430246dff0017419902",
      "lines": [
        "充実時間錯覚",
        "体験した出来事の数が多いほど長く感じられる",
        ""
      ]
    },
    {
      "title": "自我防衛機制",
      "created": 1575887952,
      "updated": 1575888084,
      "id": "5dee244e4eae7d001727b521",
      "lines": [
        "自我防衛機制",
        "　概要",
        "　　自分自身の心理的価値を下げずに自尊心を傷つけないように自動的に働く心理的な機能",
        "",
        "　特徴",
        "　　自分の失敗は知覚や認知が記録されにくい",
        "　　自分の成功は知覚や認知が記憶されやすい",
        "",
        "　結論",
        "　　失敗がないように選択の先送りや見送りを選ぶ",
        "　　自分の選択が正しいことを示す情報をコストをかけてまで得ようとする",
        ""
      ]
    },
    {
      "title": "逃避行動",
      "created": 1575888228,
      "updated": 1575888250,
      "id": "5dee25619cf83000179d38a9",
      "lines": [
        "逃避行動",
        " 他の作業に没頭してしまうことで大事な作業で失敗しても、そのための十分な時間がなかったという言い訳ができる",
        ""
      ]
    },
    {
      "title": "目的化傾向",
      "created": 1575888898,
      "updated": 1575888903,
      "id": "5dee27fd22257800174a19a6",
      "lines": [
        "目的化傾向",
        " 目標に近づくほどモチベーションが上がり積極的になる",
        " とりあえず始める目標を小分けにするのが有効",
        ""
      ]
    },
    {
      "title": "充足した生活を送るために",
      "created": 1575889013,
      "updated": 1575889027,
      "id": "5dee286d812bbd00171170eb",
      "lines": [
        "充足した生活を送るために",
        "　　[充実時間錯覚]　",
        "　　[充実感を感じるために]",
        "　　",
        ""
      ]
    },
    {
      "title": "充実感を感じるために",
      "created": 1575889020,
      "updated": 1575889022,
      "id": "5dee2879e412ce0017eea0a2",
      "lines": [
        "充実感を感じるために",
        "  マンネリ化を避ける",
        "   多くの事柄を体験してないので時間が短く感じる",
        "  多忙を避ける",
        "   忙しくで記憶に残らない"
      ]
    },
    {
      "title": "マルクス経済学",
      "created": 1575889151,
      "updated": 1575889159,
      "id": "5dee28fca7a26b00173da8cb",
      "lines": [
        "マルクス経済学",
        "#読書",
        "タイトル不明",
        ""
      ]
    },
    {
      "title": "図解でよくわかる ネットワークの重要用語解説",
      "created": 1575967616,
      "updated": 1575969881,
      "id": "5def5b7b02fa06001742ec74",
      "lines": [
        "図解でよくわかる ネットワークの重要用語解説",
        "",
        "[https://gihyo.jp/book/2014/978-4-7741-6324-6 改訂4版 図解でよくわかる ネットワークの重要用語解説：書籍案内｜技術評論社]",
        "#読書 #it",
        "",
        "　[ドメイン]",
        "　[DNS]",
        "　[プロキシサーバー]",
        "　[SSL]",
        "　[クッキー]",
        "",
        ""
      ]
    },
    {
      "title": "ドメイン",
      "created": 1575969618,
      "updated": 1575969627,
      "id": "5def6350ac2f2800170fd37b",
      "lines": [
        "ドメイン",
        " インターネット上に存在するコンピュータの所属を示すもの",
        " ドメイン名は IP アドレスと対になるもの",
        ""
      ]
    },
    {
      "title": "DNS",
      "created": 1575969645,
      "updated": 1575969646,
      "id": "5def6364b3441c0017ec7204",
      "lines": [
        "DNS",
        "ホスト名と IP アドレスの名前解決の手段",
        ""
      ]
    },
    {
      "title": "プロキシサーバー",
      "created": 1575969670,
      "updated": 1575969712,
      "id": "5def6383453ddf00172e5aa9",
      "lines": [
        "プロキシサーバー",
        "　外部ネットワークのアクセスを内部のネットワークのコンピューターに変わって行うサーバー",
        "",
        "　利点",
        "　 内部から外部へのアクセスを集中して管理することができる",
        "　 セキュリティ上の利点",
        "　 社内からインターネットアクセスできるユーザーの制限",
        "　 望ましくないウェブサイトの閲覧不可",
        "",
        ""
      ]
    },
    {
      "title": "SSL",
      "created": 1575969723,
      "updated": 1575969726,
      "id": "5def63ba600d6a00174819f0",
      "lines": [
        "SSL",
        "　暗号化プロトコル",
        "　通信データの暗号化によってデータの改ざんや盗聴を防ぐ",
        ""
      ]
    },
    {
      "title": "クッキー",
      "created": 1575969736,
      "updated": 1575969750,
      "id": "5def63c4453ddf00172e5ad6",
      "lines": [
        "クッキー",
        "　保存される情報は一切暗号化されない",
        "　セキュリティに関する情報を Cookie として保存することは極めて危険",
        "　クライアントコンピューター内にデータを保存する",
        ""
      ]
    },
    {
      "title": "不平等の再検討",
      "created": 1575969898,
      "updated": 1575972212,
      "id": "5def646802fa0600174321f4",
      "lines": [
        "不平等の再検討",
        "[https://www.iwanami.co.jp/book/b376434.html 不平等の再検討 - 岩波書店]",
        "#経済学 #アマルティア・セン",
        "",
        "　[福祉]",
        "　[capability]",
        "",
        "　功利主義の批判",
        "　　自由を無視し成果にのみ注目していること",
        "　　心理的尺度によって測れないような成果を無視すること",
        "　　福祉の追求をする自由やその他の目的に対し直接注意を払わないこと",
        "　　永続的な困窮者は小さな変化でもありがたく思ってしまう。",
        "　　　効用による評価ではそれほど悪い生活をしているとはならなくなってしまう可能性がある",
        "",
        "　[貧困]",
        ""
      ]
    },
    {
      "title": "アマルティア・セン",
      "created": 1575969949,
      "updated": 1575969977,
      "id": "5def649a0ca7120017af4d10",
      "lines": [
        "アマルティア・セン",
        "　インドの経済学者",
        "　アジア初のノーベル経済学賞受賞者",
        ""
      ]
    },
    {
      "title": "capability",
      "created": 1575970111,
      "updated": 1576145299,
      "id": "5def653a2482be00176827b0",
      "lines": [
        "capability",
        "#アマルティア・セン",
        "",
        " 直訳された「潜在能力」は正しい訳ではない。",
        "",
        "　ある人が選択することができる「[機能]」の集合である。",
        "　人が行うことのできる様々な[機能]の組み合わせ",
        "",
        " 「ひとは何をしうるか」「ひとはどのような存在でありうるか」",
        "",
        "　capability = 個人が選択できる生き方の幅 =　自由？",
        "",
        "　資源と手段に着目する 125",
        "　 手持ちの資源を選択し、自由へと変換する能力には個々人で差が生じる。",
        "　 故に手持ちの資源量が同じでも、実際に人々が教授している自由には格差があるかもしれない",
        "",
        "　評価",
        "　　✕：それぞれが持っている資源や基本財によって評価",
        "　　◯：価値ある生き方を選択する自由が実際にどのぐらい享受されているか = capability",
        "",
        "",
        " 資源→変換→享受(成果)",
        "　　資源を持っていても、障害があれば、capabilityが低い",
        "　　人は目標がそれぞれ異なるので、同じ資源を持っていても成果が同じだとは限らない",
        "",
        "　変換を困難にする例",
        "　　障害",
        "　　うつなど",
        "",
        "",
        ""
      ]
    },
    {
      "title": "福祉",
      "created": 1575970148,
      "updated": 1575970300,
      "id": "5def653b0349ba0017ed719f",
      "lines": [
        "福祉",
        "#アマルティア・セン",
        "",
        "　辞書によると",
        "　　well-being",
        "　　満足の行く状態",
        "　　安寧",
        "　　幸福",
        "",
        "　センの定義",
        "　　その人の生活の良さ",
        "　　✕ : 福祉政策、サービスではない",
        ""
      ]
    },
    {
      "title": "機能",
      "created": 1575970352,
      "updated": 1576145937,
      "id": "5def662c02fa0600174329f8",
      "lines": [
        "機能",
        "#アマルティア・セン",
        "",
        "　[福祉]を表す様々な状態や行動のこと",
        "　人が成就しうること。行いうること。なりうること。",
        "　　人の状況の一部を反映したもの",
        "",
        " 例",
        "　　適切な栄養を取っている。",
        "　　健康である。",
        "　　教育を受けている。",
        "　　回避できる病気にかからないこと。",
        "　　早死にしないこと。",
        "　　自尊心を持っている。",
        "　　社会活動に参加している",
        "",
        "　機能は財と機能自身から生じる効用とは別ものである。",
        "　　例、自転車",
        "　　　財：自転車",
        "　　　機能：素早く移動できること",
        "　　　（機能から生じる効用）：自転車に乗ると楽しい",
        ""
      ]
    },
    {
      "title": "貧困",
      "created": 1575972214,
      "updated": 1575972659,
      "id": "5def6d74ea40c200171be5cd",
      "lines": [
        "貧困",
        "#アマルティア・セン",
        "",
        "　定義",
        "　　経済的手段が不足しているため福祉を追求する能力がない",
        "\t　経済的手段が不足しているため必要最低限の潜在能力が欠如している",
        "\t　",
        "　重要な点",
        "　　経済的手段が十分であるかどうかは[* 所得や資源を潜在能力に変換できる可能性]を抜きにしては評価できない",
        "",
        "　例",
        "　　腎臓障害で透析を必要とする人は所得こそ高いかもしれないが、それを機能に変換する際の困難を考慮すればこの人の所得は依然として不足しているともいえる",
        "",
        "　結論",
        "　　所得からどのような機能を実現できるかという潜在能力を抜きにして所得だけを見るのは不十分である",
        "  貧困に陥らないための十分な所得は個人の身体的な特徴や社会環境によって異なる",
        "　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　",
        ""
      ]
    },
    {
      "title": "福祉の経済学",
      "created": 1576145173,
      "updated": 1576145718,
      "id": "5df211102ac8ab00172eaca2",
      "lines": [
        "福祉の経済学",
        "#経済学 #アマルティア・セン #読書",
        "[https://www.iwanami.co.jp/book/b265340.html 福祉の経済学 - 岩波書店]",
        "",
        "　[capability]",
        "　[機能]",
        "　富の役割",
        "　　１．　福祉と優位を生み出す源泉としての役割",
        "　　２．　福祉と優位を証拠立てるうえでの効用の重要性",
        "　　→　あくまで福祉と優位の間接的な関わりに置いて理解されるべき",
        ""
      ]
    },
    {
      "title": "2019年12月時の旅装",
      "created": 1576573710,
      "updated": 1576707052,
      "id": "5df89b0b942d030017e5be08",
      "lines": [
        "2019年12月時の旅装",
        "　PC",
        "　[- 　[- mac mini] + 充電 + マウス]",
        "　　[- chromebook]",
        "　　[- ケーブル類]",
        "",
        "　日用品",
        "　　[- 歯磨きセット ]+ [- 充電]",
        "　　[- ひげそり + 充電]",
        "　　[- ガム]",
        "　[- 　アイマスク]",
        "　[- 　完全栄養食]",
        "　[- 　パック白米]",
        "[- 　　サプリメント]",
        "",
        "　ガジェット・身につける物",
        "　　[- スマートフォン]",
        "　　[- fitbit]",
        "　　[- 財布]",
        "　　[- イヤフォン]",
        "　　[- 各種充電器 + モバイルバッテリー]",
        "",
        "　服",
        "　　[- スリッパ]",
        "　　[- フリース]",
        "　[- 　服２セット]",
        "　　[- 下着]",
        "",
        "　ランニング",
        "　　[- 靴、ウェア]",
        "",
        "　その他",
        "　　[- カメラセット]",
        "　　[- ゲーム]",
        "　　[- コントローラー]",
        "　　[- 鍵]",
        "　　[- 電子カイロ]",
        "  [- 光目覚まし]",
        ""
      ]
    },
    {
      "title": "長期に渡ってアパートを空けるときにすること",
      "created": 1576574624,
      "updated": 1576707078,
      "id": "5df89e9dccfabb00179fe42c",
      "lines": [
        "長期に渡ってアパートを空けるときにすること",
        "[- 　ゴミ袋を風呂場に移すこと]",
        "　[- 電気を消すこと]",
        "[- 　窓の鍵を閉めること]",
        "　家の鍵を閉めること",
        "　[- 不必要なものの電源を消すこと]",
        "　[- エアコン消す]",
        ""
      ]
    },
    {
      "title": "1月の予定",
      "created": 1578293010,
      "updated": 1578638900,
      "id": "5e12d6eb3d0e690017c5fefe",
      "lines": [
        "1月の予定",
        "　[12月の予定]",
        " テンプレート",
        "　1/1()",
        " 　table:予定実績",
        " 　 時間\t予定\t実績\tその他",
        " 　 午前\t仕事\t\t",
        " 　 お昼\tランニング\t\t",
        " 　 午後\t読書\t\t",
        " 　todo",
        " 　 ",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　1/8(火)",
        "　　table:予定実績",
        "  　 時間\t予定\t実績\tその他",
        "  　 8:40\t高速バス\t\tグラン昼特急５号 東京駅八重洲南口",
        "  　 16:40\t高速バス\t\t京都、深草(藤森駅)",
        "  　 17:30\t自宅着\t\t",
        "  todo",
        "   片付け・整理",
        "  帰りに持って帰るもの",
        "  　歯ブラシ",
        "",
        "　1/9(水)",
        "　　仕事はじめ",
        " 　table:予定実績",
        " 　 時間\t予定\t実績\tその他",
        " 　 午前\t仕事\t\t",
        " 　 お昼\tランニング\t\t",
        " 　 午後\t読書\t\t",
        " 　todo",
        " 　",
        "",
        "　1/10(木)",
        " 　table:予定実績",
        " 　 時間\t予定\t実績\tその他",
        " 　 午前\t仕事\t\t",
        " 　 お昼\tランニング\t\t",
        " 　 お昼\t洗濯\t\t",
        " 　 午後\t読書\t\t",
        " 　todo",
        " 　　[- 飯を買う]",
        " 　　[- お好み焼きを食べる]",
        " 　　[- チョコ食べる]",
        " 　　サプリ飲む",
        " 　　[- 葉を磨く]",
        " 　　[- 各種目覚ましセット]",
        "　　　[- 寝る]",
        "　　　",
        "",
        "　1/12(日)",
        "　　[https://kyoto-design.jp/event/45424 楊枝のお加持と弓引き初め | 京都のイベント・行事 | 京都観光情報　KYOTOdesign]",
        " 1/16(木)",
        " 　[https://kyoto-design.jp/event/45431 武射神事 | 京都のイベント・行事 | 京都観光情報　KYOTOdesign]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "　todo [雑多何でもメモ]",
        ""
      ]
    },
    {
      "title": "効率的な就寝",
      "created": 1578309366,
      "updated": 1578311517,
      "id": "5e1316f46db75500176cdc18",
      "lines": [
        "効率的な就寝",
        "　午後にカフェインを取らない",
        "　ブルーライトを見ない",
        "　　本を読む",
        "　チョコとdcf",
        "　歯磨き",
        "　ストレッチ",
        "　アロマ",
        "",
        "ーーーーーー",
        "　入眠する時間まであと何分か知らせてほしい",
        "　ストレッチ",
        "　読書",
        ""
      ]
    },
    {
      "title": "MACであと何分アラートアプリ",
      "created": 1578816604,
      "updated": 1579046573,
      "id": "5e1ad45a80296300170b8cee",
      "lines": [
        "MACであと何分アラートアプリ",
        " CRONで実行 (手動)",
        " 　[CRONTAB設定ヘルパー http://www.japan9.com/cgi/cron.cgi]",
        " 予定時刻に対して、あと何分か知らせてくれる",
        " script ってalfredで検索するとscript editerが出てくる",
        " 　言語をjavascriptに変更",
        "　　.appで保存",
        "　　実行は`open -a /〇〇/main.app`",
        "",
        " [https://gyazo.com/09fac1ebf9efc7d1a3d7f8b3c6047501] ",
        "",
        "　cron実行",
        "　 [https://qiita.com/syunyo/items/69c3523a8c500b37f33f 【cron】定期的に処理を行う【MacOS】【Linux】 - Qiita]",
        "　現在時刻取得",
        "　予定時刻との差を求める",
        "　ーーーーーーーー",
        "　時刻を入力する画面がでる",
        "　意識つけるために入力する",
        "　閉じる",
        "",
        "",
        "code:javascript",
        " // - - - - - date設定  - - - - - ",
        " var now = new Date();",
        " var Year = now.getFullYear();",
        " var Month = now.getMonth();",
        " var Day = now.getDate();",
        " var Hour = now.getHours();",
        " var Min = now.getMinutes();",
        " var Sec = now.getSeconds();",
        " ",
        " ",
        " // - - - - - ターゲット時間設定  - - - - - ",
        " var TargetHour = 19;",
        " var target = new Date(Year,Month,Day, TargetHour,00);",
        " ",
        " ",
        " // - - - - - 差分時間設定  - - - - - ",
        " var diffMillsec = target.getTime() - now.getTime();",
        " var diffMin = Math.floor(diffMillsec /1000/60);",
        " var diffHour = Math.floor(diffMillsec /1000/60/60);",
        " ",
        " ",
        " // - - - - - 文言設定  - - - - - ",
        " if (diffHour !== 0) {",
        "     var text1 = \"今日の作業終了まで \" + (diffHour) + \" 時間 \" + (diffMin - diffHour * 60) + \" 分です。\" ",
        "     var text2 = (diffHour) + \"時間\" + (diffMin - diffHour * 60) + \"分\"",
        "     var dialogText = text1 + \"\\n\" + \"「\" + text2 + \"」\" + \"と入力してください。\"",
        " } else {",
        "     var text1 = \"今日の作業終了まで \" + (diffMin) + \" 分です。\"",
        " \tvar text2 = (diffMin - diffHour * 60) + \"分\"",
        " \tvar dialogText = text1 + \"\\n\" + \"「\" + text2 + \"」\" + \"と入力してください。\"",
        " }",
        " ",
        " ",
        " // - - - - - アプリ設定  - - - - - ",
        " var app = Application.currentApplication()",
        " app.includeStandardAdditions = true",
        " ",
        " ",
        " // - - - - - ダイアログ - - - - - ",
        " var response = app.displayDialog(dialogText, {",
        "     defaultAnswer: \"\",",
        "     withIcon: \"note\",",
        "     buttons: [\"Continue\"],",
        "     defaultButton: \"Continue\"",
        " })",
        " ",
        " ",
        " ",
        " // - - - - - 実行  - - - - - ",
        " while (response.textReturned != text2) {",
        "     var response = app.displayDialog(dialogText, {",
        "         defaultAnswer: \"\",",
        "         withIcon: \"note\",",
        "         buttons: [\"Continue\"],",
        "         defaultButton: \"Continue\" ",
        "     })",
        " }",
        " ",
        " ",
        ""
      ]
    },
    {
      "title": "アプリの広告",
      "created": 1579753337,
      "updated": 1579763481,
      "id": "5e290a4f7d014d0017828239",
      "lines": [
        "アプリの広告",
        "[https://apps.admob.com/v2/home?subid=ww-ww-et-amhelp&_ga=2.51987759.76227745.1579732362-604415965.1579732362 Google AdMob]",
        "",
        " admob_flutter: ^0.3.4を使用",
        " ios側の設定を先にすること。しないとflutter run が通らなくなる",
        "",
        "　参考",
        "　　[https://algorithm.joho.info/flutter/firebase-admob-plugin-dart/ 【Flutter】アプリ内にAdMob広告を表示する方法 | 技術雑記]",
        "　　[https://www.shogogeek.com/entry/2018/09/17/073000 Flutterでバナー広告を出す - 虎視眈々と]",
        "　　",
        "",
        "　コード",
        "　code:dart",
        "　 import 'package:flutter/material.dart';",
        "  import 'package:admob_flutter/admob_flutter.dart';",
        "  import 'dart:io';",
        "  ",
        "  void main() {",
        "    Admob.initialize(getAppId());",
        "    runApp(Application());",
        "  }",
        "  ",
        "  ",
        "  String getAppId() {",
        "    if (Platform.isIOS) {",
        "      return 'ca-app-pub-3940256099942544~1458002511';",
        "    } else if (Platform.isAndroid) {",
        "      return 'ca-app-pub-3940256099942544~3347511713';",
        "    }",
        "    return null;",
        "  }",
        "",
        " 本番でない場合、サンプルを使わないといけないっぽい",
        " というか、表示されない",
        " ",
        "広告フォーマット\tサンプル広告ユニット ID",
        "バナー\tca-app-pub-3940256099942544/2934735716",
        "インタースティシャル\tca-app-pub-3940256099942544/4411468910",
        "インタースティシャル動画\tca-app-pub-3940256099942544/5135589807",
        "動画リワード\tca-app-pub-3940256099942544/1712485313",
        "ネイティブ アドバンス\tca-app-pub-3940256099942544/3986624511",
        "ネイティブ アドバンス動画\tca-app-pub-3940256099942544/2521693316"
      ]
    },
    {
      "title": "リリース準備",
      "created": 1580006835,
      "updated": 1581286294,
      "id": "5e2cfd6071cac700173d2c6d",
      "lines": [
        "リリース準備",
        "　[* リリース前にすること]",
        "　　利用規約・プライバシーポリシー",
        "　　アプリ見直し",
        "　　　全体的な見直し",
        "　　　お化粧",
        "　　　todo",
        "　　　アカウント削除時動作",
        "　　　タイマー音",
        "　　　初期データ調整",
        "　　アイコン作成",
        "　　リリース準備",
        "　　　apple登録",
        "　　　apple sign inの実装",
        "　　[- 強制アップデート]",
        "　　[- firebase、firestoreのルール設計]",
        "　　本番用googleアカウント取得",
        "　　宣伝",
        "　　firebaseを本番用アカウントに設定",
        "",
        "　[* リリース後にすること]",
        "　　月額課金",
        "　　firebase admin",
        "",
        ""
      ]
    },
    {
      "title": "良いウェブサービスを支える「利用規約」の作り方",
      "created": 1580204143,
      "updated": 1580540574,
      "id": "5e3000617081010017ba557c",
      "lines": [
        "良いウェブサービスを支える「利用規約」の作り方",
        "[https://gihyo.jp/book/2019/978-4-297-10326-2 【改訂新版】良いウェブサービスを支える「利用規約」の作り方：書籍案内｜技術評論社]",
        "#IT #アプリ　#読書",
        "",
        "",
        "　各雛形",
        "　　[利用規約のひな形]",
        "　　[プライバシーポリシーのひな形]",
        "　　[特定商取引法に基づく表示のひな形]",
        "",
        "",
        "",
        "",
        "　利用規約の必要性",
        "　　クレーム対応の話し合いの土俵を作っておくため",
        "　　法律で定められたデフォルトルールが不利に働かないようにするため",
        "",
        "　当社は、ユーザーが本サービスを利用して生じた損害に対し、一切の責任を負いません。",
        "　　消費者契約法によって無効になる",
        "",
        "　わかりにくいリンクによる騙し討ちは認められない",
        "　　電子商取引及び情報財取引等に関する準則",
        "",
        "　プライバシーポリシー",
        "　　[個人情報]",
        "　　[パーソナルデータ]",
        "　　の取り扱い方針を定めた文書",
        "",
        "　個人情報の利用目的は具体的に明示しなくてはならない。",
        "　　個人情報保護法",
        "　　個人情報の目的外利用は個人情報保護法に違反する",
        "　　電子メールの場合は個人情報保護法以外に特定電子メール法による規制がある",
        "",
        "　個人情報を第三者に提供するときはポリシーに明記し、同意を得る",
        "",
        "　特定商取引法に基づく表示　p44",
        "　　特定商取引法という法律が通信販売に関する広告を行う際に表示すべき項目として指定している事項をまとめて表示することを目的にしている。",
        "　　有料サービス、商品の販売時に必要",
        " 　必須ではなく法の遵守と利便性向上を目的としたツール",
        "  11事項の表示が必要 p45",
        "   電話番号の記載は絶対に必要ということではない",
        "   　必要に応じて問い合わせがあれば開示するでもよいし、遅滞なく対応することで記載を回避できる",
        "",
        "　準拠法の指定がない場合は消費者の常居住地法が準拠法になる",
        "　　消費者契約法",
        "　　消費者が海外にいれば、その国の法律が適用される",
        "　　トラブル回避のために日本法を準拠法とする",
        "　　自身の住む地の地方裁判所を第一審の専属的合意管轄裁判所裁判所とする",
        "　　電子的記録でも合意とみなされる",
        "　　　クリック時のタイムスタンプ",
        "　　　利用規約の文面",
        "　　　を保存する",
        "　　　",
        "",
        "　商標権",
        "　　登録することではじめて発生する権利",
        "　　特許情報プラットフォームでみることができる",
        "",
        "　著作権",
        "　　コンテンツを作成した瞬間に以下が付与される",
        "　　　著作者人格権",
        "　　　　許諾したり譲渡することができない",
        "　　　著作財産権",
        "　　　　権利の許諾や譲渡ができる",
        "　　　　　以下の３つの処理方法がある",
        "　　　　　　サービスを継続的に提供する目的の範囲内で変更等の許諾をとる",
        "　　　　　　無制限に利用する許諾をとる",
        "　　　　　　著作権を譲渡してもらう",
        "　　　よって、権利者に対して著作人格権を講師しないという規定が必要になる",
        "",
        "　同意",
        "　　[民法改正後の規約同意について]",
        "",
        "　権利侵害コンテンツ対応 p96",
        "　 著作権の侵害や名誉毀損",
        "　　プロバイダ責任制限法",
        "　　利用規約において「ウェブサービス事業者が権利侵害であると判断した場合は投稿情報の削除が可能である」という旨を規定しておく",
        "",
        "　ユーザー対応工数を減らす p101",
        "　 クレームを受けても利用規約に記載されていることを伝えるとそれだけで納得するユーザーは多い",
        "　 禁止事項は網羅的であること",
        "　 当社がNGと判断した場合という規約を入れる　",
        "　 　訴訟時には効果を否定される場合があるが",
        "　 　ユーザー対応工数削減には役立つ",
        "",
        "　課金",
        "  p107",
        "  ｐ133",
        "",
        "　有利すぎる免責規定はだめ",
        "　　「本サービスに関して利用者に生じた損害については事業者は一切責任を負いません。」",
        "　　　消費者契約法により",
        "　　　免責になる可能性がある",
        "　　　具体的に",
        "　　　　事業者の損害賠償責任を全部免除する条項は無効",
        "　　　　事業者に故意や過失がある場合は、事業者の損害賠償責任の一部を免除する条項も無効",
        "",
        "　広告・マーケティングの規制",
        "　　@148",
        "",
        " 広告メール",
        " 　以下の法律で規制される",
        "　 　特定電子メール法",
        " 　　特定商取引法",
        " 　p163",
        "",
        "　利用規約の落とし穴 p162",
        "　 万能なルールは実効性がないことが多い",
        "　 　ルール",
        "　 　ルール違反時にどうするか",
        "　 　自社で責任を持てること、持てないこと",
        "　　炎上の可能性",
        "　　　以下が炎上しやすい",
        "　　　　著作権の帰属",
        "　　　　個人情報の利用目的および第三者提供",
        "　　　　損害賠償責任の免責",
        "  正確性",
        "  同意取得",
        "  　同意のボタンやチェックボックス",
        "  　利用規約を見える状態にする",
        "  　同意時の規約のアーカイブやログを残す",
        "",
        "　[利用規約のひな形]",
        ""
      ]
    },
    {
      "title": "規約",
      "created": 1580204231,
      "updated": 1580616174,
      "id": "5e2fffc433ea440017876aaa",
      "lines": [
        "規約",
        "[良いウェブサービスを支える「利用規約」の作り方]",
        "",
        ""
      ]
    },
    {
      "title": "個人情報",
      "created": 1580206225,
      "updated": 1580206872,
      "id": "5e3008875e80620017f82930",
      "lines": [
        "個人情報",
        "　狭義の定義",
        "　個人情報保護規定によって保護される情報",
        "",
        "　広義の定義は[パーソナルデータ]",
        ""
      ]
    },
    {
      "title": "パーソナルデータ",
      "created": 1580206877,
      "updated": 1580206890,
      "id": "5e300b196dd84700179d010a",
      "lines": [
        "パーソナルデータ",
        "　生存する個人に関する情報",
        ""
      ]
    },
    {
      "title": "民法改正後の規約同意について",
      "created": 1580449017,
      "updated": 1580450951,
      "id": "5e33bcc8387d2f00179ee241",
      "lines": [
        "民法改正後の規約同意について",
        "　2020年4月1日施行",
        "　定型約款に関するルール",
        "　　「定型取引において、契約の内容とすることを目的として準備された条項の総体をいう」",
        "　　[https://kigyobengo.com/media/useful/578.html 民法改正！利用規約に適用される定型約款ルールへの対応ポイント｜咲くやこの花法律事務所]",
        "",
        "　以下のいずれかの場合において、ユーザーが、その定型約款に合意したときに、契約が成立すると規定された",
        "　　定型約款を契約の内容とする旨の合意（以下「組入合意」という）をしたとき",
        "　　あらかじめその定型約款を契約の内容とする旨を相手方に表示したとき",
        "",
        "　改正以降は以下のやり方でおｋ　",
        "　 規約本文や利用規約へのリンクを表示せすに規約同意ボタンをクリックする",
        "　 〇〇サービス利用の際は規約が適用されます。と記述するだけ",
        "",
        " 利用規約へのリンクは改正民法の施行後も申し込みページに表示したほうが良い",
        " 　相手方から請求があった場合には規約の内容を示さなくてはならないので。",
        "",
        "　規約の変更",
        "　　相手の利益を害さないこと",
        "　　変更が契約に影響を与える",
        "　　変更が合理的である場合は",
        "　　相手の同意を得ることなく規約を変更できる",
        "　　しかし",
        "　　　周知",
        "　　　変更したことを周知する必要がある",
        ""
      ]
    },
    {
      "title": "組み合わせタイマーの規約",
      "created": 1580524249,
      "updated": 1580615944,
      "id": "5e34e2d74f0d9c001798f49c",
      "lines": [
        "組み合わせタイマーの規約",
        "",
        "　todoを全文検索してあとで書き換える",
        "　当社ウェブサイト -> 当アプリ",
        "　[- 当社 -> アプリ開発者]　個人だけど当社にする",
        "　東京地方裁判所 -> 京都地方裁判所",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "本利用規約（以下「本規約」と言います。）には、本サービスの提供条件及び当社と登録ユーザーの皆様との間の権利義務関係が定められています。本サービスの利用に際しては、本規約の全文をお読み頂いた上で、本規約に同意して頂く必要があります。",
        "",
        "第1条（適用）",
        "1.\t本規約は、本サービスの提供条件及び本サービスの利用に関する当社と登録ユーザーとの間の権利義務関係を定めることを目的とし、登録ユーザーと当社との間の本サービスの利用に関わる一切の関係に適用されます。",
        "2.\t当社が当社ウェブサイト上で掲載する本サービス利用に関するルール（todo リンク記載）は、本規約の一部を構成するものとします。",
        "3.\t本規約の内容と、前項のルールその他の本規約外における本サービスの説明等とが異なる場合は、本規約の規定が優先して適用されるものとします。",
        "",
        "",
        "第2条（定義）",
        "本規約において使用する以下の用語は、各々以下に定める意味を有するものとします。",
        "(1)\t「サービス利用契約」とは、本規約を契約条件として当社と登録ユーザーの間で締結される、本サービスの利用契約を意味します。",
        "(2)\t「知的財産権」とは、著作権、特許権、実用新案権、意匠権、商標権その他の知的財産権（それらの権利を取得し、またはそれらの権利につき登録等を出願する権利を含みます。）を意味します。",
        "[- (3)\t「投稿データ」とは、登録ユーザーが本サービスを利用して投稿その他送信するコンテンツ（文章、画像、動画その他のデータを含みますがこれらに限りません。）を意味します。]",
        "[- (4)\t「当社」とは、【会社の正式な商号】を意味します。]",
        "(4)\t「アプリ開発者」とは、【todo twitter url 】を意味します。",
        "(6)\t「登録ユーザー」とは、第3条（登録）に基づいて本サービスの利用者としての登録がなされた個人または法人を意味します。",
        "(7)\t「本サービス」とは、当社が提供する組み合わせタイマーという名称のサービス（理由の如何を問わずサービスの名称または内容が変更された場合は、当該変更後のサービスを含みます。）を意味します。",
        "",
        "",
        "第3条（登録）",
        "1.\t本サービスの利用を希望する者（以下「登録希望者」といいます。）は、本規約を遵守することに同意し、かつ当社の定める一定の情報（以下「登録事項」といいます。）を当社の定める方法で当社に提供することにより、当社に対し、本サービスの利用の登録を申請することができます。",
        "2.\t当社は、当社の基準に従って、第１項に基づいて登録申請を行った登録希望者（以下「登録申請者」といいます。）の登録の可否を判断し、当社が登録を認める場合にはその旨を登録申請者に通知します。登録申請者の登録ユーザーとしての登録は、当社が本項の通知を行ったことをもって完了したものとします。",
        "3.\t前項に定める登録の完了時に、サービス利用契約が登録ユーザーと当社の間に成立し、登録ユーザーは本サービスを本規約に従い利用することができるようになります。",
        "4.\t当社は、登録申請者が、以下の各号のいずれかの事由に該当する場合は、登録及び再登録を拒否することがあり、またその理由について一切開示義務を負いません。",
        "　(1)\t当社に提供した登録事項の全部または一部につき虚偽、誤記または記載漏れがあった場合",
        "　(2)\t未成年者、成年被後見人、被保佐人または被補助人のいずれかであり、法定代理人、後見人、保佐人または補助人の同意等を得ていなかった場合",
        "　(3)\t反社会的勢力等（暴力団、暴力団員、右翼団体、反社会的勢力、その他これに準ずる者を意味します。以下同じ。）である、または資金提供その他を通じて反社会的勢力等の維持、運営もしくは経営に協力もしくは関与する等反社会的勢力等との何らかの交流もしくは関与を行っていると当社が判断した場合",
        "　(4)\t過去当社との契約に違反した者またはその関係者であると当社が判断した場合",
        "　(5)\t第10条に定める措置を受けたことがある場合",
        "　(6)\tその他、登録を適当でないと当社が判断した場合",
        "",
        "",
        "第4条（登録事項の変更）",
        "登録ユーザーは、登録事項に変更があった場合、当社の定める方法により当該変更事項を遅滞なく当社に通知するものとします。",
        "",
        "",
        "第5条（パスワード及びユーザーIDの管理）",
        "1.\t登録ユーザーは、自己の責任において、本サービスに関するパスワード及びユーザーIDを適切に管理及び保管するものとし、これを第三者に利用させ、または貸与、譲渡、名義変更、売買等をしてはならないものとします。",
        "2.\tパスワードまたはユーザーIDの管理不十分、使用上の過誤、第三者の使用等によって生じた損害に関する責任は登録ユーザーが負うものとします。",
        "",
        "",
        "todo 課金を実装してから",
        "[- 第6条（料金及び支払方法）]",
        "[- 1.\t登録ユーザーは、本サービス利用の対価として、別途当社が定め、当社ウェブサイトに表示する利用料金を、当社が指定する支払方法により当社に支払うものとします。]",
        "[- 2.\t登録ユーザーが利用料金の支払を遅滞した場合、登録ユーザーは年14.6％の割合による遅延損害金を当社に支払うものとします。]",
        "",
        "",
        "第7条（禁止事項）",
        "登録ユーザーは、本サービスの利用にあたり、以下の各号のいずれかに該当する行為または該当すると当社が判断する行為をしてはなりません。",
        "(1)\t法令に違反する行為または犯罪行為に関連する行為",
        "(2)\t当社、本サービスの他の利用者またはその他の第三者に対する詐欺または脅迫行為",
        "(3)\t公序良俗に反する行為",
        "(4)\t当社、本サービスの他の利用者またはその他の第三者の知的財産権、肖像権、プライバシーの権利、名誉、その他の権利または利益を侵害する行為",
        "[- (5)\t本サービスを通じ、以下に該当し、または該当すると当社が判断する情報を当社または本サービスの他の利用者に送信すること]",
        "[- ・過度に暴力的または残虐な表現を含む情報]",
        "[- ・コンピューター・ウィルスその他の有害なコンピューター・プログラムを含む情報]",
        "[- ・当社、本サービスの他の利用者またはその他の第三者の名誉または信用を毀損する表現を含む情報]",
        "[- ・過度にわいせつな表現を含む情報]",
        "[- ・差別を助長する表現を含む情報]",
        "[- ・自殺、自傷行為を助長する表現を含む情報]",
        "[- ・薬物の不適切な利用を助長する表現を含む情報]",
        "[- ・反社会的な表現を含む情報]",
        "[- ・チェーンメール等の第三者への情報の拡散を求める情報]",
        "[- ・他人に不快感を与える表現を含む情報]",
        "(6)\t本サービスのネットワークまたはシステム等に過度な負荷をかける行為",
        "(7)\t当社が提供するソフトウェアその他のシステムに対するリバースエンジニアリングその他の解析行為",
        "(8)\t本サービスの運営を妨害するおそれのある行為",
        "(9)\t当社のネットワークまたはシステム等への不正アクセス",
        "(10)\t第三者に成りすます行為",
        "(11)\t本サービスの他の利用者のIDまたはパスワードを利用する行為",
        "[- (12)\t当社が事前に許諾しない本サービス上での宣伝、広告、勧誘、または営業行為]",
        "(13)\t本サービスの他の利用者の情報の収集",
        "[- (14)\t当社、本サービスの他の利用者またはその他の第三者に不利益、損害、不快感を与える行為]",
        "[- (15)\t当社ウェブサイト上で掲載する本サービス利用に関するルール（http://.......）に抵触する行為]",
        "[- (16)\t反社会的勢力等への利益供与]",
        "[- (17)\t面識のない異性との出会いを目的とした行為]",
        "[- (18)\t前各号の行為を直接または間接に惹起し、または容易にする行為]",
        "[- (19)\t前各号の行為を試みること]",
        "(20)\tその他、当社が不適切と判断する行為",
        "",
        "",
        "第8条（本サービスの停止等）",
        "当社は、以下のいずれかに該当する場合には、登録ユーザーに事前に通知することなく、本サービスの全部または一部の提供を停止または中断することができるものとします。",
        "(1)\t本サービスに係るコンピューター・システムの点検または保守作業を緊急に行う場合",
        "(2)\tコンピューター、通信回線等の障害、誤操作、過度なアクセスの集中、不正アクセス、ハッキング等により本サービスの運営ができなくなった場合",
        "(3)\t地震、落雷、火災、風水害、停電、天災地変などの不可抗力により本サービスの運営ができなくなった場合",
        "// todo 追加",
        "(4) クラウドの利用において、利用枠の超過などのために機能制限された場合",
        "(5)\tその他、当社が停止または中断を必要と判断した場合",
        "",
        "第9条（権利帰属）",
        "1.\t当社ウェブサイト及び本サービスに関する知的財産権は全て当社または当社にライセンスを許諾している者に帰属しており、本規約に基づく本サービスの利用許諾は、当社ウェブサイトまたは本サービスに関する当社または当社にライセンスを許諾している者の知的財産権の使用許諾を意味するものではありません。",
        "[- 2.\t登録ユーザーは、投稿データについて、自らが投稿その他送信することについての適法な権利を有していること、及び投稿データが第三者の権利を侵害していないことについて、当社に対し表明し、保証するものとします。]",
        "[- 3.\t登録ユーザーは、投稿データについて、当社に対し、世界的、非独占的、無償、サブライセンス可能かつ譲渡可能な使用、複製、配布、派生著作物の作成、表示及び実行に関するライセンスを付与します。また、他の登録ユーザーに対しても、本サービスを利用して登録ユーザーが投稿その他送信した投稿データの使用、複製、配布、派生著作物を作成、表示及び実行することについての非独占的なライセンスを付与します。]",
        "[- 4.\t登録ユーザーは、当社及び当社から権利を承継しまたは許諾された者に対して著作者人格権を行使しないことに同意するものとします。]",
        "",
        "",
        "第10条（登録抹消等）",
        "1.\t当社は、登録ユーザーが、以下の各号のいずれかの事由に該当する場合は、事前に通知または催告することなく、投稿データを削除もしくは非表示にし、当該登録ユーザーについて本サービスの利用を一時的に停止し、または登録ユーザーとしての登録を抹消することができます。",
        "(1)\t本規約のいずれかの条項に違反した場合",
        "(2)\t登録事項に虚偽の事実があることが判明した場合",
        "(3)\t支払停止もしくは支払不能となり、または破産手続開始、民事再生手続開始、会社更生手続開始、特別清算開始若しくはこれらに類する手続の開始の申立てがあった場合",
        "(4)\t【6】ヶ月以上本サービスの利用がない場合",
        "(5)\t当社からの問い合わせその他の回答を求める連絡に対して30日間以上応答がない場合",
        "(6)\t第3条第4項各号に該当する場合",
        "(7)\tその他、当社が本サービスの利用または登録ユーザーとしての登録の継続を適当でないと判断した場合",
        "[- 2.\t前項各号のいずれかの事由に該当した場合、登録ユーザーは、当社に対して負っている債務の一切について当然に期限の利益を失い、直ちに当社に対して全ての債務の支払を行わなければなりません。]",
        "",
        "",
        "第11条（退会）",
        "1.\t登録ユーザーは、当社所定の手続の完了により、本サービスから退会し、自己の登録ユーザーとしての登録を抹消することができます。",
        "2.\t退会にあたり、当社に対して負っている債務が有る場合は、登録ユーザーは、当社に対して負っている債務の一切について当然に期限の利益を失い、直ちに当社に対して全ての債務の支払を行わなければなりません。",
        "3.\t退会後の利用者情報の取扱いについては、第15条の規定に従うものとします。",
        "",
        "第12条（本サービスの内容の変更、終了）",
        "1.\t当社は、当社の都合により、本サービスの内容を変更し、または提供を終了することができます。",
        "[- 2.\t当社が本サービスの提供を終了する場合、当社は登録ユーザーに事前に通知するものとします。]",
        "",
        "",
        "第13条（保証の否認及び免責）",
        "1.\t当社は、本サービスが登録ユーザーの特定の目的に適合すること、期待する機能・商品的価値・正確性・有用性を有すること、登録ユーザーによる本サービスの利用が登録ユーザーに適用のある法令または業界団体の内部規則等に適合すること、継続的に利用できること、及び不具合が生じないことについて、明示又は黙示を問わず何ら保証するものではありません。",
        "2.\t当社は、本サービスに関して登録ユーザーが被った損害につき、過去1ヶ月間に登録ユーザーが当社に支払った対価の金額を超えて賠償する責任を負わないものとし、また、付随的損害、間接損害、特別損害、将来の損害及び逸失利益にかかる損害については、賠償する責任を負わないものとします。",
        "3.\t本サービスまたは当社ウェブサイトに関連して登録ユーザーと他の登録ユーザーまたは第三者との間において生じた取引、連絡、紛争等については、登録ユーザーが自己の責任によって解決するものとします。",
        "",
        "",
        "第14条（秘密保持）",
        "登録ユーザーは、本サービスに関連して当社が登録ユーザーに対して秘密に取扱うことを求めて開示した非公知の情報について、当社の事前の書面による承諾がある場合を除き、秘密に取扱うものとします。",
        "",
        "",
        "第15条（利用者情報の取扱い）",
        "1.\t当社による登録ユーザーの利用者情報の取扱いについては、別途当社プライバシーポリシー（todo リンク）の定めによるものとし、登録ユーザーはこのプライバシーポリシーに従って当社が登録ユーザーの利用者情報を取扱うことについて同意するものとします。",
        "2.\t当社は、登録ユーザーが当社に提供した情報、データ等を、個人を特定できない形での統計的な情報として、当社の裁量で、利用及び公開することができるものとし、登録ユーザーはこれに異議を唱えないものとします。",
        "",
        "第16条（本規約等の変更）",
        "当社は、当社が必要と認めた場合は、本規約を変更できるものとします。本規約を変更する場合、変更後の本規約の施行時期及び内容を当社ウェブサイト上での掲示その他の適切な方法により周知し、または登録ユーザーに通知します。但し、法令上登録ユーザーの同意が必要となるような内容の変更の場合は、当社所定の方法で登録ユーザーの同意を得るものとします。",
        "",
        "",
        "",
        "第17条（連絡／通知）",
        "1.\t本サービスに関する問い合わせその他登録ユーザーから当社に対する連絡または通知、及び本規約の変更に関する通知その他当社から登録ユーザーに対する連絡または通知は、当社の定める方法で行うものとします。",
        "2.\t当社が登録事項に含まれるメールアドレスその他の連絡先に連絡または通知を行った場合、登録ユーザーは当該連絡または通知を受領したものとみなします。",
        "",
        "第18条（サービス利用契約上の地位の譲渡等）",
        "1.\t登録ユーザーは、当社の書面による事前の承諾なく、利用契約上の地位または本規約に基づく権利もしくは義務につき、第三者に対し、譲渡、移転、担保設定、その他の処分をすることはできません。",
        "2.\t当社は本サービスにかかる事業を他社に譲渡した場合には、当該事業譲渡に伴い利用契約上の地位、本規約に基づく権利及び義務並びに登録ユーザーの登録事項その他の顧客情報を当該事業譲渡の譲受人に譲渡することができるものとし、登録ユーザーは、かかる譲渡につき本項において予め同意したものとします。なお、本項に定める事業譲渡には、通常の事業譲渡のみならず、会社分割その他事業が移転するあらゆる場合を含むものとします。",
        "",
        "",
        "第19条（分離可能性）",
        "本規約のいずれかの条項またはその一部が、消費者契約法その他の法令等により無効または執行不能と判断された場合であっても、本規約の残りの規定及び一部が無効または執行不能と判断された規定の残りの部分は、継続して完全に効力を有するものとします。",
        "",
        "",
        "第20条（準拠法及び管轄裁判所）",
        "1.\t本規約及びサービス利用契約の準拠法は日本法とします。",
        "2.\t本規約またはサービス利用契約に起因し、または関連する一切の紛争については、東京地方裁判所を第一審の専属的合意管轄裁判所とします。",
        "",
        "【2020年2月5日制定】",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -",
        "アプリ開発者が提供するサービス（以下「本サービス」といいます。）における、ユーザーについての個人情報を含む利用者情報の取扱いについて、以下のとおりプライバシーポリシー（以下「本ポリシー」といいます。）を定めます。",
        "",
        "1.\t収集する利用者情報及び収集方法",
        "本ポリシーにおいて、「利用者情報」とは、ユーザーの識別に係る情報、通信サービス上の行動履歴、その他ユーザーまたはユーザーの端末に関連して生成または蓄積された情報であって、本ポリシーに基づき当社が収集するものを意味するものとします。",
        "",
        "[- 本サービスにおいて当社が収集する利用者情報は、その収集方法に応じて、以下のようなものとなります。]",
        "[- \t•\tユーザーからご提供いただく情報]",
        "[- 本サービスを利用するために、または本サービスの利用を通じてユーザーからご提供いただく情報は以下のとおりです。]",
        "",
        "- - - - - - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - -  - - - - ",
        "　4-1 広告",
        "本サービスでは、広告配信ツールとしてAdMob(Google Inc.)を使用しており、AdMobが利用者の情報を自動取得する場合があります。取得する情報、利用目的、第三者への提供等については、以下の広告配信事業者のアプリケーション・プライバシーポリシーのリンクよりご確認ください。",
        "Google 広告に関するポリシー",
        "https://policies.google.com/technologies/ads?hl=ja",
        "",
        "4-2 利用状況解析",
        "本アプリでは、今後の開発の参考とするため、アプリの利用状況データを収集するツールとしてFirebase(Google Inc.)を使用しており、Firebaseがご利用者の情報を自動取得する場合があります。取得する情報、利用目的、第三者への提供等に関しては、以下のGoogleプライバシーポリシーのリンクよりご確認ください。",
        "Google プライバシーポリシー",
        "https://policies.google.com/privacy?hl=ja",
        "",
        "4-3 当アプリで入力された情報",
        "　・ユーザーの肖像を含む静止画情報",
        " ・入力フォームその他当社が定める方法を通じてユーザーが入力または送信する情報",
        "",
        "",
        "[- ・氏名、生年月日、性別、職業等プロフィールに関する情報]",
        "・メールアドレス[- 、電話番号、住所等連絡先]に関する情報",
        "・[- クレジットカード情報、銀行口座情報、電子マネー情報等決済手段に関する情報]",
        "・ユーザーの肖像を含む静止画情報",
        "・入力フォームその他当社が定める方法を通じてユーザーが入力または送信する情報",
        "",
        "\t•\t[- ユーザーが本サービスの利用において、他のサービスと連携を許可することにより、当該他のサービスからご提供いただく情報]",
        "",
        "[- ユーザーが、本サービスを利用するにあたり、ソーシャルネットワーキングサービス等の他のサービスとの連携を許可した場合には、その許可の際にご同意いただいた内容に基づき、以下の情報を当該外部サービスから収集します。]",
        "",
        "[- ・当該外部サービスでユーザーが利用するID]",
        "[- ・その他当該外部サービスのプライバシー設定によりユーザーが連携先に開示を認めた情報]",
        "",
        "[- \t•\tユーザーが本サービスを利用するにあたって、当社が収集する情報]",
        "[- 当社は、本サービスへのアクセス状況やそのご利用方法に関する情報を収集することがあります。これには以下の情報が含まれます。]",
        "",
        "[- ・リファラ]",
        "・[- IPアドレス]",
        "・[- サーバーアクセスログに関する情報]",
        "・[- Cookie、ADID、IDFAその他の識別子]",
        "",
        "(4)\t[- ユーザーが本サービスを利用するにあたって、当社がユーザーの個別同意に基づいて収集する情報]",
        "[- 当社は、ユーザーが3-1に定める方法により個別に同意した場合、当社は以下の情報を利用中の端末から収集します。]",
        "",
        "・[- 位置情報]",
        "",
        "2.\t利用目的",
        "本サービスのサービス提供にかかわる利用者情報の具体的な利用目的は以下のとおりです。",
        "",
        "(1)\t本サービスに関する登録の受付、本人確認、ユーザー認証、ユーザー設定の記録、利用料金の決済計算等本サービスの提供、維持、保護及び改善のため",
        "(2)\tユーザーのトラフィック測定及び行動測定のため",
        "(3)\t広告の配信、表示及び効果測定のため",
        "(4)\t本サービスに関するご案内、お問い合わせ等への対応のため",
        "(5)\t本サービスに関する当社の規約、ポリシー等（以下「規約等」といいます。）に違反する行為に対する対応のため",
        "(6)\t本サービスに関する規約等の変更などを通知するため",
        "",
        "3.\t通知・公表または同意取得の方法、利用中止要請の方法",
        "3-1\t[- 以下の利用者情報については、その収集が行われる前にユーザーの同意を得るものとします。]",
        "",
        "・[- 位置情報]",
        "",
        "3-2\tユーザーは、本サービスの所定の設定を行うことにより、利用者情報の全部または一部についてその収集又は利用の停止を求めることができ、この場合、当社は速やかに、当社の定めるところに従い、その利用を停止します。なお利用者情報の項目によっては、その収集または利用が本サービスの前提となるため、当社所定の方法により本サービスを退会した場合に限り、当社はその収集又は利用を停止します。",
        "",
        "4.\t[- 外部送信、第三者提供、情報収集モジュールの有無]",
        "[- 4-1\t本サービスでは、以下の提携先が、ユーザーの端末にCookieを保存し、これを利用して利用者情報を蓄積及び利用している場合があります。]",
        "[- (1)\t提携先]",
        "",
        "(2)[- \t上記提携先のプライバシーポリシーのURL]",
        "",
        "([- 3)\t上記提携先のオプトアウト（無効化）URL]",
        "",
        "",
        "[- 4-2\t本サービスには以下の情報収集モジュールが組み込まれています。これに伴い、以下のとおり情報収集モジュール提供者（日本国外にある者を含みます。）への利用者情報の提供を行います。]",
        "",
        "(1)\t[- 情報収集モジュールの名称]",
        "",
        "(2)\t情[- 報収集モジュールの提供者]",
        "",
        "(3)\t[- 提供される利用者情報の項目]",
        "",
        "(4)\t[- 提供の手段・方法]",
        "",
        "(5)\t[- 上記提供者における利用目的]",
        "",
        "(6)\t[- 上記提供者における第三者提供の有無]",
        "",
        "(7)\t[- 上記提供者のプライバシーポリシーのURL]",
        "",
        "",
        "5.\t第三者提供",
        "当社は、利用者情報のうち、個人情報については、あらかじめユーザーの同意を得ないで、第三者（日本国外にある者を含みます。）に提供しません。但し、次に掲げる必要があり第三者（日本国外にある者を含みます。）に提供する場合はこの限りではありません。",
        "",
        "(1)\t当社が利用目的の達成に必要な範囲内において個人情報の取扱いの全部または一部を委託する場合",
        "(2)\t合併その他の事由による事業の承継に伴って個人情報が提供される場合",
        "(3)\t第4項の定めに従って、提携先または情報収集モジュール提供者へ個人情報が提供される場合",
        "(4)\t国の機関もしくは地方公共団体またはその委託を受けた者が法令の定める事務を遂行することに対して協力する必要がある場合であって、ユーザーの同意を得ることによって当該事務の遂行に支障を及ぼすおそれがある場合",
        "(5)\tその他、個人情報の保護に関する法律（以下「個人情報保護法」といいます。）その他の法令で認められる場合",
        "",
        "6.\t[- 共同利用]",
        "[- 当社は、以下のとおりユーザーの個人情報を共同利用します。]",
        "",
        "(1)\t[- 共同して利用される個人情報の項目]",
        "",
        "(2)\t[- 共同して利用する者の範囲]",
        "",
        "(3)\t[- 共同して利用する者の利用目的]",
        "",
        "(4)[- \t個人情報の管理について責任を有する者の氏名または名称]",
        "",
        "7.\t個人情報の開示",
        "当社は、ユーザーから、個人情報保護法の定めに基づき個人情報の開示を求められたときは、ユーザーご本人からのご請求であることを確認の上で、ユーザーに対し、遅滞なく開示を行います（当該個人情報が存在しないときにはその旨を通知いたします。）。但し、個人情報保護法その他の法令により、当社が開示の義務を負わない場合は、この限りではありません。なお、個人情報の開示につきましては、手数料（1件あたり1,000円）を頂戴しておりますので、あらかじめ御了承ください。",
        "",
        "8.\t個人情報の訂正及び利用停止等",
        "8-1\t当社は、ユーザーから、(1)個人情報が真実でないという理由によって個人情報保護法の定めに基づきその内容の訂正を求められた場合、及び(2)あらかじめ公表された利用目的の範囲を超えて取扱われているという理由または偽りその他不正の手段により収集されたものであるという理由により、個人情報保護法の定めに基づきその利用の停止を求められた場合には、ユーザーご本人からのご請求であることを確認の上で遅滞なく必要な調査を行い、その結果に基づき、個人情報の内容の訂正または利用停止を行い、その旨をユーザーに通知します。なお、訂正または利用停止を行わない旨の決定をしたときは、ユーザーに対しその旨を通知いたします。",
        "",
        "8-2当社は、ユーザーから、ユーザーの個人情報について消去を求められた場合、当社が当該請求に応じる必要があると判断した場合は、ユーザーご本人からのご請求であることを確認の上で、個人情報の消去を行い、その旨をユーザーに通知します。",
        "",
        "8-3個人情報保護法その他の法令により、当社が訂正等または利用停止等の義務を負わない場合は、8-1および8-2の規定は適用されません。",
        "",
        "9.\tお問い合わせ窓口",
        "ご意見、ご質問、苦情のお申出その他利用者情報の取扱いに関するお問い合わせは、下記の窓口までお願いいたします。",
        "",
        "[- 住所：〒●　　]",
        "[- 株式会社●　]　",
        "[- 個人情報取扱責任者：●]",
        "連絡先：ampersand.support@gmail.com",
        "",
        "10.\tプライバシーポリシーの変更手続",
        "当社は、必要に応じて、本ポリシーを変更します。但し、法令上ユーザーの同意が必要となるような本ポリシーの変更を行う場合、変更後の本ポリシーは、当社所定の方法で変更に同意したユーザーに対してのみ適用されるものとします。なお、当社は、本ポリシーを変更する場合には、変更後の本ポリシーの施行時期及び内容を当社のウェブサイト上での表示その他の適切な方法により周知し、またはユーザーに通知します。",
        "",
        "",
        "2020年2月5日制定",
        "",
        "[- 【●年●月●日改定】]",
        "\f",
        ""
      ]
    },
    {
      "title": "特定商取引法に基づく表示のひな形",
      "created": 1580540125,
      "updated": 1580540141,
      "id": "5e3520d742185e00171a3f2b",
      "lines": [
        "特定商取引法に基づく表示のひな形",
        "[良いウェブサービスを支える「利用規約」の作り方]　より",
        "",
        "元データはダウンロードできる",
        "[https://gihyo.jp/book/2019/978-4-297-10326-2/support#supportDownload サポートページ：【改訂新版】良いウェブサービスを支える「利用規約」の作り方：｜技術評論社]",
        "作成した利用規約を実際に適用",
        "",
        "1.\t事業者の名称：",
        "株式会社●●",
        "",
        "2.\t代表者または通信販売に関する業務の責任者の氏名：",
        "●●",
        "",
        "3.\t住所：",
        "東京都港区●●x-x-x",
        "",
        "4.\t電話番号：",
        "03-xxxx-xxxx",
        "",
        "5.\tメールアドレス：",
        "xxxxx＠xxxxxx.com",
        "",
        "6.\t商品の販売価格・サービスの対価：",
        "各商品・サービスのご購入ページにて表示する価格",
        "",
        "7.\t対価以外に必要となる費用：",
        "配送料：「配送料一覧」（※リンクを貼る）を参照",
        "※なお、インターネット接続料金その他の電気通信回線の通信に関する費用はお客様にて別途ご用意いただく必要があります（金額は、お客様が契約した各事業者が定める通り）。",
        "",
        "8.\t支払方法：",
        "クレジット決済、コンビニ決済",
        "",
        "9.\t代金の支払時期：",
        "【クレジットカード】",
        "ご利用のクレジットカードの締め日や契約内容により異なります。ご利用されるカード会社までお問い合わせください。",
        "【コンビニ決済】",
        "ご注文から3日以内にお支払いいただきます。",
        "",
        "10.\t商品引渡しまたはサービス提供の時期：",
        "【クレジットカード】",
        "クレジットカード利用の承認が下りた後、○○日以内に発送します。",
        "【コンビニ決済】",
        "代金入金確認次第、すみやかに商品を発送します。",
        "",
        "11.返品・キャンセルに関する特約：",
        "本サイトで販売する商品・サービスについては、購入手続完了後の返品またはキャンセルをお受けいたしません。なお、商品・サービスに瑕疵がある場合は、利用規約の定めに従って対応します。",
        "商品がソフトウェアの場合、動作環境及び必要スペックはご購入ページで表示しています。",
        "特別な販売条件または提供条件がある商品またはサービスについては、各商品またはサービスの購入ページにおいて条件を表示します。",
        ""
      ]
    },
    {
      "title": "プライバシーポリシーのひな形",
      "created": 1580540162,
      "updated": 1580624025,
      "id": "5e3520fc179c5e00173a13a2",
      "lines": [
        "プライバシーポリシーのひな形",
        "元データはダウンロードできる",
        "[https://gihyo.jp/book/2019/978-4-297-10326-2/support#supportDownload サポートページ：【改訂新版】良いウェブサービスを支える「利用規約」の作り方：｜技術評論社]",
        "作成した利用規約を実際に適用",
        "",
        " [firebase と admob のプライバシーポリシー]",
        "　　firebase と admob を使っているので、それ用のプライバシーポリシーが必要",
        "",
        "",
        "[- 【会社の正式な商号】（以下「当社」といいます。）]は、当社の提供するサービス（以下「本サービス」といいます。）における、ユーザーについての個人情報を含む利用者情報の取扱いについて、以下のとおりプライバシーポリシー（以下「本ポリシー」といいます。）を定めます。",
        "",
        "1.\t収集する利用者情報及び収集方法",
        "本ポリシーにおいて、「利用者情報」とは、ユーザーの識別に係る情報、通信サービス上の行動履歴、その他ユーザーまたはユーザーの端末に関連して生成または蓄積された情報であって、本ポリシーに基づき当社が収集するものを意味するものとします。",
        "[- 本サービスにおいて当社が収集する利用者情報は、その収集方法に応じて、以下のようなものとなります。]",
        "\t[- •\tユーザーからご提供いただく情報]",
        "[- 本サービスを利用するために、または本サービスの利用を通じてユーザーからご提供いただく情報は以下のとおりです。]",
        "",
        "・[- 氏名、生年月日、性別、職業等プロフィールに関する情報]",
        "・メールアドレス[- 、電話番号、住所等連絡先]に関する情報",
        "・[- クレジットカード情報、銀行口座情報、電子マネー情報等決済手段に関する情報]",
        "・[- ユーザーの肖像を含む静止画情報]",
        "・[- 入力フォームその他当社が定める方法を通じてユーザーが入力または送信する情報]",
        "",
        "\t•\t[- ユーザーが本サービスの利用において、他のサービスと連携を許可することにより、当該他のサービスからご提供いただく情報]",
        "",
        "[- ユーザーが、本サービスを利用するにあたり、ソーシャルネットワーキングサービス等の他のサービスとの連携を許可した場合には、その許可の際にご同意いただいた内容に基づき、以下の情報を当該外部サービスから収集します。]",
        "",
        "・[- 当該外部サービスでユーザーが利用するID]",
        "・[- その他当該外部サービスのプライバシー設定によりユーザーが連携先に開示を認めた情報]",
        "",
        "\t•\tユーザーが本サービスを利用するにあたって、当社が収集する情報",
        "当社は、本サービスへのアクセス状況やそのご利用方法に関する情報を収集することがあります。これには以下の情報が含まれます。",
        "",
        "・[- リファラ]",
        "・[- IPアドレス]",
        "・[- サーバーアクセスログに関する情報]",
        "・[- Cookie、ADID、IDFAその他の識別子]",
        "",
        "(4)\t[- ユーザーが本サービスを利用するにあたって、当社がユーザーの個別同意に基づいて収集する情報]",
        "[- 当社は、ユーザーが3-1に定める方法により個別に同意した場合、当社は以下の情報を利用中の端末から収集します。]",
        "",
        "・[- 位置情報]",
        "",
        "2.\t利用目的",
        "本サービスのサービス提供にかかわる利用者情報の具体的な利用目的は以下のとおりです。",
        "",
        "(1)\t本サービスに関する登録の受付、本人確認、ユーザー認証、ユーザー設定の記録、[- 利用料金の決済計算]等本サービスの提供、維持、保護及び改善のため",
        "(2)\tユーザーのトラフィック測定及び行動測定のため",
        "(3)\t広告の配信、表示及び効果測定のため",
        "(4)\t本サービスに関するご案内、お問い合わせ等への対応のため",
        "(5)\t本サービスに関する当社の規約、ポリシー等（以下「規約等」といいます。）に違反する行為に対する対応のため",
        "(6)\t本サービスに関する規約等の変更などを通知するため",
        "",
        "3.\t通知・公表または同意取得の方法、利用中止要請の方法",
        "3-1\t[- 以下の利用者情報については、その収集が行われる前にユーザーの同意を得るものとします。]",
        "",
        "・[- 位置情報]",
        "",
        "3-2\tユーザーは、本サービスの所定の設定を行うことにより、利用者情報の全部または一部についてその収集又は利用の停止を求めることができ、この場合、当社は速やかに、当社の定めるところに従い、その利用を停止します。なお利用者情報の項目によっては、その収集または利用が本サービスの前提となるため、当社所定の方法により本サービスを退会した場合に限り、当社はその収集又は利用を停止します。",
        "",
        "4.\t[- 外部送信、第三者提供、情報収集モジュールの有無]",
        "4-1\t[- 本サービスでは、以下の提携先が、ユーザーの端末にCookieを保存し、これを利用して利用者情報を蓄積及び利用している場合があります。]",
        "(1)\t[- 提携先]",
        "",
        "(2)\t[- 上記提携先のプライバシーポリシーのURL]",
        "",
        "(3)\t[- 上記提携先のオプトアウト（無効化）URL]",
        "",
        "",
        "↓　ここを 書き換える",
        " [firebase と admob のプライバシーポリシー]",
        "4-2\t本サービスには以下の情報収集モジュールが組み込まれています。これに伴い、以下のとおり情報収集モジュール提供者（日本国外にある者を含みます。）への利用者情報の提供を行います。",
        "",
        "(1)\t情報収集モジュールの名称",
        "",
        "(2)\t情報収集モジュールの提供者",
        "",
        "(3)\t提供される利用者情報の項目",
        "",
        "(4)\t提供の手段・方法",
        "",
        "(5)\t上記提供者における利用目的",
        "",
        "(6)\t上記提供者における第三者提供の有無",
        "",
        "(7)\t上記提供者のプライバシーポリシーのURL",
        "",
        "",
        "5.\t第三者提供",
        "当社は、利用者情報のうち、個人情報については、あらかじめユーザーの同意を得ないで、第三者（日本国外にある者を含みます。）に提供しません。但し、次に掲げる必要があり第三者（日本国外にある者を含みます。）に提供する場合はこの限りではありません。",
        "",
        "(1)\t当社が利用目的の達成に必要な範囲内において個人情報の取扱いの全部または一部を委託する場合",
        "(2)\t合併その他の事由による事業の承継に伴って個人情報が提供される場合",
        "(3)\t第4項の定めに従って、提携先または情報収集モジュール提供者へ個人情報が提供される場合",
        "(4)\t国の機関もしくは地方公共団体またはその委託を受けた者が法令の定める事務を遂行することに対して協力する必要がある場合であって、ユーザーの同意を得ることによって当該事務の遂行に支障を及ぼすおそれがある場合",
        "(5)\tその他、個人情報の保護に関する法律（以下「個人情報保護法」といいます。）その他の法令で認められる場合",
        "",
        "6.\t[- 共同利用]",
        "[- 当社は、以下のとおりユーザーの個人情報を共同利用します。]",
        "",
        "(1)\t[- 共同して利用される個人情報の項目]",
        "",
        "(2)[- \t共同して利用する者の範囲]",
        "",
        "(3)\t[- 共同して利用する者の利用目的]",
        "",
        "(4)\t個人情報の管理について責任を有する者の氏名または名称",
        "",
        "7.\t個人情報の開示",
        "当社は、ユーザーから、個人情報保護法の定めに基づき個人情報の開示を求められたときは、ユーザーご本人からのご請求であることを確認の上で、ユーザーに対し、遅滞なく開示を行います（当該個人情報が存在しないときにはその旨を通知いたします。）。但し、個人情報保護法その他の法令により、当社が開示の義務を負わない場合は、この限りではありません。なお、個人情報の開示につきましては、手数料（1件あたり1,000円）を頂戴しておりますので、あらかじめ御了承ください。",
        "",
        "8.\t個人情報の訂正及び利用停止等",
        "1. 当社は、ユーザーから、(1)個人情報が真実でないという理由によって個人情報保護法の定めに基づきその内容の訂正を求められた場合、及び(2)あらかじめ公表された利用目的の範囲を超えて取扱われているという理由または偽りその他不正の手段により収集されたものであるという理由により、個人情報保護法の定めに基づきその利用の停止を求められた場合には、ユーザーご本人からのご請求であることを確認の上で遅滞なく必要な調査を行い、その結果に基づき、個人情報の内容の訂正または利用停止を行い、その旨をユーザーに通知します。なお、訂正または利用停止を行わない旨の決定をしたときは、ユーザーに対しその旨を通知いたします。",
        "",
        "2. 当社は、ユーザーから、ユーザーの個人情報について消去を求められた場合、当社が当該請求に応じる必要があると判断した場合は、ユーザーご本人からのご請求であることを確認の上で、個人情報の消去を行い、その旨をユーザーに通知します。",
        "",
        "3. 個人情報保護法その他の法令により、当社が訂正等または利用停止等の義務を負わない場合は、1および2の規定は適用されません。",
        "",
        "9.\tお問い合わせ窓口",
        "ご意見、ご質問、苦情のお申出その他利用者情報の取扱いに関するお問い合わせは、下記の窓口までお願いいたします。",
        "",
        "[- 住所：〒●　　]",
        "[- 株式会社●　　]",
        "[- 個人情報取扱責任者：●]",
        "連絡先：●",
        "",
        "10.\tプライバシーポリシーの変更手続",
        "当社は、必要に応じて、本ポリシーを変更します。但し、法令上ユーザーの同意が必要となるような本ポリシーの変更を行う場合、変更後の本ポリシーは、当社所定の方法で変更に同意したユーザーに対してのみ適用されるものとします。なお、当社は、本ポリシーを変更する場合には、変更後の本ポリシーの施行時期及び内容を当社のウェブサイト上での表示その他の適切な方法により周知し、またはユーザーに通知します。",
        "",
        "",
        "【●年●月●日制定】",
        "",
        "【●年●月●日改定】",
        "\f"
      ]
    },
    {
      "title": "利用規約のひな形",
      "created": 1580540241,
      "updated": 1580540605,
      "id": "5e35214d125dd2001711bc07",
      "lines": [
        "利用規約のひな形",
        "[良いウェブサービスを支える「利用規約」の作り方]　より",
        "",
        "元データはダウンロードできる",
        "[https://gihyo.jp/book/2019/978-4-297-10326-2/support#supportDownload サポートページ：【改訂新版】良いウェブサービスを支える「利用規約」の作り方：｜技術評論社]",
        "作成した利用規約を実際に適用",
        "",
        "",
        "",
        "本利用規約（以下「本規約」と言います。）には、本サービスの提供条件及び当社と登録ユーザーの皆様との間の権利義務関係が定められています。本サービスの利用に際しては、本規約の全文をお読み頂いた上で、本規約に同意して頂く必要があります。",
        "",
        "",
        "第1条（適用）",
        "1.\t本規約は、本サービスの提供条件及び本サービスの利用に関する当社と登録ユーザーとの間の権利義務関係を定めることを目的とし、登録ユーザーと当社との間の本サービスの利用に関わる一切の関係に適用されます。",
        "2.\t当社が当社ウェブサイト上で掲載する本サービス利用に関するルール（http://.......）は、本規約の一部を構成するものとします。",
        "3.\t本規約の内容と、前項のルールその他の本規約外における本サービスの説明等とが異なる場合は、本規約の規定が優先して適用されるものとします。",
        "",
        "",
        "第2条（定義）",
        "本規約において使用する以下の用語は、各々以下に定める意味を有するものとします。",
        "(1)\t「サービス利用契約」とは、本規約を契約条件として当社と登録ユーザーの間で締結される、本サービスの利用契約を意味します。",
        "(2)\t「知的財産権」とは、著作権、特許権、実用新案権、意匠権、商標権その他の知的財産権（それらの権利を取得し、またはそれらの権利につき登録等を出願する権利を含みます。）を意味します。",
        "(3)\t「投稿データ」とは、登録ユーザーが本サービスを利用して投稿その他送信するコンテンツ（文章、画像、動画その他のデータを含みますがこれらに限りません。）を意味します。",
        "(4)\t「当社」とは、【会社の正式な商号】を意味します。",
        "(5)\t「当社ウェブサイト」とは、そのドメインが「【本サービスを提供するドメイン名】」である、当社が運営するウェブサイト（理由の如何を問わず、当社のウェブサイトのドメインまたは内容が変更された場合は、当該変更後のウェブサイトを含みます。）を意味します。",
        "(6)\t「登録ユーザー」とは、第3条（登録）に基づいて本サービスの利用者としての登録がなされた個人または法人を意味します。",
        "(7)\t「本サービス」とは、当社が提供する【ウェブサービス名】という名称のサービス（理由の如何を問わずサービスの名称または内容が変更された場合は、当該変更後のサービスを含みます。）を意味します。",
        "",
        "",
        "第3条（登録）",
        "1.\t本サービスの利用を希望する者（以下「登録希望者」といいます。）は、本規約を遵守することに同意し、かつ当社の定める一定の情報（以下「登録事項」といいます。）を当社の定める方法で当社に提供することにより、当社に対し、本サービスの利用の登録を申請することができます。",
        "2.\t当社は、当社の基準に従って、第１項に基づいて登録申請を行った登録希望者（以下「登録申請者」といいます。）の登録の可否を判断し、当社が登録を認める場合にはその旨を登録申請者に通知します。登録申請者の登録ユーザーとしての登録は、当社が本項の通知を行ったことをもって完了したものとします。",
        "3.\t前項に定める登録の完了時に、サービス利用契約が登録ユーザーと当社の間に成立し、登録ユーザーは本サービスを本規約に従い利用することができるようになります。",
        "4.\t当社は、登録申請者が、以下の各号のいずれかの事由に該当する場合は、登録及び再登録を拒否することがあり、またその理由について一切開示義務を負いません。",
        "(1)\t当社に提供した登録事項の全部または一部につき虚偽、誤記または記載漏れがあった場合",
        "(2)\t未成年者、成年被後見人、被保佐人または被補助人のいずれかであり、法定代理人、後見人、保佐人または補助人の同意等を得ていなかった場合",
        "(3)\t反社会的勢力等（暴力団、暴力団員、右翼団体、反社会的勢力、その他これに準ずる者を意味します。以下同じ。）である、または資金提供その他を通じて反社会的勢力等の維持、運営もしくは経営に協力もしくは関与する等反社会的勢力等との何らかの交流もしくは関与を行っていると当社が判断した場合",
        "(4)\t過去当社との契約に違反した者またはその関係者であると当社が判断した場合",
        "(5)\t第10条に定める措置を受けたことがある場合",
        "(6)\tその他、登録を適当でないと当社が判断した場合",
        "",
        "",
        "第4条（登録事項の変更）",
        "登録ユーザーは、登録事項に変更があった場合、当社の定める方法により当該変更事項を遅滞なく当社に通知するものとします。",
        "",
        "",
        "第5条（パスワード及びユーザーIDの管理）",
        "1.\t登録ユーザーは、自己の責任において、本サービスに関するパスワード及びユーザーIDを適切に管理及び保管するものとし、これを第三者に利用させ、または貸与、譲渡、名義変更、売買等をしてはならないものとします。",
        "2.\tパスワードまたはユーザーIDの管理不十分、使用上の過誤、第三者の使用等によって生じた損害に関する責任は登録ユーザーが負うものとします。",
        "",
        "",
        "第6条（料金及び支払方法）",
        "1.\t登録ユーザーは、本サービス利用の対価として、別途当社が定め、当社ウェブサイトに表示する利用料金を、当社が指定する支払方法により当社に支払うものとします。",
        "2.\t登録ユーザーが利用料金の支払を遅滞した場合、登録ユーザーは年14.6％の割合による遅延損害金を当社に支払うものとします。",
        "",
        "",
        "第7条（禁止事項）",
        "登録ユーザーは、本サービスの利用にあたり、以下の各号のいずれかに該当する行為または該当すると当社が判断する行為をしてはなりません。",
        "(1)\t法令に違反する行為または犯罪行為に関連する行為",
        "(2)\t当社、本サービスの他の利用者またはその他の第三者に対する詐欺または脅迫行為",
        "(3)\t公序良俗に反する行為",
        "(4)\t当社、本サービスの他の利用者またはその他の第三者の知的財産権、肖像権、プライバシーの権利、名誉、その他の権利または利益を侵害する行為",
        "(5)\t本サービスを通じ、以下に該当し、または該当すると当社が判断する情報を当社または本サービスの他の利用者に送信すること",
        "・過度に暴力的または残虐な表現を含む情報",
        "・コンピューター・ウィルスその他の有害なコンピューター・プログラムを含む情報",
        "・当社、本サービスの他の利用者またはその他の第三者の名誉または信用を毀損する表現を含む情報",
        "・過度にわいせつな表現を含む情報",
        "・差別を助長する表現を含む情報",
        "・自殺、自傷行為を助長する表現を含む情報",
        "・薬物の不適切な利用を助長する表現を含む情報",
        "・反社会的な表現を含む情報",
        "・チェーンメール等の第三者への情報の拡散を求める情報",
        "・他人に不快感を与える表現を含む情報",
        "(6)\t本サービスのネットワークまたはシステム等に過度な負荷をかける行為",
        "(7)\t当社が提供するソフトウェアその他のシステムに対するリバースエンジニアリングその他の解析行為",
        "(8)\t本サービスの運営を妨害するおそれのある行為",
        "(9)\t当社のネットワークまたはシステム等への不正アクセス",
        "(10)\t第三者に成りすます行為",
        "(11)\t本サービスの他の利用者のIDまたはパスワードを利用する行為",
        "(12)\t当社が事前に許諾しない本サービス上での宣伝、広告、勧誘、または営業行為",
        "(13)\t本サービスの他の利用者の情報の収集",
        "(14)\t当社、本サービスの他の利用者またはその他の第三者に不利益、損害、不快感を与える行為",
        "(15)\t当社ウェブサイト上で掲載する本サービス利用に関するルール（http://.......）に抵触する行為",
        "(16)\t反社会的勢力等への利益供与",
        "(17)\t面識のない異性との出会いを目的とした行為",
        "(18)\t前各号の行為を直接または間接に惹起し、または容易にする行為",
        "(19)\t前各号の行為を試みること",
        "(20)\tその他、当社が不適切と判断する行為",
        "",
        "",
        "第8条（本サービスの停止等）",
        "当社は、以下のいずれかに該当する場合には、登録ユーザーに事前に通知することなく、本サービスの全部または一部の提供を停止または中断することができるものとします。",
        "(1)\t本サービスに係るコンピューター・システムの点検または保守作業を緊急に行う場合",
        "(2)\tコンピューター、通信回線等の障害、誤操作、過度なアクセスの集中、不正アクセス、ハッキング等により本サービスの運営ができなくなった場合",
        "(3)\t地震、落雷、火災、風水害、停電、天災地変などの不可抗力により本サービスの運営ができなくなった場合",
        "(4)\tその他、当社が停止または中断を必要と判断した場合",
        "",
        "",
        "第9条（権利帰属）",
        "1.\t当社ウェブサイト及び本サービスに関する知的財産権は全て当社または当社にライセンスを許諾している者に帰属しており、本規約に基づく本サービスの利用許諾は、当社ウェブサイトまたは本サービスに関する当社または当社にライセンスを許諾している者の知的財産権の使用許諾を意味するものではありません。",
        "2.\t登録ユーザーは、投稿データについて、自らが投稿その他送信することについての適法な権利を有していること、及び投稿データが第三者の権利を侵害していないことについて、当社に対し表明し、保証するものとします。",
        "3.\t登録ユーザーは、投稿データについて、当社に対し、世界的、非独占的、無償、サブライセンス可能かつ譲渡可能な使用、複製、配布、派生著作物の作成、表示及び実行に関するライセンスを付与します。また、他の登録ユーザーに対しても、本サービスを利用して登録ユーザーが投稿その他送信した投稿データの使用、複製、配布、派生著作物を作成、表示及び実行することについての非独占的なライセンスを付与します。",
        "4.\t登録ユーザーは、当社及び当社から権利を承継しまたは許諾された者に対して著作者人格権を行使しないことに同意するものとします。",
        "",
        "",
        "第10条（登録抹消等）",
        "1.\t当社は、登録ユーザーが、以下の各号のいずれかの事由に該当する場合は、事前に通知または催告することなく、投稿データを削除もしくは非表示にし、当該登録ユーザーについて本サービスの利用を一時的に停止し、または登録ユーザーとしての登録を抹消することができます。",
        "(1)\t本規約のいずれかの条項に違反した場合",
        "(2)\t登録事項に虚偽の事実があることが判明した場合",
        "(3)\t支払停止もしくは支払不能となり、または破産手続開始、民事再生手続開始、会社更生手続開始、特別清算開始若しくはこれらに類する手続の開始の申立てがあった場合",
        "(4)\t【6】ヶ月以上本サービスの利用がない場合",
        "(5)\t当社からの問い合わせその他の回答を求める連絡に対して【30日】間以上応答がない場合",
        "(6)\t第3条第4項各号に該当する場合",
        "(7)\tその他、当社が本サービスの利用または登録ユーザーとしての登録の継続を適当でないと判断した場合",
        "2.\t前項各号のいずれかの事由に該当した場合、登録ユーザーは、当社に対して負っている債務の一切について当然に期限の利益を失い、直ちに当社に対して全ての債務の支払を行わなければなりません。",
        "",
        "",
        "第11条（退会）",
        "1.\t登録ユーザーは、当社所定の手続の完了により、本サービスから退会し、自己の登録ユーザーとしての登録を抹消することができます。",
        "2.\t退会にあたり、当社に対して負っている債務が有る場合は、登録ユーザーは、当社に対して負っている債務の一切について当然に期限の利益を失い、直ちに当社に対して全ての債務の支払を行わなければなりません。",
        "3.\t退会後の利用者情報の取扱いについては、第15条の規定に従うものとします。",
        "",
        "",
        "第12条（本サービスの内容の変更、終了）",
        "1.\t当社は、当社の都合により、本サービスの内容を変更し、または提供を終了することができます。",
        "2.\t当社が本サービスの提供を終了する場合、当社は登録ユーザーに事前に通知するものとします。",
        "",
        "",
        "第13条（保証の否認及び免責）",
        "1.\t当社は、本サービスが登録ユーザーの特定の目的に適合すること、期待する機能・商品的価値・正確性・有用性を有すること、登録ユーザーによる本サービスの利用が登録ユーザーに適用のある法令または業界団体の内部規則等に適合すること、継続的に利用できること、及び不具合が生じないことについて、明示又は黙示を問わず何ら保証するものではありません。",
        "2.\t当社は、本サービスに関して登録ユーザーが被った損害につき、過去【12ヶ月】間に登録ユーザーが当社に支払った対価の金額を超えて賠償する責任を負わないものとし、また、付随的損害、間接損害、特別損害、将来の損害及び逸失利益にかかる損害については、賠償する責任を負わないものとします。",
        "3.\t本サービスまたは当社ウェブサイトに関連して登録ユーザーと他の登録ユーザーまたは第三者との間において生じた取引、連絡、紛争等については、登録ユーザーが自己の責任によって解決するものとします。",
        "",
        "",
        "第14条（秘密保持）",
        "登録ユーザーは、本サービスに関連して当社が登録ユーザーに対して秘密に取扱うことを求めて開示した非公知の情報について、当社の事前の書面による承諾がある場合を除き、秘密に取扱うものとします。",
        "",
        "",
        "第15条（利用者情報の取扱い）",
        "1.\t当社による登録ユーザーの利用者情報の取扱いについては、別途当社プライバシーポリシー（http://.......）の定めによるものとし、登録ユーザーはこのプライバシーポリシーに従って当社が登録ユーザーの利用者情報を取扱うことについて同意するものとします。",
        "2.\t当社は、登録ユーザーが当社に提供した情報、データ等を、個人を特定できない形での統計的な情報として、当社の裁量で、利用及び公開することができるものとし、登録ユーザーはこれに異議を唱えないものとします。",
        "",
        "",
        "第16条（本規約等の変更）",
        "当社は、当社が必要と認めた場合は、本規約を変更できるものとします。本規約を変更する場合、変更後の本規約の施行時期及び内容を当社ウェブサイト上での掲示その他の適切な方法により周知し、または登録ユーザーに通知します。但し、法令上登録ユーザーの同意が必要となるような内容の変更の場合は、当社所定の方法で登録ユーザーの同意を得るものとします。",
        "",
        "",
        "第17条（連絡／通知）",
        "1.\t本サービスに関する問い合わせその他登録ユーザーから当社に対する連絡または通知、及び本規約の変更に関する通知その他当社から登録ユーザーに対する連絡または通知は、当社の定める方法で行うものとします。",
        "2.\t当社が登録事項に含まれるメールアドレスその他の連絡先に連絡または通知を行った場合、登録ユーザーは当該連絡または通知を受領したものとみなします。",
        "",
        "",
        "第18条（サービス利用契約上の地位の譲渡等）",
        "1.\t登録ユーザーは、当社の書面による事前の承諾なく、利用契約上の地位または本規約に基づく権利もしくは義務につき、第三者に対し、譲渡、移転、担保設定、その他の処分をすることはできません。",
        "2.\t当社は本サービスにかかる事業を他社に譲渡した場合には、当該事業譲渡に伴い利用契約上の地位、本規約に基づく権利及び義務並びに登録ユーザーの登録事項その他の顧客情報を当該事業譲渡の譲受人に譲渡することができるものとし、登録ユーザーは、かかる譲渡につき本項において予め同意したものとします。なお、本項に定める事業譲渡には、通常の事業譲渡のみならず、会社分割その他事業が移転するあらゆる場合を含むものとします。",
        "",
        "",
        "第19条（分離可能性）",
        "本規約のいずれかの条項またはその一部が、消費者契約法その他の法令等により無効または執行不能と判断された場合であっても、本規約の残りの規定及び一部が無効または執行不能と判断された規定の残りの部分は、継続して完全に効力を有するものとします。",
        "",
        "",
        "第20条（準拠法及び管轄裁判所）",
        "1.\t本規約及びサービス利用契約の準拠法は日本法とします。",
        "2.\t本規約またはサービス利用契約に起因し、または関連する一切の紛争については、東京地方裁判所を第一審の専属的合意管轄裁判所とします。",
        "",
        "",
        "【●年●月●日制定】",
        "",
        "【●年●月●日改定】",
        "\f"
      ]
    },
    {
      "title": "firebase と admob のプライバシーポリシー",
      "created": 1580543431,
      "updated": 1580623083,
      "id": "5e352dc2139fae00173685ed",
      "lines": [
        "firebase と admob のプライバシーポリシー",
        "[https://qiita.com/Nkzn/items/326ad03e358b5d3fbafc 広告IDを使っている覚えがないのにGoogle Playからポリシー違反を通告されたけどFirebaseのせいだった - Qiita]",
        "",
        "",
        "[https://www.snk-corp.co.jp/guide/policy/ プライバシーポリシー｜株式会社SNK]　の引用　",
        ">10. Google Analyticsの利用について",
        "> ・ウェブサイト",
        "> 当社が運営するウェブサイトでは利用状況を把握するためにGoogle Analyticsによって提供されるサービスを利用しております。Google Analyticsではクッキー（cookie）を使用し個人を特定する情報を含まずにデータを収集します。Google Analyticsの利用により収集されたデータは、Google社のプライバシーポリシーに基づいて管理されます。",
        "> ",
        "> ・アプリケーション",
        "> 当社で配信するアプリには、サービスの利用状況を把握するためにGoogle Analyticsを利用しているものがあります。Google Analyticsの利用により収集されたデータは、Google社のプライバシーポリシーに基づいて管理されます。",
        "> ",
        "> Googleプライバシーポリシーについては以下をご覧ください。",
        "> ",
        "> Googleプライバシーポリシー",
        "> http://www.google.com/intl/ja/policies/privacy/",
        "> ",
        "> 11. 情報収集モジュール",
        "> 当社で配信するアプリでは、広告配信を目的として以下の広告配信事業者がご利用者の情報を自動取得する場合がございます。取得する情報、利用目的、第三者への提供等につきましては、以下の広告配信事業者のアプリケーション・プライバシーポリシーのリンクよりご確認ください。",
        "> ",
        "> AdMob（Google Inc.）",
        "> http://www.google.com/intl/ja/policies/technologies/ads/",
        "",
        "",
        "[https://qiita.com/agajo/items/e886afb7f5408141d1fc AdMob, Firebase付きAndroidアプリのプライバシーポリシー、こうしてみました(要経過観察) - Qiita] から",
        ">広告について",
        "> 本アプリでは、広告配信ツールとしてAdMob(Google Inc.)を使用しており、AdMobがご利用者の情報を自動取得する場合がございます。取得する情報、利用目的、第三者への提供等につきましては、以下の広告配信事業者のアプリケーション・プライバシーポリシーのリンクよりご確認ください。",
        "> ",
        "> Google 広告に関するポリシー",
        "> https://policies.google.com/technologies/ads?hl=ja",
        "> ",
        "> 利用状況解析ついて",
        "> 本アプリでは、今後の開発の参考とするため、アプリの利用状況データを収集するツールとしてFirebase(Google Inc.)を使用しており、Firebaseがご利用者の情報を自動取得する場合がございます。取得する情報、利用目的、第三者への提供等につきましては、以下のGoogleプライバシーポリシーのリンクよりご確認ください。",
        "> ",
        "> Google プライバシーポリシー",
        "> https://policies.google.com/privacy?hl=ja",
        "",
        "",
        "こんなかんじに書き換える",
        "本サービスには以下の情報収集モジュールが組み込まれています。これに伴い、以下のとおり情報収集モジュール提供者（日本国外にある者を含みます。）への利用者情報の提供を行います。",
        "",
        "広告モジュール",
        "当サービスでは、広告配信ツールとしてAdMob(Google Inc.)を使用しており、AdMobがユーザーの情報を自動取得する場合があります。取得する情報、利用目的、第三者への提供等は、以下の広告配信事業者のアプリケーション・プライバシーポリシーのリンクよりご確認ください。",
        "AdMob（Google Inc.）",
        "http://www.google.com/intl/ja/policies/technologies/ads/",
        "",
        "利用状況解析モジュール",
        "当サービスでは、サービス改善のため、アプリの利用状況データを収集するツールとしてFirebase(Google Inc.)を使用しており、Firebaseがご利用者の情報を自動取得する場合があります。取得する情報、利用目的、第三者への提供等は、以下のGoogleプライバシーポリシーのリンクよりご確認ください。",
        "Google プライバシーポリシー",
        "https://policies.google.com/privacy?hl=ja"
      ]
    },
    {
      "title": "googlespletsheetラッパー",
      "created": 1580729933,
      "updated": 1580730279,
      "id": "5e38064890fa3c001782305b",
      "lines": [
        "googlespletsheetラッパー",
        "　flutter web",
        "　flutter web ホスティング",
        "　アクセス速度は？",
        ""
      ]
    },
    {
      "title": "アカウント管理",
      "created": 1581037160,
      "updated": 1581042150,
      "id": "5e3cb663b76b58001761d3c3",
      "lines": [
        "アカウント管理",
        "table:アカウント",
        " 名前\t用途\t端末\t備考",
        " ampersand.dev\t開発用\tmac mini ,iphone6\t",
        " ampersand.app\t本番用\tipad\t+supportでサポートアドレス",
        " and0nagai.r\tプライベート用\tandroid\t",
        ""
      ]
    },
    {
      "title": "後で消す",
      "created": 1581413156,
      "updated": 1581413156,
      "id": "5e4273215ebf1600172d1c97",
      "lines": [
        "後で消す",
        "組み合わせタイマー のログイン用メールアドレスが変更されました",
        "",
        "メッセージ",
        "%DISPLAY_NAME% 様",
        "",
        "組み合わせタイマー のログイン用メールアドレスが %NEW_EMAIL% に変更されました。",
        "",
        "メールの変更を依頼していない場合は、次のリンクをクリックして、ログイン用メールアドレスをリセットしてください。",
        "",
        "https://grouping-timer.firebaseapp.com/__/auth/action?mode=<action>&oobCode=<code>",
        "",
        "よろしくお願いいたします。",
        "",
        "組み合わせタイマー チーム"
      ]
    },
    {
      "title": "androidの環境を本番と開発に分離する",
      "created": 1581414125,
      "updated": 1581465368,
      "id": "5e4276ea64f25d00175b28ff",
      "lines": [
        "androidの環境を本番と開発に分離する",
        "　本番環境",
        "　 `android/app/src/release`を作成して、",
        "　 配下に`google-service.json`を配置",
        "　開発環境",
        "　 `android/app/src/debug`に`google-service.json`を配置",
        "",
        "　releaseとdebugはデフォルトで用意されているものなので、それ以外の用途を用意したい場合は、色々設定する必要がある",
        "",
        " 終わったら同期しておく",
        "",
        " debug",
        "　　>モジュールレベルの build.gradle ファイルの android ブロック内で、ビルドタイプを作成して設定できます。新しいモジュールを作成するときは、Android Studio がデバッグおよびリリース ビルドタイプを自動的に作成します。debug ビルドタイプはビルド設定ファイルに表示されませんが、Android Studio では debuggable true で debug ビルドタイプが設定されます。これにより、安全な Android デバイスでアプリをデバッグし、汎用デバッグ キーストアで APK 署名を設定できるようになります。",
        "　　[https://developer.android.com/studio/build/build-variants.html?hl=ja ビルド バリアントを設定する  |  Android デベロッパー  |  Android Developers]",
        "",
        " [このパッケージ名と SHA-1 の組み合わせを持つ OAuth2 クライアントは、別のプロジェクトに既に存在します]",
        ""
      ]
    },
    {
      "title": "このパッケージ名と SHA-1 の組み合わせを持つ OAuth2 クライアントは、別のプロジェクトに既に存在します",
      "created": 1581414148,
      "updated": 1581414160,
      "id": "5e4276f6757e28001751e75f",
      "lines": [
        "このパッケージ名と SHA-1 の組み合わせを持つ OAuth2 クライアントは、別のプロジェクトに既に存在します",
        "  android ",
        "  https://support.google.com/firebase/answer/6401008?hl=ja",
        "　 firebase",
        ""
      ]
    },
    {
      "title": "iosの環境を本番と開発に分離する",
      "created": 1581414183,
      "updated": 1581472305,
      "id": "5e42772147a4600017fa552b",
      "lines": [
        "iosの環境を本番と開発に分離する",
        " すでにfirebase環境が構築されている前提",
        "",
        "　GoogleService-Info.plistをダウンロードする。",
        "　finderから`プロジェクトフォルダ/ios/Runner/GoogleService-Info.plist`をリネームする。",
        "  → `プロジェクトフォルダ/ios/Runner/GoogleService-Info-dev.plist`",
        "  → `プロジェクトフォルダ/ios/Runner/GoogleService-Info-release.plist`",
        " ドラッグアンドドロップでxcodeの同じフォルダに上記２ファイルを放り込む",
        " 　こうすることで、xcode上で反映される。これしないと反映されない。",
        " 　パスで名前を確認すること",
        " [https://gyazo.com/a1d45203c12bb7eab34addb8868b0f1c]",
        " `new run script pharse`して、一番下に新しくできたのを`run script`の真下に動かす。",
        " リネームする",
        "  `Choose Firebase Environment`",
        "  以下を書く",
        "   code:zsh",
        "    # Type a script or drag a script file from your workspace to insert its path.",
        "    rm -rf \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist\"",
        "    ",
        "    echo \"★★★\"",
        "    echo \"-----${CONFIGURATION}-----\"",
        "    echo \"-----${SRCROOT}-----\"",
        "    echo \"-----${BUILT_PRODUCTS_DIR}-----\"",
        "    echo \"-----${PRODUCT_NAME}-----\"",
        "    ",
        "    if [ \"${CONFIGURATION}\" = \"Debug\" ]  ; then",
        "      cp \"$SRCROOT/Runner/GoogleService-Info-dev.plist\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist\"",
        "      echo \"Development GoogleService-Info copied.\"",
        "    elif [ \"${CONFIGURATION}\" = \"Release\" ] ; then",
        "      cp \"$SRCROOT/Runner/GoogleService-Info-release.plist\" \"${BUILT_PRODUCTS_DIR}/${PRODUCT_NAME}.app/GoogleService-Info.plist\"",
        "      echo \"Release GoogleService-Info copied.\"",
        "    fi",
        "    ",
        " 完了",
        "",
        "　確認するには、xcode上で実行してログを見てみる",
        "　　実行するには右三角アイコン `iphone 11 pro`に合わせる",
        "　　ビルド完了後、ログ画面上で★で検索するとすぐ見える",
        "　　一番右のアイコンがログ",
        "　　[https://gyazo.com/8b3b157eb7179ca53d2b3f6f8c125ad3]",
        "",
        ""
      ]
    },
    {
      "title": "firebaseアプリ作るメモ",
      "created": 1581414325,
      "updated": 1581414359,
      "id": "5e4277b2743dc10017ab6525",
      "lines": [
        "firebaseアプリ作るメモ",
        "　[https://gyazo.com/67ba6dd72f1a0956b4563b7736ee5ae8]",
        "　",
        ""
      ]
    },
    {
      "title": "アプリをつくる手順v2",
      "created": 1581415980,
      "updated": 1584234542,
      "id": "5e427e295a75430017d3c270",
      "lines": [
        "アプリをつくる手順v2",
        " [アプリをつくる手順 Ver3]",
        "",
        "",
        "　アプリを作る",
        "　 [inteliJ IDEA からプロジェクトを作成]",
        "　 [中華フォントから日本語フォントに変更する]",
        "　 flutter upgrade",
        "　　[静的解析の追加]",
        "　　[ディレクトリの作成]",
        "  [D8: Cannot fit requested classes in a single dex file]の対策をする",
        "  [.javaは非推奨のAPIを使用またはオーバーライドしています。]の対策をする",
        "  このタイミングで、アプリをandroidとiosで実行して起動するか確かめる",
        "  　androidはSyncを忘れずに、うまく行かない場合は`flutter clean`",
        "",
        " 毎日自動的にgithubへpushする",
        " 　[githubでプライベートプロジェクトを作る]",
        "  [毎日自動的にpushする]",
        "  　git する `github環境完了`",
        "",
        " firebaseの初期設定",
        "  [BundleIdentifierの変更]",
        "  [firebaseプロジェクトの作成]",
        "  [Setting]",
        "  [androidアプリにFirebaseを追加]",
        "  　本番環境から先に作成すること。(SHA-1が重複できないため)",
        "  [iosアプリにFirebaseを追加]",
        "　　ここまでできたらgitするといい",
        "",
        " 開発環境と本番環境を分離する",
        " 　[main関数にデバックモードかかリリースモードかを確認できるようにしておく]",
        " 　　チェックディレクトリいれる",
        "　 [開発用のfirebaseプロジェクトを作成]する",
        "　　 [Setting]",
        "　　 [androidアプリにFirebaseを追加]",
        "　　 　debug用署名はこの段階では入力しない。（プロジェクトで重複できないため）",
        "　　 [iosアプリにFirebaseを追加]",
        "　 [androidの環境を本番と開発に分離する]",
        "　 [iosの環境を本番と開発に分離する]",
        "　 [androidのリリースビルド動作確認]",
        "　 [iosのリリースビルド動作確認]",
        "　　git する `開発環境と本番環境を分離する完了`",
        "",
        "　firestoreの設定",
        "　 [firesotreの動作確認設定]",
        "　 [androidのリリースビルド動作確認]",
        "　 [iosのリリースビルド動作確認]",
        "　　`git commit -m 'firestore動作確認終了'`",
        "",
        "　auth設定",
        "　 メールアドレス",
        "　  [Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies.]が出た場合",
        "　　 [authの設定]",
        "　　 [メールアドレスの動作確認]",
        "　　 リリースビルドも確認する",
        "　　　`git commit -m 'authメアド動作確認終了'`",
        "　　google sign in ",
        "　　 [google sign in設定]",
        "　　 [androidのgoodle sign in 本番と開発を分けている場合]",
        "　　 [iosのgoogle sign in設定]",
        "　　 [iosのauthの設定 開発と本番を分ける場合]",
        "　　 リリースビルドも確認する",
        "　　  `flutter build apk && flutter install -d 8A1X0K39B && flutter build ios && flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3`",
        "　　　`git commit -m 'authgoogole動作確認終了'`",
        "　　apple sign in",
        "   [apple sign inの設定]",
        "",
        " crashlytics",
        " 　[Crashlyticsの設定]",
        " 　画面つくる",
        "",
        "　analysis",
        "　　[https://pub.dev/packages/firebase_analytics#-readme-tab- firebase_analytics | Flutter Package]",
        "",
        "　admob",
        "　 [admobの設定]",
        "　　[https://pub.dev/packages/admob_flutter admob_flutter | Flutter Package]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " リリース準備",
        " 　[アイコンを作る]",
        "",
        "　[リリースビルド]",
        "　[Google Play Storeでアプリを公開する]",
        " [App Storeでアプリを公開する]",
        "",
        "　[アプリのアップデート - flutter -]",
        "　",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " 　[firebase色々] <= 参考にする",
        " [androidのみ長ったらしいログがでるとき]",
        "参考",
        "[リリース準備]",
        "　  flutter build apk && flutter build ios ",
        ""
      ]
    },
    {
      "title": "inteliJ IDEA からプロジェクトを作成",
      "created": 1581416056,
      "updated": 1584498989,
      "id": "5e427e6e17a887001764cd16",
      "lines": [
        "inteliJ IDEA からプロジェクトを作成",
        " `create new project`",
        "　 [https://gyazo.com/0301822bdd887c929f9a8c78cc229703]",
        "",
        "",
        " [https://gyazo.com/96f2414a8894a5b8f3ea42571d216e7a]",
        "",
        "",
        "table: ",
        " poject name\t〇〇_〇〇 で〇〇は小文字",
        " organization\tcom.ampersand.〇〇.〇〇",
        "",
        " `Kotlin`,`swift`",
        "　[アプリのパッケージ名の名付け方]を見てorganizationをつける",
        " [https://gyazo.com/c6645779fe53cb3073900f4a4057ad16]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "firebaseプロジェクトの作成",
      "created": 1581417796,
      "updated": 1581464658,
      "id": "5e42850edbc6e80017713a2a",
      "lines": [
        "firebaseプロジェクトの作成",
        "",
        "　ideaのプロジェクト名を踏襲する",
        "　　[https://gyazo.com/3d29d52a206f2e7b8a0fd00e1891776a]",
        "",
        "　有効にする",
        "　　[https://gyazo.com/bcfce6dc63ff351c918fe1d0e7478920]",
        "",
        "",
        "　アカンとを作成して作成",
        "　　[https://gyazo.com/330bf1994683b741001279d03422f1c1]",
        "",
        "　続行",
        " 　[https://gyazo.com/91a877099bcf26cd947c4fd2e0ea5f1c]",
        "",
        "",
        " ",
        ""
      ]
    },
    {
      "title": "静的解析の追加",
      "created": 1581418225,
      "updated": 1586319587,
      "id": "5e4286eb8cee03001791a6a5",
      "lines": [
        "静的解析の追加",
        "",
        "　プロジェクトのルートに`analysis_options.yaml`ファイルを配置する。",
        "　以下のフォルダから最新版を置く",
        "　 [https://github.com/tenhobi/effective_dart/tree/master/lib effective_dart/lib at master · tenhobi/effective_dart]",
        "",
        "",
        "code:zsh",
        " touch ./analysis_options.yaml",
        "",
        "",
        "code:dart",
        "     #- package_api_docs # prefer # ?",
        "     #- public_member_api_docs # prefer # ?",
        " ",
        "",
        " ここはコメントアウトしている",
        ""
      ]
    },
    {
      "title": "ディレクトリの作成",
      "created": 1581418389,
      "updated": 1586319782,
      "id": "5e42876a0eb4580017430fd0",
      "lines": [
        "ディレクトリの作成",
        "フォルダ構成",
        "",
        " lib配下に以下を作る",
        "　　configs",
        "　　 設定ファイルやリスト初期値など",
        "　　models",
        "　　 クラス定義",
        "  provider",
        "   ロジックも含む",
        "  helpers",
        "   components",
        "   functions",
        "  ui",
        "  　pages",
        "   　aaa_page.dart",
        "   components",
        "    aaa",
        "     dialog.dart",
        "     form.dart",
        "",
        "",
        "code:zsh",
        " mkdir ./assets",
        " mkdir ./assets/images && mkdir ./assets/fonts",
        " ",
        " cd ./lib",
        " mkdir ./configs ./models ./provider ./helpers ./ui ./ui/pages ./ui/components",
        " cd ../",
        "",
        "",
        "",
        "　参考",
        "　 [ファイル分割]",
        "　 [https://sudame.hatenablog.com/entry/2019/04/24/235702 FlutterのBLoCパターンについて得た知見 - すだめブログ]",
        "　 [https://qiita.com/tanakeiQ/items/2c4a7fcb8e95b9aa55ad 管理しやすい(と思う)Flutterプロジェクトのディレクトリ構造 - Qiita]",
        "　 [https://issus.me/projects/1520/issues/35 Flutterプロジェクトのディレクトリ構成とレイヤー案 | Issus(イシューズ)]",
        " プロジェクト参考",
        " 　[https://github.com/flutter/samples/tree/master/provider_shopper samples/provider_shopper at master · flutter/samples]",
        " 　[https://scrapbox.io/ampersand/%E3%83%87%E3%82%A3%E3%83%AC%E3%82%AF%E3%83%88%E3%83%AA%E6%A7%8B%E6%88%90 ディレクトリ構成 - 全般]",
        " 　"
      ]
    },
    {
      "title": "D8: Cannot fit requested classes in a single dex file",
      "created": 1581451199,
      "updated": 1581461333,
      "id": "5e4307bc743dc10017abb937",
      "lines": [
        "D8: Cannot fit requested classes in a single dex file",
        "flutter android",
        "[https://develop.hateblo.jp/entry/android-single-dex-file 【Android】「Cannot fit requested classes in a single dex file.」のエラーの対処法 - テクノモンキーのアプリ開発日記]",
        "",
        " `android/app/build.gradle`に`multiDexEnabled true`を追加する",
        " 　code:zsh",
        " 　 android {",
        "       defaultConfig {",
        "           minSdkVersion 16 ",
        "           targetSdkVersion 28",
        "           multiDexEnabled true // 追加",
        "       }",
        "   }",
        "",
        "　エラー・メッセージ",
        "code:dart",
        " Launching lib/main.dart on Pixel 3 in debug mode...",
        " Running Gradle task 'assembleDebug'...",
        " D8: Cannot fit requested classes in a single dex file (# methods: 104690 > 65536)",
        " com.android.builder.dexing.DexArchiveMergerException: Error while merging dex archives: ",
        " The number of method references in a .dex file cannot exceed 64K.",
        " Learn how to resolve this issue at https://developer.android.com/tools/building/multidex.html",
        " \tat com.android.builder.dexing.D8DexArchiveMerger.getExceptionToRethrow(D8DexArchiveMerger.java:131)",
        " \tat com.android.builder.dexing.D8DexArchiveMerger.mergeDexArchives(D8DexArchiveMerger.java:118)",
        " \tat com.android.build.gradle.internal.transforms.DexMergerTransformCallable.call(DexMergerTransformCallable.java:102)",
        " \tat com.android.build.gradle.internal.tasks.DexMergingTaskRunnable.run(DexMergingTask.kt:444)",
        " \tat com.android.build.gradle.internal.tasks.Workers$ActionFacade.run(Workers.kt:335)",
        " \tat org.gradle.workers.internal.AdapterWorkAction.execute(AdapterWorkAction.java:50)",
        " \tat org.gradle.workers.internal.DefaultWorkerServer.execute(DefaultWorkerServer.java:47)",
        " \tat org.gradle.workers.internal.NoIsolationWorkerFactory$1$1$1.create(NoIsolationWorkerFactory.java:65)",
        " \tat org.gradle.workers.internal.NoIsolationWorkerFactory$1$1$1.create(NoIsolationWorkerFactory.java:61)",
        " \tat org.gradle.internal.classloader.ClassLoaderUtils.executeInClassloader(ClassLoaderUtils.java:98)",
        " \tat org.gradle.workers.internal.NoIsolationWorkerFactory$1$1.execute(NoIsolationWorkerFactory.java:61)",
        " \tat org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:44)",
        " \tat org.gradle.workers.internal.AbstractWorker$1.call(AbstractWorker.java:41)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)",
        " \tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)",
        " \tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)",
        " \tat org.gradle.workers.internal.AbstractWorker.executeWrappedInBuildOperation(AbstractWorker.java:41)",
        " \tat org.gradle.workers.internal.NoIsolationWorkerFactory$1.execute(NoIsolationWorkerFactory.java:56)",
        " \tat org.gradle.workers.internal.DefaultWorkerExecutor$3.call(DefaultWorkerExecutor.java:215)",
        " \tat org.gradle.workers.internal.DefaultWorkerExecutor$3.call(DefaultWorkerExecutor.java:210)",
        " \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
        " \tat org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runExecution(DefaultConditionalExecutionQueue.java:215)",
        " \tat org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.runBatch(DefaultConditionalExecutionQueue.java:164)",
        " \tat org.gradle.internal.work.DefaultConditionalExecutionQueue$ExecutionRunner.run(DefaultConditionalExecutionQueue.java:131)",
        " \tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)",
        " \tat java.util.concurrent.FutureTask.run(FutureTask.java:266)",
        " \tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)",
        " \tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)",
        " \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)",
        " \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)",
        " \tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)",
        " \tat java.lang.Thread.run(Thread.java:748)",
        " Caused by: com.android.tools.r8.CompilationFailedException: Compilation failed to complete",
        " \tat com.android.tools.r8.utils.t.a(:55)",
        " \tat com.android.tools.r8.D8.run(:11)",
        " \tat com.android.builder.dexing.D8DexArchiveMerger.mergeDexArchives(D8DexArchiveMerger.java:116)",
        " \t... 34 more",
        " Caused by: com.android.tools.r8.utils.AbortException: Error: null, Cannot fit requested classes in a single dex file (# methods: 104690 > 65536)",
        " \tat com.android.tools.r8.utils.Reporter.a(:21)",
        " \tat com.android.tools.r8.utils.Reporter.a(:7)",
        " \tat com.android.tools.r8.dex.VirtualFile.a(:33)",
        " \tat com.android.tools.r8.dex.VirtualFile$h.a(:5)",
        " \tat com.android.tools.r8.dex.ApplicationWriter.a(:13)",
        " \tat com.android.tools.r8.dex.ApplicationWriter.write(:35)",
        " \tat com.android.tools.r8.D8.d(:44)",
        " \tat com.android.tools.r8.D8.b(:1)",
        " \tat com.android.tools.r8.utils.t.a(:23)",
        " \t... 36 more",
        " ",
        ""
      ]
    },
    {
      "title": "アプリをつくる手順",
      "created": 1581451869,
      "updated": 1586933966,
      "id": "5e430a59bcdfd00017e8cb11",
      "lines": [
        "アプリをつくる手順",
        " [アプリをつくる手順 Ver3]",
        ""
      ]
    },
    {
      "title": "androidアプリにFirebaseを追加",
      "created": 1581452133,
      "updated": 1581592314,
      "id": "5e430b60166a150017090e11",
      "lines": [
        "androidアプリにFirebaseを追加",
        " 　アプリの登録",
        " 　　[Androidのパッケージ名]",
        " 　　　android -> app -> src -> main -> AndroidManifest.xmlの2行目`com.example.~`",
        " 　　アプリのニックネーム",
        " 　　　自由に　省略しても良い",
        " 　　デバック用署名証明書 SHA-1",
        " 　　　ideaのコンソール上から実行",
        " 　　 `keytool -list -v -alias androiddebugkey -keystore ~/.android/debug.keystore`",
        " ",
        " 　設定ファイルのダウンロード",
        " 　　`〇〇/android/app/google-services.json`に置く",
        " ",
        "  FirebaseSDKの追加",
        "  　`〇〇/android/build.gradle`",
        "  　　[https://gyazo.com/1fc6cf3c6988434a73b24a0ffa02b4d1]",
        "  　 `ext.kotlin_version = '1.2.71'` => `ext.kotlin_version = '1.3.41'`",
        "  　  これはIDEAが指定する数値でよい",
        "  　 `classpath 'com.google.gms:google-services:4.3.2'`追加",
        " ",
        " 　　`〇〇/android/app/build.gradle`",
        "    [https://gyazo.com/8dee091274de0f85539b52d8aa8afc64]",
        " 　　　以下の２つを追記",
        "   　 `implementation 'com.google.firebase:firebase-analytics:17.2.0'`",
        "   　 `apply plugin: 'com.google.gms.google-services'`",
        "  ",
        " ",
        "   android studio で同期する",
        "   　象さんのボタン",
        "   　[https://gyazo.com/8d3797b329c3b0c22f003d14d859db7a]",
        "",
        " 　アプリを実行してインストールを確認",
        " 　　スキップする",
        "",
        ""
      ]
    },
    {
      "title": "Androidのパッケージ名",
      "created": 1581452285,
      "updated": 1581452309,
      "id": "5e430bfcdc0762001780eb35",
      "lines": [
        "Androidのパッケージ名",
        "[https://developer.android.com/studio/build/application-id?hl=ja アプリケーション ID の設定  |  Android デベロッパー  |  Android Developers]",
        "",
        ">すべての Android アプリには、com.example.myapp などの Java パッケージ名に似た一意のアプリケーション ID があります。この ID によってアプリがデバイスと Google Play ストアで一意に識別されます。アプリの新しいバージョンをアップロードする場合、アプリケーション ID（と署名した証明書）は、元の APK と同じにする必要があります。アプリケーション ID が変更されると、Google Play ストアはこの APK をまったく別のアプリとして処理します。そのため、アプリの公開後はアプリケーション ID を変更しないでください。",
        "",
        ">アプリケーション ID は、下記のようにモジュールの build.gradle ファイル内の applicationId プロパティで定義されます。",
        ""
      ]
    },
    {
      "title": "Setting",
      "created": 1581452689,
      "updated": 1581452797,
      "id": "5e430d8ebb0b490017a0fd6c",
      "lines": [
        "Setting",
        "firebase",
        "",
        "　公開名の変更",
        "　 [https://gyazo.com/1e66aab6dd9c6a1d7353b3068ae9a48c]",
        "",
        "",
        "　サポートメールの設定",
        "　　設定する",
        ""
      ]
    },
    {
      "title": "iosシュミレータを上げたときにクラッシュする",
      "created": 1581454100,
      "updated": 1581454150,
      "id": "5e431312bb0b490017a0fd85",
      "lines": [
        "iosシュミレータを上げたときにクラッシュする",
        " flutter にfireabaseが入っているけど、iosにfirebaseの設定ファイルが正しく設定されていないのが原因",
        " ",
        "",
        "code:darr",
        " Launching lib/main.dart on iPhone 11 Pro Max in debug mode...",
        " Running pod install...",
        " Running Xcode build...",
        " Xcode build done.                                           106.0s",
        " \tpath: satisfied (Path is satisfied), interface: en1",
        " Configuring the default Firebase app...",
        " *** First throw call stack:",
        " (",
        " \t0   CoreFoundation                      0x00007fff23c7127e __exceptionPreprocess + 350",
        " \t1   libobjc.A.dylib                     0x00007fff513fbb20 objc_exception_throw + 48",
        " \t2   CoreFoundation                      0x00007fff23c710bc +[NSException raise:format:] + 188",
        " \t3   Runner                              0x000000010fa98e2a +[FIRApp configure] + 138",
        " \t4   Runner                              0x000000011010e966 -[FLTCloudFirestorePlugin init] + 214",
        " \t5   Runner                              0x000000011010e764 +[FLTCloudFirestorePlugin registerWithRegistrar:] + 292",
        " \t6   Runner                              0x000000010fa3a0e5 +[GeneratedPluginRegistrant registerWithRegistry:] + 309",
        " \t7   Runner                        <…>",
        " This is taking longer than expected...",
        " ",
        ""
      ]
    },
    {
      "title": "iosアプリにFirebaseを追加",
      "created": 1581454203,
      "updated": 1586323125,
      "id": "5e43137511f408001751f847",
      "lines": [
        "iosアプリにFirebaseを追加",
        "iosアプリにFirebaseを追加",
        "　アプリの登録",
        "　　プロジェクトフォルダ上で`open ios/Runner.xcworkspace`",
        "　　[https://gyazo.com/c8bc066b690beec4cb51ed38b603a107]",
        "",
        "　設定ファイルのダウンロード",
        "　　`ios/Runner/Runner/GoogleService-info.plist`に[* ドラッグアンドドロップ]でいれる",
        "　　　右のfile pathで/ios/Runner/GoogleService-Info.plistになっていることを確認",
        "　　　[* ダウンロードフォルダになっている可能性あり]",
        "　　[https://gyazo.com/036f93044b64add044ae7f297e465eb5]",
        "",
        "",
        "",
        " [https://pub.dev/packages/cloud_firestore#-readme-tab- cloud_firestore | Flutter Package]の手順には、firebase SDKの追加と初期化コードの追加をするなと書いてあるので、しないこと",
        "",
        "",
        " ↓ ↓ ↓ ↓ ↓  省略 ↓ ↓ ↓ ↓ ↓ ",
        "",
        "　[- firebase SDKの追加]",
        "　　code:zsh",
        "　　 cd ios",
        "　　 brew install cocoapods",
        "　　 pod setup",
        "",
        "",
        " [- 初期化コードの追加]",
        "  [- アプリの起動時に Firebase を接続するには、メインの AppDelegate クラスに以下の初期化コードを追加します。]",
        "  [- 注意点]",
        "  　`FirebaseApp.configure()`[- を追加ではなく、]`if FirebaseApp.app() == nil FirebaseApp.configure()} `[- を追加する]",
        "  　[- これがないと、２重呼び出ししてしまい、エラーで落ちてしまう]",
        " 　code:swift",
        " 　 省略",
        "   ",
        "   ",
        ""
      ]
    },
    {
      "title": "開発用のfirebaseプロジェクトを作成",
      "created": 1581464776,
      "updated": 1581464818,
      "id": "5e433cc32b3b0a001770b7d4",
      "lines": [
        "開発用のfirebaseプロジェクトを作成",
        "[firebaseプロジェクトの作成]を参考にして、作成する",
        "　　名前に-devを加えるだけ、ほかはおなじ",
        "   [https://gyazo.com/b30eac8f0780dec7c1a12f3317f9a4b4]",
        ""
      ]
    },
    {
      "title": "main関数にデバックモードかかリリースモードかを確認できるようにしておく",
      "created": 1581465888,
      "updated": 1581466178,
      "id": "5e43411e0eb45800174380cb",
      "lines": [
        "main関数にデバックモードかかリリースモードかを確認できるようにしておく",
        "[https://medium.com/@star_zero/flutter%E3%81%A7debug%E5%AE%9F%E8%A1%8C%E3%82%92%E5%88%A4%E5%AE%9A%E3%81%99%E3%82%8B-769d92fa682c FlutterでDebug実行を判定する - Kenji Abe - Medium]",
        "",
        " code:dart",
        "  bool isRelease() {",
        "    bool _bool;",
        "    bool.fromEnvironment('dart.vm.product') ? _bool = true : _bool = false;",
        "    return _bool;",
        "  }",
        "",
        "",
        "code:dart",
        " import 'package:flutter/material.dart';",
        " import 'package:cloud_firestore/cloud_firestore.dart';",
        " ",
        " void main() => runApp(MyApp());",
        " ",
        " bool isRelease() {",
        "   bool _bool;",
        "   bool.fromEnvironment('dart.vm.product') ? _bool = true : _bool = false;",
        "   return _bool;",
        " }",
        " ",
        " class MyApp extends StatelessWidget {",
        "   @override",
        "   Widget build(BuildContext context) {",
        "     return MaterialApp(",
        "       title: 'Flutter Demo',",
        "       theme: ThemeData(",
        "         primarySwatch: Colors.blue,",
        "       ),",
        "       home: MyHomePage(title: 'Flutter Demo Home Page'),",
        "     );",
        "   }",
        " }",
        " ",
        " class MyHomePage extends StatefulWidget {",
        "   MyHomePage({Key key, this.title}) : super(key: key);",
        "   final String title;",
        " ",
        "   @override",
        "   _MyHomePageState createState() => _MyHomePageState();",
        " }",
        " ",
        " class _MyHomePageState extends State<MyHomePage> {",
        "   int _counter = 0;",
        " ",
        "   void _incrementCounter() {",
        "     setState(() {",
        "       _counter++;",
        "     });",
        "   }",
        " ",
        "   @override",
        "   Widget build(BuildContext context) {",
        "     return Scaffold(",
        "       appBar: AppBar(",
        "         title: Text(",
        "           isRelease() ? \"リリースモード\" : \"デバッグモード\",",
        "         ),",
        "       ),",
        "       body: Center(",
        "         child: Column(",
        "           mainAxisAlignment: MainAxisAlignment.center,",
        "           children: <Widget>[",
        "             Text(isRelease() ? \"リリースモード\" : \"デバッグモード\",",
        "                 style: Theme.of(context).textTheme.title),",
        "             Text(",
        "               'You have pushed the button this many times:',",
        "             ),",
        "             Text(",
        "               '$_counter',",
        "               style: Theme.of(context).textTheme.display1,",
        "             ),",
        "           ],",
        "         ),",
        "       ),",
        "       floatingActionButton: FloatingActionButton(",
        "         onPressed: _incrementCounter,",
        "         tooltip: 'Increment',",
        "         child: Icon(Icons.add),",
        "       ), // This trailing comma makes auto-formatting nicer for build methods.",
        "     );",
        "   }",
        " }",
        " ",
        ""
      ]
    },
    {
      "title": "androidのリリースビルド動作確認",
      "created": 1581467606,
      "updated": 1581487196,
      "id": "5e4347d164f25d00175bb095",
      "lines": [
        "androidのリリースビルド動作確認",
        "[https://note.com/nbht/n/nd4338701daa5 Flutterで作ったアプリをiPhoneとAndroidの実機用にリリースビルドする｜nbht｜note]",
        "",
        " リリースビルドは実機にしか入らないことに注意",
        " シミュレーターにいれようとするとエラーがでる",
        "",
        " コマンド",
        "code:zsh",
        " flutter build apk // ビルド",
        " flutter devices // インストール先のデバイスを探す",
        " // flutter install -d 〇〇",
        " flutter install -d 8A1X0K39B // pixel3",
        "",
        "",
        " `flutter devices`",
        " `Pixel 3 なら`8A1X0K39B` ",
        "code:zsh",
        " 3 connected devices:",
        " ",
        " Pixel 3                   • 8A1X0K39B                            • android-arm64 • Android 10 (API 29)",
        " Android SDK built for x86 • emulator-5554                        • android-x86   • Android 10 (API 29) (emulator)",
        "",
        "",
        "flutter build apk && flutter build ios && flutter install -d 8A1X0K39B && flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3",
        ""
      ]
    },
    {
      "title": "iosのリリースビルド動作確認",
      "created": 1581469193,
      "updated": 1587021080,
      "id": "5e434e064c39cf0017bf7b77",
      "lines": [
        "iosのリリースビルド動作確認",
        " コマンド",
        "code:zsh",
        " flutter build ios // ビルド",
        " flutter devices // インストール先のデバイスを探す",
        " // flutter install -d 〇〇",
        " flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3 // iPod touch (3) ",
        "",
        "細かいことは以下参照",
        "[androidのリリースビルド動作確認]",
        "",
        "flutter build apk && flutter build ios &&",
        "flutter install -d 8A1X0K39B && flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3",
        "",
        "flutter build ios && flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3",
        "flutter build ios && flutter install -d 9",
        ""
      ]
    },
    {
      "title": "firesotreの動作確認設定",
      "created": 1581477271,
      "updated": 1586325596,
      "id": "5e436d93dbc6e80017720398",
      "lines": [
        "firesotreの動作確認設定",
        "qiita",
        ""
      ]
    },
    {
      "title": "authの設定",
      "created": 1581483905,
      "updated": 1581594936,
      "id": "5e43877f2bea790017e89beb",
      "lines": [
        "authの設定 ",
        "[https://pub.dev/packages/firebase_auth firebase_auth | Flutter Package]を参考にしてやる",
        " iosの設定は必要ない",
        "",
        "　プロジェクトレベルのbuild.gradle",
        "　　参考を確認する。昔は追加する必要があったけど、最近は自動的に導入されているので、設定の必要はないはず",
        "",
        "　アプリレベルのbuild.gradle",
        "　 一番したに入れなきゃいけないらしい",
        "　　code:dart",
        "　　 // ADD THIS AT THE BOTTOM",
        "   apply plugin: 'com.google.gms.google-services'",
        ""
      ]
    },
    {
      "title": "メールアドレスの動作確認",
      "created": 1581484681,
      "updated": 1581484826,
      "id": "5e438a8515a965001722ac0f",
      "lines": [
        "メールアドレスの動作確認",
        " メールを有効にする",
        " [https://gyazo.com/f3983f344d162e8f35c24dcb3e35de33]",
        "",
        "　ユーザーを作る(画面作るのが面倒なので。疎通確認だけしたい)",
        "　　check@check.com",
        "　　checkcheck",
        ""
      ]
    },
    {
      "title": "google sign in設定",
      "created": 1581487335,
      "updated": 1581629497,
      "id": "5e4394ddaad57f0017b4e56c",
      "lines": [
        "google sign in設定",
        "[https://pub.dev/packages/google_sign_in google_sign_in | Flutter Package]",
        "",
        " うまく行かない場合",
        " 　sha-1を本番から開発にうつしてみる。",
        "　　上の結果、clientIdが更新されて別のIDになることがある？から入れ直す？",
        "",
        "",
        "　`pubspec.yaml`に`google_sign_in: ^4.1.1`",
        "",
        " 有効にしてsha1登録してなかったら登録する",
        " [https://gyazo.com/5f79296da24402ab44ee0452587d59fe]",
        "",
        "",
        "[androidのgoodle sign in 本番と開発を分けている場合]",
        "",
        "",
        "",
        "　",
        ""
      ]
    },
    {
      "title": "androidのgoodle sign in 本番と開発を分けている場合",
      "created": 1581489383,
      "updated": 1581594701,
      "id": "5e439ce43ed7e900173f5415",
      "lines": [
        "androidのgoodle sign in 本番と開発を分けている場合",
        "[https://support.google.com/firebase/answer/6401008?authuser=0 このパッケージ名と SHA-1 の組み合わせを持つ OAuth2 クライアントは、別のプロジェクトに既に存在します - Firebase ヘルプ]",
        "",
        "　google sign in にはsha-1が必要だが、開発と本番ではどちらか一つしかはいらない。",
        "　そのため、上記の処理が必要になる",
        "　本番にsha-1が入っている前提",
        "",
        " やり方",
        "　　上記ページの「既存のプロジェクトはインポートしたくなく、Invites は使用していない。」をすすめる",
        "　　本番のgcpを見てプロジェクト名を今のプロジェクト名に合わせる",
        "　　クライアントIDをコピー",
        "　　開発に入れる",
        ""
      ]
    },
    {
      "title": "iosのgoogle sign in設定",
      "created": 1581490778,
      "updated": 1581490857,
      "id": "5e43a257aad57f0017b508f7",
      "lines": [
        "iosのgoogle sign in設定",
        "[https://www.youtube.com/watch?v=DrarVlOMg2c Flutter - Wire up the Google Sign In Plugin for iOS - YouTube]",
        "[https://github.com/FirebaseExtended/flutterfire/blob/master/packages/firebase_auth/firebase_auth/example/ios/Runner/Info.plist flutterfire/Info.plist at master · FirebaseExtended/flutterfire]",
        "[https://pub.dev/packages/google_sign_in#-readme-tab- google_sign_in | Flutter Package]",
        "",
        "",
        "　貼り付けるコード",
        "code:dart",
        " <!-- Put me in the [my_project]/ios/Runner/Info.plist file -->",
        " <!-- Google Sign-in Section -->",
        " <key>CFBundleURLTypes</key>",
        " <array>",
        " \t<dict>",
        " \t\t<key>CFBundleTypeRole</key>",
        " \t\t<string>Editor</string>",
        " \t\t<key>CFBundleURLSchemes</key>",
        " \t\t<array>",
        " \t\t\t<!-- TODO Replace this value: -->",
        " \t\t\t<!-- Copied from GoogleService-Info.plist key REVERSED_CLIENT_ID -->",
        " \t\t\t<string>com.googleusercontent.apps.861823949799-vc35cprkp249096uujjn0vvnmcvjppkn</string>",
        " \t\t</array>",
        " \t</dict>",
        " </array>",
        " <!-- End of the Google Sign-in Section -->",
        "",
        "[https://gyazo.com/90a532f6a8651256540ed8bc307633e0]",
        "",
        "`ios/Runner/info.plist`に貼り付け",
        "[https://gyazo.com/bd57664fef5e94e2f037aa2d2334985f]",
        "",
        "　`<string>com.googleusercontent.apps.466218294969-5mdmh6opkqd87a5m81nm83u4eqd3bvgk</string>` を`GoogleService-info.plist`の`REVERSED_CLIENT_ID`の値に置き換える",
        "",
        ""
      ]
    },
    {
      "title": "iosのauthの設定 開発と本番を分ける場合",
      "created": 1581491693,
      "updated": 1581510515,
      "id": "5e43a5ea4fbefa0017900353",
      "lines": [
        "iosのauthの設定 開発と本番を分ける場合",
        "",
        " xcodeのBuild Settingで＋からAdd User-defined Setting",
        " REVERSED_CLIENT_ID",
        "　debugとreleaseに値を入れる",
        "　[https://gyazo.com/de9769200bf26fb1575ae2d799a9e74c]",
        "",
        "[https://gyazo.com/a9e0398fabed67b6dbae05b7e95d3317]",
        "",
        " Runner/info.plistの該当部分のvalueに`$(REVERSED_CLIENT_ID)`",
        " これでデバック時とリリース時に別の値が入るようになった",
        "",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "BundleIdentifierの変更",
      "created": 1581503760,
      "updated": 1584499657,
      "id": "5e43d50eaad57f0017b572c6",
      "lines": [
        "BundleIdentifierの変更",
        "xcodeのをエラーがでないように変える",
        "赤いチェックがなくなればok",
        "[https://gyazo.com/9bf366ecc85ff94565ef6b1e99014ec2]",
        "",
        ""
      ]
    },
    {
      "title": "apple sign inの設定",
      "created": 1581540095,
      "updated": 1581549209,
      "id": "5e4462f714f8da00178ca6e3",
      "lines": [
        "apple sign inの設定",
        "　Developerに登録して、xcodeで設定する",
        "　firebaseで設定する",
        "　その後リビルドすること",
        "",
        ""
      ]
    },
    {
      "title": "Crashlyticsの設定",
      "created": 1581549343,
      "updated": 1587189248,
      "id": "5e44871bc76097001723c5fe",
      "lines": [
        "Crashlyticsの設定",
        "　[https://gyazo.com/afed28b525be149e47f8995fa329927e]",
        "",
        "　[https://pub.dev/packages/firebase_crashlytics firebase_crashlytics | Flutter Package]の手順通りやる",
        "　 android",
        " 　 prokectのbuiid gradle",
        "  　 code:zsh",
        " 　    // Additional repository for fabric resources",
        "      maven {",
        "        url 'https://maven.fabric.io/public'",
        "      }",
        "",
        "   　code:json",
        "　     dependencies {",
        "          classpath 'com.android.tools.build:gradle:3.5.3'",
        "          classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"",
        "          classpath 'com.google.gms:google-services:4.3.3'",
        "          // Additional repository for fabric resources",
        "          maven {",
        "              url 'https://maven.fabric.io/public'",
        "          }",
        "      }",
        "       ",
        "",
        "    code:json",
        "           // Add fabric classpath",
        "           classpath 'io.fabric.tools:gradle:1.26.1'",
        "",
        "  appのbuild gradle",
        "    code:json",
        "     apply plugin: 'io.fabric'",
        "     apply plugin: 'com.google.gms.google-services'",
        "",
        " ios",
        "  [https://gyazo.com/10a256c47faf5021c5ad9313a19b3b4d]",
        "",
        " main.dartに記述",
        "  code:dart",
        "   void main() {",
        "     // admob",
        "     WidgetsFlutterBinding.ensureInitialized();",
        "     Admob.initialize(getAppId());",
        "   ",
        "     // Crashlytics",
        "     Crashlytics.instance.enableInDevMode = true;",
        "     FlutterError.onError = Crashlytics.instance.recordFlutterError;",
        "   ",
        "     //",
        "     runZoned(() {",
        "       runApp(",
        "         MultiProvider(",
        "           providers: [",
        "             ChangeNotifierProvider(create: (_) => AuthProvider.instance()),",
        "             ChangeNotifierProvider(create: (_) => DbProvider()),",
        "             ChangeNotifierProvider(create: (_) => UtilProvider()),",
        "           ],",
        "           // child: CheckApp(),",
        "           child: MyApp(),",
        "         ),",
        "       );",
        "     });",
        "   }",
        ""
      ]
    },
    {
      "title": ".javaは非推奨のAPIを使用またはオーバーライドしています。",
      "created": 1581589804,
      "updated": 1581589852,
      "id": "5e4525209326c50017741581",
      "lines": [
        ".javaは非推奨のAPIを使用またはオーバーライドしています。",
        "[https://gurutaka-log.com/flutter-cloud_firestore-alert 【Flutter】cloud_firestoreで『非推奨のAPIを使用またはオーバーライドしています』の注意が出た時の対処法 | ぐるたかログ]",
        "",
        "[https://gyazo.com/5368d34946db08620a3950948c26c328]",
        "",
        ""
      ]
    },
    {
      "title": "Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies.",
      "created": 1581596510,
      "updated": 1581596540,
      "id": "5e453f4ed30d7f0017799078",
      "lines": [
        "Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies.",
        "code:zsh",
        " Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies.",
        " To update the CocoaPods specs, run:",
        "   pod repo update",
        " ",
        " Error running pod install",
        " Error launching application on iPhone 11 Pro Max.",
        " ",
        "",
        "ios/Podfile.lockを削除する",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "admobの設定",
      "created": 1581633270,
      "updated": 1586418965,
      "id": "5e45cef368a7370017075b92",
      "lines": [
        "admobの設定",
        "　flutterに導入　",
        "　　[https://github.com/kmcgill88/admob_flutter/wiki/Installation Installation · kmcgill88/admob_flutter Wiki]",
        "　Android",
        "　 [https://gyazo.com/b75a7c164b228d0d540ba057e35d79c6]",
        "",
        "",
        "　ios",
        " [https://gyazo.com/c815453c4064bbc5271f0a1cdf54dd3c]",
        "",
        "",
        "　18禁設定する",
        "　　ブロックのコントロール",
        ""
      ]
    },
    {
      "title": "androidのみ長ったらしいログがでるとき",
      "created": 1581644964,
      "updated": 1581644964,
      "id": "5e45fc8bd4e9a100178aef28",
      "lines": [
        "androidのみ長ったらしいログがでるとき",
        "[https://github.com/flutter/flutter/issues/48079 debug console overwhelmed running simply webview app on Android emulator · Issue #48079 · flutter/flutter]",
        ""
      ]
    },
    {
      "title": "アイコンを作る",
      "created": 1581765239,
      "updated": 1581765335,
      "id": "5e47d25bbb36bc0017e7a30e",
      "lines": [
        "アイコンを作る",
        "",
        " アイコンそのものは66でいると枠いっぱいになってしまうので、0.8かけの50ぐらいにするとよい",
        "[https://gyazo.com/f9a7b0c971daa3cd98d2dee62f196b6e]",
        "",
        "code:yaml",
        " flutter_icons:",
        "   android: true",
        "   ios: true",
        "   image_path: 'assets/images/icon.png'",
        "   adaptive_icon_foreground: 'assets/images/fore.png'",
        "   adaptive_icon_background: 'assets/images/back.png'",
        ""
      ]
    },
    {
      "title": "中華フォントから日本語フォントに変更する",
      "created": 1581821485,
      "updated": 1587268807,
      "id": "5e48ae2a3b538c0017f93aac",
      "lines": [
        "中華フォントから日本語フォントに変更する",
        "[https://qiita.com/granoeste/items/9d72756ffaf31f08b214 FlutterでAndroidの日本語フォントが正しく表示されない対応 (1.0.0) - Qiita]",
        ""
      ]
    },
    {
      "title": "リリースビルド",
      "created": 1581846661,
      "updated": 1582266022,
      "id": "5e490f15d76b3a00176ae98a",
      "lines": [
        "リリースビルド",
        " コマンド ",
        "  `flutter build appbundle`",
        "",
        " 手順",
        " 　[https://flutter.dev/docs/deployment/android Build and release an Android app - Flutter]",
        "  keytool",
        "   [https://www.qoosky.io/techs/9db75cec15 JDK keytool の基本的な使い方 (openssl との対比) - Qoosky]",
        "",
        "",
        "　メモ",
        "　　[keytool]",
        "　　[keystore]",
        "",
        " [https://flutter.dev/docs/deployment/android Build and release an Android app - Flutter]",
        "  Adding a launcher icon",
        "   アイコンは作成済み",
        "  Signing the app",
        "   Create a keystore",
        "    [* パスワードはlastpassに記載]",
        "    keytool -genkey -v -keystore /Users/dev/my/app/setting/secret/key.jks -keyalg RSA -keysize 2048 -validity 10000 -alias key",
        "    ",
        "    フォルダは`/Users/dev/my/app/setting/secret/key.jks`にした",
        "     githubには記載せず、google driveで管理",
        "　　　　code:dart",
        "　　　　 10,000日間有効な2,048ビットのRSAのキー・ペアと自己署名型証明書(SHA256withRSA)を生成しています",
        "          ディレクトリ名: CN=ando nagai, OU=personal, O=personal, L=日本, ST=京都府, C=jp",
        "　　　  [/Users/dev/key.jksを格納中]",
        " 　　　　 dev@kaihatsunoMac-mini grouping_timer_3 % ",
        "",
        "",
        "この手順でやり直したらうまく行った",
        "　アップロードキーをgoogleにあげてなかったからか？",
        " [https://gyazo.com/ebf51d7aaeeeaf6851ac72549675ef05]",
        " ",
        " fsdt4etA!5342gg34gsgdfdfdf",
        " keyになっているけど、エラーがでてkey1にした",
        " [https://gyazo.com/b0f2da506798572a560838bf53756e38]",
        " [https://gyazo.com/875e9e5871a8b041d63d1bdc5988a8f0]",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "　　Reference the keystore from the app",
        "　\t　code:dart",
        "　 　 storePassword=<password from previous step>",
        "    keyPassword=<password from previous step>",
        "    keyAlias=key",
        "    storeFile=<location of the key store file, such as /Users/<user name>/key.jks>",
        "",
        "  　` Warning: Keep the keystore file private; do not check it into public source control.`と記載されているため、androidフォルダの ignoreに`/key.properties`を追加",
        "",
        "　　Configure signing in gradle",
        "　　　やる",
        "　　　`flutter clean`する",
        "",
        "　　R8",
        "　　 難読化にするので、ここは無視",
        "",
        "　　Reviewing the app manifest",
        "　　　すでに設定済みだけど、一応目を通す",
        "",
        "　　Reviewing the build configuration",
        "　　　すでに設定済みだけど、一応目を通す",
        "",
        "　　Building the app for release",
        "　　　>You have two possible release formats when publishing to the Play Store.",
        "   > ",
        "   > App bundle (preferred)",
        "   > APK",
        "   というわけで、推奨されているほうをやる ",
        "   `flutter build appbundle`を実行してリリースビルドを作成",
        "   >The release bundle for your app is created at <app dir>/build/app/outputs/bundle/release/app.aab.",
        "   > ",
        "   > By default, the app bundle contains your Dart code and the Flutter runtime compiled for armeabi-v7a (ARM 32-bit), arm64-v8a (ARM 64-bit), and x86-64 (x86 64-bit).",
        "   > ",
        "   > ",
        "",
        "  Test the app bundle",
        "   もうしてあるので無視",
        "",
        "　　Build an APK",
        "　　　App bundleしてあるので無視",
        "",
        "　　Install an APK on a device",
        "　　　もうしてあるので無視",
        "",
        "　　Publishing to the Google Play Store",
        "　　　[Google Play Storeでアプリを公開する]",
        "",
        "　　Updating the app’s version number",
        "",
        ""
      ]
    },
    {
      "title": "keytool",
      "created": 1581883225,
      "updated": 1581883403,
      "id": "5e499ef7acfcf900178a19ab",
      "lines": [
        "keytool",
        ">keytool は、鍵と証明書を管理するためのユーティリティーです。",
        ">keytool を使うと、自分の公開鍵と非公開鍵のペア、および関連する証明書を管理し、デジタル署名を使った自己認証 (ほかのユーザーまたはサービスに対して自分自身を認証すること) や、データの整合性と証明書に関するサービスを利用することができます。",
        ">keytool では、通信相手の公開鍵を (証明書の形で) キャッシュすることもできます。",
        "",
        "[https://docs.oracle.com/javase/jp/6/technotes/tools/windows/keytool.html keytool - 鍵と証明書の管理ツール]",
        "",
        "[keystore]",
        ""
      ]
    },
    {
      "title": "keystore",
      "created": 1581883519,
      "updated": 1581883807,
      "id": "5e49a0787f6264001759422b",
      "lines": [
        "keystore",
        " 暗号化キーを保管するための場所",
        " .jks",
        " gitなどで保存してはいけない",
        ""
      ]
    },
    {
      "title": "Google Play Storeでアプリを公開する",
      "created": 1581889586,
      "updated": 1592518838,
      "id": "5e49b82eacfcf900178a1d10",
      "lines": [
        "Google Play Storeでアプリを公開する",
        " コマンド ",
        "  `flutter build appbundle`",
        "",
        "　[まであと何分の鍵]",
        "",
        " [https://support.google.com/googleplay/android-developer/answer/7384423 Google Play アプリ署名を使用する - Play Console ヘルプ]と[https://developer.android.com/studio/publish/app-signing アプリへの署名  |  Android デベロッパー  |  Android Developers]を参考にする",
        "",
        "",
        "",
        "",
        "",
        "",
        "",
        "　うまく行かない場合は証明書を作り直すとよい？",
        "",
        "",
        "`Android App Bundle が誤った鍵で署名されています。`のエラーの場合、SHA1のフィンガープリントが違う",
        "code:zsh",
        " dev@kaihatsunoMac-mini grouping_timer_3 % keytool -printcert -jarfile ./build/app/outputs/bundle/release/app-release.aab ",
        " 署名者番号1:",
        " ",
        " 署名:",
        " ",
        " 所有者: C=US, O=Android, CN=Android Debug",
        " 発行者: C=US, O=Android, CN=Android Debug",
        " シリアル番号: 1",
        " 有効期間の開始日: Thu Oct 31 16:47:18 JST 2019終了日: Sat Oct 23 16:47:18 JST 2049",
        " 証明書のフィンガプリント:",
        "          SHA1: 42:0A:8B:3E:91:5F:F5:B3:67:8F:67:84:7C:AD:22:73:8B:6F:FA:E7",
        "          SHA256: CA:2D:2A:B1:9F:CC:B3:0C:4A:E2:E4:AF:A6:E3:A4:97:75:E3:F4:41:3F:60:6D:59:F5:C6:39:9E:37:BC:CF:12",
        " 署名アルゴリズム名: SHA1withRSA",
        " サブジェクト公開キー・アルゴリズム: 2048ビットRSAキー",
        " バージョン: 1",
        "",
        " code:zsh",
        "  dev@kaihatsunoMac-mini grouping_timer_3 % keytool -list -v -keystore /Users/dev/my/app/setting/secret/key.jks",
        "  キーストアのパスワードを入力してください:  ",
        "  キーストアのタイプ: PKCS12",
        "  キーストア・プロバイダ: SUN",
        "  ",
        "  キーストアには1エントリが含まれます",
        "  ",
        "  別名: key",
        "  作成日: 2020/02/17",
        "  エントリ・タイプ: PrivateKeyEntry",
        "  証明書チェーンの長さ: 1",
        "  証明書[1]:",
        "  所有者: CN=永井安都, OU=personal, O=personal, L=京都市, ST=京都府, C=jp",
        "  発行者: CN=永井安都, OU=personal, O=personal, L=京都市, ST=京都府, C=jp",
        "  シリアル番号: 8ac5a4a30316cd62",
        "  有効期間の開始日: Mon Feb 17 17:45:21 JST 2020終了日: Fri Jul 05 17:45:21 JST 2047",
        "  証明書のフィンガプリント:",
        "           SHA1: 06:84:14:FE:55:94:A1:EB:5C:B9:FD:C1:C5:DB:28:87:EA:51:8F:F9",
        "           SHA256: 22:A0:24:88:29:35:C7:57:B3:E9:BE:1D:03:0A:D7:18:30:FE:10:D9:D5:49:A1:E9:F9:44:EB:C1:C8:05:EF:48",
        "  署名アルゴリズム名: SHA256withRSA",
        "  サブジェクト公開キー・アルゴリズム: 2048ビットRSAキー",
        "  バージョン: 3",
        "  ",
        "  拡張: ",
        "  ",
        "  #1: ObjectId: 2.5.29.14 Criticality=false",
        "  SubjectKeyIdentifier [",
        "  KeyIdentifier [",
        "  0000: EE 63 A5 6F 11 46 D8 83   46 2B 0F 9C B6 5B D3 8F  .c.o.F..F+...[..",
        "  0010: E5 20 0D D7                                        . ..",
        "  ]",
        "  ]",
        "  ",
        "  ",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "アプリのパッケージ名の名付け方",
      "created": 1581931309,
      "updated": 1584233944,
      "id": "5e4a5b2a6e92eb0017906696",
      "lines": [
        "アプリのパッケージ名の名付け方",
        "　[https://qiita.com/ryo_mm2d/items/6da55b7801863562e7b3 Androidアプリ開発で取り返しがつかないことまとめ - Qiita]のアプリのパッケージ名の付け方を参照すること",
        "",
        " [https://developer.android.com/studio/build/application-id?hl=ja アプリケーション ID の設定  |  Android デベロッパー  |  Android Developers]",
        " 　`「com.example」は禁止されているため、別のパッケージ名を使用する必要があります。`",
        "",
        "　アプリ名は世界中で一意になる必要がある。",
        "　ドメインを逆順で指定するのが一般的",
        "　でも決まりはない。",
        "",
        "",
        "　ampersand.comというドメイン名を想定することにすると、com.ampersand.appNameになる。",
        ""
      ]
    },
    {
      "title": "App Storeでアプリを公開する",
      "created": 1582017943,
      "updated": 1587368819,
      "id": "5e4bad8ba2679d001710d3f0",
      "lines": [
        "App Storeでアプリを公開する",
        "",
        "",
        "code:zsh",
        " flutter build ios // ビルド",
        " flutter devices // インストール先のデバイスを探す",
        " // flutter install -d 〇〇",
        " flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3 // iPod touch (3) ",
        " ",
        " ",
        " flutter build ios",
        " flutter install -d  665C47DD-CEC8-4195-82D5-FDB0D8B9A8E7 ",
        "",
        "",
        " 参考",
        "　 [https://qiita.com/k_mawa82/items/5b7fb10ff81c04ec3be9 FlutterでAppleID登録から始めてiOSアプリをリリースした時に解決したつまづきポイントメモ。 - Qiita]",
        " 　[https://qiita.com/kenny_J_7/items/92378e2a09bee6080677 【2019年版】iOSアプリをApp Storeに公開するための全手順まとめ - Qiita]",
        "  1. Certificate作成の下準備 の参考 -> [https://i-app-tec.com/ios/apply-application.html iOS, Certificate 証明書を作ってみる]",
        "   ２回め以降は記事の３からすすめる",
        "　 　[iOSアプリをアーカイブする]",
        "",
        "",
        "[http://blog.livedoor.jp/eienf/archives/1069743818.html AdMobを組み込んだ場合にiTunes ConnectでIDFA申請ではどう回答するのが正解か？ : 永遠日誌]",
        "[https://gyazo.com/354860ac2c302af34fb802ff4e05be03]",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "2月の予定",
      "created": 1582110057,
      "updated": 1583216272,
      "id": "5e4d1567d522a100170b8f76",
      "lines": [
        "2月の予定",
        " [1月の予定]",
        "　[雑多何でもメモ]",
        " [3月の予定]",
        "",
        "2/20(木)",
        "　城南宮",
        "",
        "　梅",
        " テキスト認識して弱視用フォントに変換　",
        "　3月の帰省時の散髪",
        "　ゲームをする",
        "　本を読む",
        "",
        " - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " アプリ",
        "　 までアプリをつくる",
        "　 もしくはその他のアプリを作る",
        " qiita",
        " 　[- 過去記事のリメイク]",
        " 　　[- flutter web]",
        " 　まだつくっていないやつ",
        " 　[組み合わせタイマー]の記事を書く",
        " 　　何？",
        "　　開発環境構築の仕方書く",
        "　ポートフォリオ",
        "　　リファクタリング",
        "　　組み合わせタイマー書く",
        "　　新規コンテンツ作成",
        "　　再就職を見据えたコンテンツつくり",
        "　[組み合わせタイマー]",
        "　　[組み合わせタイマー]に記載",
        "　react",
        "　 [- typescript]",
        "　 [- REDUX]",
        "　 [- FIREBAE]",
        "　 [- HOOK]",
        " twitter プロフィール",
        "  アプリ、ポートフォリオサイト",
        "",
        " この中から２つをやる",
        " 　qiita",
        " 　react",
        " 　",
        ""
      ]
    },
    {
      "title": "firebaseの匿名認証",
      "created": 1582229475,
      "updated": 1582230458,
      "id": "5e4ee7de6f0a3e0017ba46f2",
      "lines": [
        "firebaseの匿名認証",
        "",
        "[https://gyazo.com/c3dbc30a4a3fab34d8dec13b83eb3160]",
        "",
        "",
        ">Firebase で認証する一時的な匿名アカウントを、Firebase Authentication で作成して使用できます。一時的な匿名アカウントを使用すると、アプリに登録していないユーザーが、セキュリティ ルールで保護されているデータを使用できるようになります。",
        "[https://firebase.google.com/docs/auth/web/anonymous-auth?hl=ja JavaScript を使用して Firebase 匿名認証を行う]",
        "",
        "　セキュリティについて",
        "　　匿名ユーザーがfirestoreを使うとき ",
        " 　　`isUserAuthenticated(user)`でtrueになる",
        " 　　`if isUserAuthenticated(userId);`がtrueになるので、`/users/{userId}`のデータに対してデリートが可能になる",
        "　　code:json",
        "　　 rules_version = '2';",
        "   service cloud.firestore {",
        "     match /databases/{database}/documents {",
        "   \t",
        "   function isUserAuthenticated(userId) {",
        "         return request.auth.uid == userId;",
        "       }",
        "       ",
        "        match /users/{userId} {",
        "          allow delete: if isUserAuthenticated(userId);",
        "       }",
        "     }",
        "   }",
        "",
        "",
        ">匿名ユーザーがアプリへ登録する場合、ログイン認証情報を匿名アカウントにリンクして、以後のセッションでも引き続き、保護されているデータを使用可能にできます。",
        "[https://firebase.google.com/docs/auth/web/anonymous-auth?hl=ja JavaScript を使用して Firebase 匿名認証を行う]",
        "",
        "　アプリを削除して再インストールしたとき",
        "　　ios -> 匿名認証のuuidが引き継がれる",
        "　　android -> 匿名認証のuuildが引き継がれない(firebaseのデータは削除されない)",
        "[https://qiita.com/masaibar/items/98cc113a536111fbb4f5 AndroidにおいてFirebaseの匿名認証はアプリの再インストールで引き継がれるのか - Qiita]",
        "[https://twitter.com/_mono/status/1177182992474632192 mono 🎯 @自宅 💙さんのツイート: \"Firebase Authの認証情報はKeychainに格納されている(匿名か否かに関係なく)ので現状のiOSでの挙動としてはそうなのだけど、そもそもこのKeychainの仕様は特に定まったものではないのでなるべく頼らないようにしている🤔 あと、Androidの時に認証情報の保持具合がどうなのかまだ掴み切れていない🤔… https://t.co/Yv8ko9JIIT\"]",
        "",
        "",
        " web",
        " 　web -> IndexedDB内に保存される",
        "  [https://blog.katsubemakito.net/firebase/firebase-authentication-anonymously-web1 Firebase Authenticationで匿名認証 (Web編) その1]",
        ""
      ]
    },
    {
      "title": "frontend",
      "created": 1582287681,
      "updated": 1592042791,
      "id": "5e4fcb3e84e6e90017f162f5",
      "lines": [
        "frontend",
        " react,js,ts,react,vueの情報のまとめになる",
        "　　言語・ソース・全文検索は[https://scrapbox.io/ampersand-frontend/ ampersand-frontend]",
        "　　ここは開発環境の設定やインフォなど",
        "",
        " react",
        "  [react環境構築]",
        "　 [react + firebase hosting]",
        "　 [https://scrapbox.io/ampersand-frontend/react_+_hooks_+_typescript%E3%81%AE%E5%9F%BA%E6%9C%AC react + hooks + typescriptの基本 - ampersand-frontend]",
        "",
        "　 メモ",
        "  [npx] とは",
        "",
        " typescript",
        "  言語",
        "　  [https://typescript-jp.gitbook.io/deep-dive/getting-started Getting Started - TypeScript Deep Dive 日本語版]",
        "　  [https://future-architect.github.io/typescript-guide/ 仕事ですぐに使えるTypeScript — 仕事ですぐに使えるTypeScript ドキュメント]",
        "　　環境構築(tsのみ)",
        "　　　[https://qiita.com/notakaos/items/3bbd2293e2ff286d9f49 TypeScript + Node.js プロジェクトのはじめかた2019 - Qiita]",
        "　　",
        "　　　",
        "",
        "",
        " react for typescript",
        "  [https://www.webopixel.net/tag/typescript TypeScript | webOpixel]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " js",
        "  [* [nuxt]]",
        "  [moment]"
      ]
    },
    {
      "title": "ideaから新規reactアプリを作る",
      "created": 1582289194,
      "updated": 1582291128,
      "id": "5e4fd12527025e0017b036e8",
      "lines": [
        "ideaから新規reactアプリを作る",
        "static webにある",
        "[https://gyazo.com/d21603e31210a50bbaf15daa5a372f5f]",
        "",
        "[npx] create-react-appが走る",
        "`npx create-react-app --typescript`でtypescriptモード",
        "[npx]とは",
        "",
        "[https://gyazo.com/525f8bd1c6a96001b6acf672314e0b55]",
        ""
      ]
    },
    {
      "title": "npx",
      "created": 1582289782,
      "updated": 1582289917,
      "id": "5e4fd36cbebcc20017544944",
      "lines": [
        "npx",
        ">ローカルにインストールしたnpmのバイナリをお手軽に実行できます。",
        "[https://qiita.com/tatakahashiap/items/1c4ab221c4993e7c4ebf npxでnodeモジュールを実行する - Qiita]",
        "",
        ""
      ]
    },
    {
      "title": "直接cssを当てる",
      "created": 1582452528,
      "updated": 1582452528,
      "id": "5e524f2d8a37890017658ee0",
      "lines": [
        "直接cssを当てる",
        "<span style={{ color: 'red' }}>",
        "",
        ""
      ]
    },
    {
      "title": "TSエラー辞典",
      "created": 1582453099,
      "updated": 1582453192,
      "id": "5e5251685dad3e0017db0021",
      "lines": [
        "TSエラー辞典",
        "　エラー",
        "　　TS2695: Left side of comma operator is unused and has no side effects.",
        "　解決",
        "　　>JSXでは、戻り値から1つのhtml要素のみを返すことができます。複数の要素を返すことはできません。複数の要素を返したい場合、すべてのhtmlコードをdivまたは他のラッパーコンポーネントでラップします。",
        "",
        "",
        ""
      ]
    },
    {
      "title": "自分用dashboard",
      "created": 1583044871,
      "updated": 1583046332,
      "id": "5e5b5902fb17070017e4006b",
      "lines": [
        "自分用dashboard",
        " ほしい機能",
        " 　通知機能",
        " 　　メール",
        " 　　　.dev",
        " 　　　.app",
        " 　　　.r",
        " 　　開発関連",
        " 　　　admob",
        " 　　　firebase",
        " 　todo",
        " 　 todo",
        " 　  scrapboxと連携してもいいかも\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t",
        " 　  直近の予定",
        " 　 　ルーティングtodo",
        " 　その他情報",
        " 　　天気",
        " 　　時間",
        " 　　fitbit",
        " 　　仕事時間",
        " 　あと何分",
        "　　urlリンク",
        ""
      ]
    },
    {
      "title": "3月の予定",
      "created": 1583045694,
      "updated": 1596174252,
      "id": "5e5b5c3b3571f3001795bf4f",
      "lines": [
        "3月の予定",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** リンク]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　月単位",
        "　 [12月の予定]",
        "　 [1月の予定]",
        "　 [2月の予定]",
        "　よく使うリンク",
        "　　[雑多何でもメモ]",
        "　　[アプリをつくる手順 Ver3]",
        "　　[マーケティング(開発前)]",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** なんでもtodo]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "table:予定",
        " 日付\t曜日\t内容\t備考",
        "[https://tenki.jp/forecast/6/29/6110/26100/1hour.html 京都市の1時間天気 - 日本気象協会 tenki.jp]",
        "",
        "　アプリについて",
        "　　組み合わせタイマーのマーケティングは後回しにして新作をつくる",
        "　　新作は開発前マーケティングをしっかりやる",
        "　　そして開発、リリース",
        "　　リリース後にマーケティングする",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 今日のtodo]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　明日以降の桜予定立てる",
        "　お金を払う",
        "　明日晴れた場合の桜予定",
        "　写真のバックアップ",
        "",
        " 風呂",
        " 歯磨き",
        " ランニング",
        " 仕事",
        "　[マーケティング(開発前)]",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** 今月のtodo]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " 積みゲーの消化",
        " 　ゼノブレイド",
        " 　60円のやつ",
        " 　どうぶつの森",
        " 　リングフィットアドベンチャ",
        "　京都",
        "　 [* 大きなまつりの先行予約とる]",
        "　　[京都 - 桜 -]",
        "　　桜以外",
        "　　　清水寺",
        "　写真",
        " 　写真のスマートフォンバックアップ",
        " 　写真整理",
        "　他",
        "　　[生活]の改善",
        "　　[転職準備]",
        "　　よる読書する",
        "　　パン",
        "　　hdd破壊",
        "　アプリ新作",
        "　 開発後マーケティングはしない。大変だから。かわりに開発前の手順を充実させる",
        "　 [アプリをつくる手順 Ver3]を構築する",
        "",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "- - - [** ４月以降のtodo]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "　以下を作る",
        "　　[アプリアイデア]の中で直近でつくりたいやつ",
        "　　　[自分用dashboard]",
        "　　 [組み合わせタイマー]",
        "　　 [まであと何分]",
        "　　 [Let's search for Icon]",
        "　　　ポートフォリオ再構築 hugoのテンプレートなどをみる",
        "　　　翻訳アプリ",
        "　　　　[https://stackoverflow.com/questions/44276080/how-do-i-rotate-something-15-degrees-in-flutter dart - How do I rotate something 15 degrees in Flutter? - Stack Overflow]",
        "　　　プラスもう一つほしい",
        "　　qiita",
        "　　　flutter + firebaseで組み合わせタイマーつくった　途中まで書いた",
        "  　個人開発を始めてから1年たった　ほとんどなにも書いて以内",
        "   ogpの話",
        "　[転職準備]をする ６月〜",
        "",
        "",
        ""
      ]
    },
    {
      "title": "アプリのアップデート - flutter -",
      "created": 1583106867,
      "updated": 1592527694,
      "id": "5e5c4b2b9dbc0300171001fb",
      "lines": [
        "アプリのアップデート - flutter -",
        "　全般",
        "　　修正する",
        "　　pubsepcのバージョンを上げる",
        "　　 version: 1.0.3+3  といった形にする",
        "　　 +3の部分はなんでもいいが、変えないでいるとandroidでエラーになる",
        "　　 `バージョン コード 1 の APK または Android App Bundle がすでに存在するため、別のバージョン コードを使用する必要があります。`",
        "  `flutter build appbundle && flutter build  ios`",
        "",
        " android",
        "  アプリのリリース",
        "  [https://gyazo.com/e7666bc015a9fbc337720fff3ceb4053]",
        "",
        "  リリースを編集",
        "  　[https://gyazo.com/65259445fd347f2a056e24924e6fee3c]",
        "　　　`✓ Built build/app/outputs/bundle/release/app-release.aab (22.2MB).`をドラック＆ ドロップ",
        "",
        "",
        " ios",
        "  [iOSアプリをアーカイブする]",
        "  ストアへの反映後",
        "  　remote configの設定",
        "  　 minimumのバージョンを必要に応じて上げる。latestは使ってない",
        "",
        "",
        "",
        "　"
      ]
    },
    {
      "title": "組み合わせタイマーのマーケティング",
      "created": 1583216421,
      "updated": 1584612677,
      "id": "5e5df72015adad001743c61e",
      "lines": [
        "組み合わせタイマーのマーケティング",
        "[組み合わせタイマー]",
        "[アプリの課金・ユーザーについて]",
        "",
        "[https://gyazo.com/7da4e73b87b18f188600fa7f624e0e8c]",
        "",
        "",
        "　筋トレのキーワードを入力する",
        "",
        "ストレッチ、筋トレのインフルエンサーに使ってもらいたい",
        "",
        "〜 〜 〜 アプリ改修後 〜 〜 〜 ",
        "",
        "　広告",
        "  qiita広告代わりに記事を出す",
        "  twitter",
        "   [- 宣伝tweet]",
        "   [- 固定]",
        "   　[- 文句を考える]",
        "   定期的にtweetする",
        "　　　プロフィール",
        "",
        "　他のアプリのマーケティング調査",
        "　　類似アプリ、特に機能別、例えば、プレゼンタイマー、ストレッチタイマーなどで調べる",
        "",
        ""
      ]
    },
    {
      "title": "転職準備",
      "created": 1583481793,
      "updated": 1583753783,
      "id": "5e6203bcbdb606001794dcb7",
      "lines": [
        "転職準備",
        " 履歴書の類",
        " 　履歴書",
        " 　ポートフォリオ",
        " 　　今まで開発したアプリ",
        "   qiitaブログ",
        "   スキルセット",
        "   　githubgist? scrapbox?",
        "   　書き方？",
        "",
        "　どの会社を狙うか？",
        "　 ジャンル",
        "　 　フロントエンド",
        "　 言語",
        "　 　flutter react",
        "　　京都",
        "　　東京",
        "　　転職サイト",
        "　　　[https://paiza.jp/career/job_offers/dev_frameworks/React Reactの採用/求人情報 | ITエンジニア専門の転職サイト【paiza転職】]",
        "　　　[https://doda.jp/ 転職ならdoda（デューダ） － 転職を成功に導く求人、転職情報が満載の転職サイト]",
        "　　　[https://www.green-japan.com/ IT/Web業界の求人・採用情報に強い転職サイトGreen(グリーン)]",
        "　　企業",
        "　　　ゆめみ",
        "　　　金子さんのところ",
        "　　　もっちーさんのところ",
        "",
        "　ゆめみ",
        "　　[https://hrmos.co/pages/yumemi/jobs/0000236 【京都】フロントエンドエンジニア | 株式会社ゆめみ]",
        "　　[https://hrmos.co/pages/yumemi/jobs/0000237 【京都】iOS/Androidアプリ開発エンジニア | 株式会社ゆめみ]",
        "",
        " web",
        ">【必須スキル】",
        "> - 視覚化されたUIデザインのHTML/CSS/JavaScriptを用いた実装",
        "> - JavaScriptフレームワークやライブラリ(React/Angular/Vue.js/Riot等)の業務における使用/",
        "> - スマートフォンを含むレスポンシブ対応の実装経験",
        "> - 課題管理ツールまたはチャットツールまたはビデオチャットによる顧客との連絡",
        "> - GitのCLI操作",
        "> ",
        "> 【歓迎スキル】",
        "> - TypeScriptの利用経験",
        "> - サーバサイド開発経験",
        "> - スマートフォンサイト、スマートフォンアプリのUIデザイン",
        "> - UIデザインに関する提案・ディレクション",
        "> ",
        "> 【求める人物像】",
        "> - お客様やメンバーに誠実な対応ができる方",
        "> - 要件定義から運用・保守まで幅広く担当してもらうことを想定しているので、「まずはやってみよう」とその状況を楽しめる方",
        "> - 自分の担当分について手を抜かない方、最後までやり遂げることが出来る責任感、忍耐力がある方",
        "> - 技術上の課題に対し、論理立てて解決策を導き出せる方",
        "> - 仕様上の課題に対して、それを発見し、報告できる方",
        "> - お客様の話から課題の中心と優先順位を理解して、より良い提案を心掛けられる方",
        "> - リモートで遠隔地のメンバーとコミュニケーションが取れる方",
        "",
        "mobile",
        ">【必須スキル】",
        "> ・iOSもしくはAndoridのネイティブアプリ開発の実務経験",
        "> ・オブジェクト指向プログラミングの知識",
        "> ・gitの操作がCUIベースで行えること",
        "> ・課題管理ツールまたはチャットツールまたは電話による顧客との連絡ができること",
        "> ",
        "> 【歓迎スキル】",
        "> ・チーム開発の経験",
        "> ・ネイティブアプリのUI/UX設計の経験",
        "> ・テスト駆動での開発経験",
        "> ・スマートフォンサイトの構築、運用経験",
        "> ・大規模ウェブアプリケーションの構築、運用経験",
        ""
      ]
    },
    {
      "title": "まであと何分",
      "created": 1583574539,
      "updated": 1592099221,
      "id": "5e636defa4f72b0017b6cecd",
      "lines": [
        "まであと何分",
        " リンク",
        " 　[まで後何分 - 開発前マーケティング -]",
        " 　[まで後何分 - デザイン -]",
        " 　[まで後何分 - 開発 -]",
        "　　[まで後何分 - 広告・宣伝 -]",
        "",
        " todo",
        "  クラ首里ティーズ",
        "  アナリシス",
        "  admob",
        "",
        "",
        "",
        "　レイアウト参考",
        "　　[https://flutterawesome.com/a-showcase-flutter-todo-application/ A showcase flutter todo application]",
        "",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "公開するドキュメント",
      "created": 1583910053,
      "updated": 1583911879,
      "id": "5e688ca2628a4b00172be3eb",
      "lines": [
        "公開するドキュメント",
        "　github pageを使用する",
        "　https://github.com/ampersand-github/open-documents/",
        "",
        "https://ampersand-github.github.io/open-documents/",
        "https://ampersand-github.github.io/open-documents/samaple.html",
        "ampersand-github/open-documents/",
        ""
      ]
    },
    {
      "title": "利益出してる個人開発者とアプリ一覧まとめ",
      "created": 1584137549,
      "updated": 1584943365,
      "id": "5e6c0548ba364700179aae3c",
      "lines": [
        "利益出してる個人開発者とアプリ一覧まとめ",
        "[https://qiita.com/ampersand-dev/items/f20e78896b868e9f2eb1 利益を上げている個人開発者とその代表的アプリのまとめ - Qiita]",
        "",
        "",
        "",
        "",
        "",
        " qiitaの記事下書き",
        "　この記事は自分のマーケティング資料でもある",
        "",
        "",
        "　選定基準",
        "　　個人開発者もしくは法人化して間もない元個人開発者であること。",
        "　　収益を出していること。もしくは出していると思われること。(目安：16万/月)",
        "　　個人開発で達成できる規模感、もしくはリリース当初の規模であれば達成できたであろう規模感であること。",
        "",
        "",
        "　その他考慮事項",
        "　　ゲーム系は除く",
        "　　3年以内を目安にする。",
        "",
        "",
        "　上記3つを満たしていると思われる人・アプリ",
        "　 敬称略",
        "\t　table:個人開発",
        "　　 ユーザー\t代表的なアプリ\thttps://twitter.com/\t参考url\t収益/月",
        "　　 だーすー\tアプリ☆メーカー、マシュマロ\tNeko_Inu_\thttps://diverdown.co.jp/\t起業",
        "　　 あたか\tQuickmemo+\tatagon\thttps://note.com/toconakis_tech\t30万",
        "\t\t\tTAKUYA\tInkdrop\tcraftzdog\thttps://www.inkdrop.app/\t100万",
        "\t\t\tgonta\t？\tgonta_appdev\thttps://appvelous.com/\t20万",
        "   nabettu\ttabmemo\tnabettu\thttps://blog.nabettu.com/\t11万",
        "   ジャバ・ザ・ハットリ\tテック・ブック・ランク、シティーズ\tnodenodenode1\thttps://www.jabba.cloud/\t?",
        "   入江シンゴ \tMENTA\tiritec_jp\thttps://note.com/iritec\t140万",
        "   Saaay\t診断アプリ\tpompompomer\thttps://saaay-blog.com/\t160万",
        "  \t田畑 浩平\tquick-zip plus\tnerd0geek1\thttps://note.com/nerd0geek1\t20万",
        "  \t佐藤雄紀\t Line Bloxx\t\thttp://app-dev.hateblo.jp/\t15万",
        "　　　takashi\t文字数カウントメモ\tcloverkizuna \thttps://miraku.dev/\t24万",
        "\t\t\tりょーた\tハヤえもん\tryota_yama\thttp://hayaemon.jp/blog/\t50万",
        "\t\t\tさちえ\tトリオキニ\tcurry_solodev\thttps://www.resume.id/satie\t譲渡",
        "",
        "　だーすー",
        "　　[https://marshmallow-qa.com/ マシュマロ]",
        "　　[https://appli-maker.jp/ おすすめアプリ - アプリ☆メーカー]",
        " あたか",
        " 　[https://play.google.com/store/apps/details?id=jp.toconakis.quickmemo 付箋todoメモ帳 QuickMemo+ - Google Play のアプリ]",
        " 　[https://apps.apple.com/jp/app/%E4%BB%98%E7%AE%8Btodo%E3%83%A1%E3%83%A2%E5%B8%B3-quickmemo/id513272765 ‎「付箋todoメモ帳 QuickMemo+」をApp Storeで]",
        "　gonta",
        "　　[https://appvelous.com/product.php Appvelous:Product]",
        "\tnabettu",
        "\t\t[https://tabmemo.com/ tabmemo]",
        "\tジャバ・ザ・ハットリ",
        "\t　[https://www.cityz.jp/categories/all 海外転職、海外移住｜シティーズ]",
        "\t　[https://www.techbookrank.com/ 技術書ランキング | テック・ブック・ランク]",
        "　入江シンゴ",
        "　　[https://menta.work/ プログラミングの質問し放題。メンターにオンラインで相談しよう。｜MENTA（メンタ）]",
        "　Saaay",
        "　　[https://play.google.com/store/apps/developer?id=Testii Google Play での Testii の Android アプリ]",
        " 田畑 浩平",
        "  [https://quick-zip.plus/ quick-zip plus]",
        "　佐藤雄紀",
        "　　[https://apps.apple.com/jp/app/%E9%A0%AD%E3%81%8C%E8%89%AF%E3%81%8F%E3%81%AA%E3%82%8B%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%83%91%E3%82%BA%E3%83%AB-line-bloxx/id993950628 ‎「頭が良くなるブロックパズル Line Bloxx」をApp Storeで]",
        "　takashi",
        "　　[https://apps.apple.com/jp/app/id933469728 ‎「文字数カウントメモ」をApp Storeで]",
        "　　[https://play.google.com/store/apps/details?id=com.clover.strcntmemo 文字数カウントメモ - Google Play のアプリ]",
        "　りょーた",
        "　　[https://apps.apple.com/jp/app/%25E3%2583%258F%25E3%2583%25A4%25E3%2581%2588%25E3%2582%2582%25E3%2582%2593-%25E9%259F%25B3%25E6%25A5%25BD%25E3%2583%2597%25E3%2583%25AC%25E3%2583%25BC%25E3%2583%25A4%25E3%2583%25BC/id717639970?ign-mpt=uo%3D4 ‎「ハヤえもん - 音楽プレーヤー」をApp Storeで]",
        "　　[https://play.google.com/store/apps/details?id=com.edolfzoku.hayaemon2 ハヤえもん - 無料音楽プレイヤー - Google Play のアプリ]",
        "　さちえ",
        "　　[https://triokini.com/ トリオキニ]",
        "",
        "",
        "　上記3条件を満たしていないが、凄いアプリ",
        "　　table:個人開発",
        "　　 ユーザー\t代表的なアプリ\ttwitter\t参考url\t備考",
        "　　 ふりふら\tまつろぱれっと\tsleepmuse\thttp://sleepingmuseum.info/\t",
        "　　 きらぷか\t積読ハウマッチ\tkira_puka\thttps://memory-lovers.com/\t収益調べる"
      ]
    },
    {
      "title": "アプリをつくる手順 Ver3",
      "created": 1584149381,
      "updated": 1592540611,
      "id": "5e6c338265cf8b0017ff1cfc",
      "lines": [
        "アプリをつくる手順 Ver3",
        "これは [アプリをつくる手順v2]のアップデート",
        "",
        "　リンク",
        "　 [組み合わせタイマーのマーケティング]",
        " 　[flutterのインプット]",
        " 　[dartpubから良さげなの探す]",
        "  [flutter awesomeから良さげなの探す]",
        "",
        "　今作ってるやつ",
        "　　※ [アプリ構築テンプレート]をコピペして必要な情報を書き込んでいく",
        "　 ※ [アプリの広告・宣伝用の言葉のテンプレート]",
        "　　なし",
        "",
        "　完成したアプリ",
        "　　[組み合わせタイマー]",
        "　　[まであと何分]",
        "　　[Let's search for Icon]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " 要件定義・設計",
        "　　[アプリアイデア]を参考に",
        "　　[デザイン]",
        "　　[マーケティング(開発前)]",
        "",
        "",
        "　開発",
        "　　[各種インストール・設定 - flutter -] 初回のみ",
        "　　[プロジェクトの作成・初期設定 - flutter -]",
        "　　[react環境構築] reactの場合",
        "　　[githubの設定]  だいたいここまでで30分",
        "　　[firebaseの開発環境と本番環境を分離する - flutter -] だいたいここまでで1時間",
        "　　[匿名ログイン + firestore] <- ここがアプリの基本形 だいたいここまでで1.5時間",
        "　　[firebaseの機能をプロジェクトに追加する - flutter -]",
        "　　[ロギングの設定 -flutter-]",
        "　　[中華フォントから日本語フォントに変更する]",
        "  [バイブレーション - flutter -]",
        "",
        "　実機デバック",
        "　 [androidのリリースビルド動作確認]",
        "　 [iosのリリースビルド動作確認]",
        "",
        "　リリース",
        "　　[リリースビルド - flutter -]",
        "　　[アイコン - flutter -]",
        "",
        "　運用・保守・改善・マネタイズ",
        "　　[プロモーションサイトの作成]",
        "　　[アプリのマーケティング・広告(リリース前後)]",
        "　　[アプリのアップデート - flutter -]",
        "　　[androidの鍵を忘れた場合の更新方法]",
        "　　 参考：[androidの署名の仕組み]",
        "",
        "　参考",
        ""
      ]
    },
    {
      "title": "各種インストール・設定 - flutter -",
      "created": 1584233133,
      "updated": 1584233190,
      "id": "5e6d7a9fd98f8c00178c37e3",
      "lines": [
        "各種インストール・設定 - flutter -",
        " [dartのセットアップ]",
        " [flutterのセットアップ]",
        " [Intelij IDEAのインストール・設定]",
        " Android studio と xcodeのインストール",
        " app storeとplay storeの登録",
        "",
        ""
      ]
    },
    {
      "title": "プロジェクトの作成・初期設定 - flutter -",
      "created": 1584233672,
      "updated": 1584234609,
      "id": "5e6d7cc5d98f8c00178c3923",
      "lines": [
        "プロジェクトの作成・初期設定 - flutter -",
        " [inteliJ IDEA からプロジェクトを作成]",
        " flutter upgrade",
        "　[静的解析の追加]",
        "　[ディレクトリの作成]",
        " [D8: Cannot fit requested classes in a single dex file]の対策をする",
        "  [.javaは非推奨のAPIを使用またはオーバーライドしています。]の対策をする",
        "  このタイミングで、アプリをandroidとiosで実行して起動するか確かめる",
        "  　androidはSyncを忘れずに、うまく行かない場合は`flutter clean`",
        ""
      ]
    },
    {
      "title": "githubの設定",
      "created": 1584234621,
      "updated": 1584234623,
      "id": "5e6d807a9e9c470017e5920b",
      "lines": [
        "githubの設定",
        " 毎日自動的にgithubへpushする",
        " 　[githubでプライベートプロジェクトを作る]",
        "  [毎日自動的にpushする]",
        "  　git する `github環境完了`",
        ""
      ]
    },
    {
      "title": "firebaseの機能をプロジェクトに追加する - flutter -",
      "created": 1584234677,
      "updated": 1584234678,
      "id": "5e6d80b39a47de0017608560",
      "lines": [
        "firebaseの機能をプロジェクトに追加する - flutter -",
        "",
        "　firestoreの設定",
        "　 [firesotreの動作確認設定]",
        "　 [androidのリリースビルド動作確認]",
        "　 [iosのリリースビルド動作確認]",
        "　　`git commit -m 'firestore動作確認終了'`",
        "",
        "　auth設定",
        "　 メールアドレス",
        "　  [Error: CocoaPods's specs repository is too out-of-date to satisfy dependencies.]が出た場合",
        "　　 [authの設定]",
        "　　 [メールアドレスの動作確認]",
        "　　 リリースビルドも確認する",
        "　　　`git commit -m 'authメアド動作確認終了'`",
        "　　google sign in ",
        "　　 [google sign in設定]",
        "　　 [androidのgoodle sign in 本番と開発を分けている場合]",
        "　　 [iosのgoogle sign in設定]",
        "　　 [iosのauthの設定 開発と本番を分ける場合]",
        "　　 リリースビルドも確認する",
        "　　  `flutter build apk && flutter install -d 8A1X0K39B && flutter build ios && flutter install -d 3ee81a2d532b64f11598f4f703bafcbb228dded3`",
        "　　　`git commit -m 'authgoogole動作確認終了'`",
        "　　apple sign in",
        "   [apple sign inの設定]",
        "",
        " crashlytics",
        " 　[Crashlyticsの設定]",
        " 　画面つくる",
        "",
        "　analysis",
        "　　[https://pub.dev/packages/firebase_analytics#-readme-tab- firebase_analytics | Flutter Package]",
        "",
        "　admob",
        "　 [admobの設定]",
        "　　[https://pub.dev/packages/admob_flutter admob_flutter | Flutter Package]",
        ""
      ]
    },
    {
      "title": "SEO",
      "created": 1584235186,
      "updated": 1584612737,
      "id": "5e6d82af9d77ce0017b1199e",
      "lines": [
        "SEO",
        ""
      ]
    },
    {
      "title": "アプリのマーケティング・広告(リリース前後)",
      "created": 1584235209,
      "updated": 1592210011,
      "id": "5e6d82c7b878080017838b5f",
      "lines": [
        "アプリのマーケティング・広告(リリース前後)",
        " SEO",
        "  　[https://scrapbox.io/admin-guild/%E3%82%B5%E3%82%A6%E3%83%8A%E3%82%A4%E3%82%AD%E3%82%BF%E3%82%A4SEO%E6%94%B9%E5%96%84 サウナイキタイSEO改善 - 運営者ギルド(メンバー限定公開)]",
        "  　[https://scrapbox.io/admin-guild/SEO%E3%82%B5%E3%82%A6%E3%83%8A%E3%82%A4%E3%83%88 SEOサウナイト - 運営者ギルド(メンバー限定公開)]",
        "  　[https://scrapbox.io/admin-guild/SEO SEO - 運営者ギルド(メンバー限定公開)]",
        "",
        "　ASO",
        "　　[ASO]",
        "",
        "　メディア掲載",
        "　 mobile",
        " 　　[https://miraku.dev/android-promotion/ 無料でAndroidアプリを宣伝する方法│Miraku]",
        " 　　[https://miraku.dev/ios-promotion/ 無料でiPhoneアプリを宣伝する方法│Miraku]",
        " 　　[http://www.sawadaru.com/blog/?p=490 アプリレビュー依頼先一覧（iOS＆Android） | Sawalog]",
        " 　　[https://www.find-job.net/startup/iphone-android-press-site こんなにあった! iPhone/Androidアプリを出す時にリリースを送りたい媒体53個総まとめ【全て無料】 | Find Job! Startup]",
        "　　web",
        "   [https://www.memory-lovers.blog/entry/2019/09/02/200000 個人開発したWebサービスをリリースした後にやったこと / やり続けていること - くらげになりたい。]",
        "   [https://matome.naver.jp/odai/2155579348601301801 個人開発のサービス/アプリを宣伝できるサイトまとめ - NAVER まとめ]",
        "   [https://qrunch.net/@diypcrooms/entries/cyUIdyz9hOWkDirD 個人でWebサービスを公開した時にやったことリスト | Qrunch（クランチ）]",
        "　　上記以外のメディアにまとめてもらう",
        "　　　アイコン検索サイトまとめてきなサイト",
        "　　　コリスのようなサイトに送る",
        "　　SNS他",
        "  　Qiita: 技術記事",
        "  　note: 技術じゃない記事",
        "  　Crieit: 技術記事 / 個人開発記事 / クロス投稿",
        "  　twitter",
        "  　運営者ギルド",
        "",
        "　有償",
        "　　メディア",
        "　　ツイッター",
        "　　　twitter広告",
        "　　　GIZMODE的なやつ",
        "　　　インフルエンサーに頼む",
        "",
        "　　[アプリ広告TODO]",
        "",
        "",
        "",
        "",
        "",
        "　参考",
        "　　[https://www.manicyouth.jp/webdesign-matome-promotion-of-service/ アプリやネットサービスのおしゃれなプロモーションサイト47選]",
        "　 [https://www.snapchat.com/l/ja-jp/ Snapchat - その瞬間を最速でシェア！]",
        "　　[https://www.misawa.co.jp/50th/sumai/ いきものたちの巣まい図鑑 | ミサワホーム]",
        "　　[https://www.figma.com/file/Ip4d4vCgSb8tfHcgWvCQKK/%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC?node-id=122%3A30307 組み合わせタイマー – Figma]",
        "",
        "",
        "",
        "　過去のアプリ",
        "　　[組み合わせタイマーのマーケティング]",
        ""
      ]
    },
    {
      "title": "マーケティング(開発前)",
      "created": 1584235223,
      "updated": 1585377805,
      "id": "5e6d82d371038b0017878e1c",
      "lines": [
        "マーケティング(開発前)",
        "　過去つくったもの",
        "　　[組み合わせタイマーのマーケティング]",
        "",
        " 今作っているもの",
        "　　[まであと何分]",
        "",
        "",
        " [https://checklist-checkly.herokuapp.com/posts/52 チェクリー]",
        "",
        "　何をつくるか",
        "　　決まっている場合",
        "　　決まっていない場合",
        "　　　[https://qiita.com/jabba/items/1a49e860a09a613b09d4 開設後３週間で収益１０万円を得た個人開発サイトでやったことの全部を公開する - Qiita]",
        "",
        "",
        "　マネタイズはどうするか",
        "　　広告",
        "　　　[https://qiita.com/appxxx77/items/e8b5796cfdd27104e345 宣伝費をケチる個人アプリ開発者にお灸を据える - Qiita]",
        "　　月額課金",
        "　　買い切り",
        "　　複数の組み合わせ",
        "　　参考",
        "　　　[https://www.jabba.cloud/20200227-monetization/ 個人開発アプリは戦闘能力に合った課金モデルを決めてから企画しよう - ベルリンのITスタートアップで働くソフトウェアエンジニアのブログ]",
        "",
        "",
        "　競合調査",
        "　　app store",
        "　　play store",
        "　　web",
        "",
        "",
        "　参考",
        "　　[https://gyazo.com/7ab27a9a777634f35b04befeb9f9748a]",
        "  アクティブユーザーとターゲット層を明確にする",
        "",
        "",
        "",
        ">対象ユーザーを特定する",
        "> そのユーザーが欲しいモノ、気に入っている他製品をとことん調査してコピーする",
        "> 最後の最後に少しだけ自分の味付けを加える",
        "[https://qiita.com/jabba/items/1a49e860a09a613b09d4 開設後３週間で収益１０万円を得た個人開発サイトでやったことの全部を公開する - Qiita]",
        "",
        ">Q9. 個人開発したいけどネタが無いです",
        "> うまく収益を上げている人は",
        "> 「既にあるけど自分が一番良いと思うのが無かったから作った」",
        "> パターンが多い気がします。",
        "[https://note.com/toconakis_tech/n/n17d5ed947c03 プロ個人開発ってどんな感じ？ vol.1｜プロ個人 /ATAKA (安宅倫広)｜note]",
        "",
        ">Q21. 売れる方法を教えて下さい",
        "> 正直、運の要素が強いので、運をあげる行動が有効だと思います。",
        "> アプリ運は、ユーザーが喜ぶ行動を継続することで上がっていきます。",
        "> 僕が見る限り、売れている人は全員、ユーザーサポートが丁寧です",
        "[https://note.com/toconakis_tech/n/n51dc9913bf9c プロ個人開発ってどんな感じ？ vol.3｜プロ個人 /ATAKA (安宅倫広)｜note]",
        "",
        ">Q24. どんな内容だと売れると思いますか?",
        "> 新しくてこの世に無いアイデアの価値を伝えるには100億円配らないと、大企業でも難しいと思っています。",
        "> 既にみんなが知っていて、もっと良いの無いかな？と探していそうな内容の改良版から始めるのが良いと思います。",
        "> 例えば、OS標準のアプリの改良版や、既に人気のアプリの改良版です。",
        "[https://note.com/toconakis_tech/n/n51dc9913bf9c プロ個人開発ってどんな感じ？ vol.3｜プロ個人 /ATAKA (安宅倫広)｜note]",
        "",
        ">毎日感じるちょっとした問題を見つける",
        "> 僕は別に特別でもなんでもありません。人は意外と同じ事を感じたり考えて生きています。だから、もし自分が何か解決したい問題を抱えていたら、そこには同じように悩んでいる人がごまんといます。僕は過去にもたくさんアプリを作りましたが、ウケたものは共通して自分の問題を解決するものでした。",
        "[https://blog.craftz.dog/how-i-built-a-markdown-editor-earning-1300-mo-profit-inkdrop-c6691eca7091 Markdownエディタを作って月15万円稼ぐまでにやったこと — Inkdrop - 週休７日で働きたい]",
        "",
        ">自分自身がこれだ！と思えるまでプロトタイプを作る",
        "> アプリの価値とは問題を解決することです。まずは MVP (Minimal Viable Product — 最低限の価値を提供する製品)を作るにあたって、僕は浮かんでくる全ての余計な「あったらいい機能」を省いて、自分の問題を解決することだけに集中しました。",
        "[https://blog.craftz.dog/how-i-built-a-markdown-editor-earning-1300-mo-profit-inkdrop-c6691eca7091 Markdownエディタを作って月15万円稼ぐまでにやったこと — Inkdrop - 週休７日で働きたい]",
        "",
        ">おすすめの案出しは自分が欲しいものかつ、自分以外のターゲットを明確にしたものを上げる事",
        "[https://appvelous.com/tech/app-develop-flow/ アプリ開発の流れ | 個人アプリ開発奮闘記]",
        "",
        ">考えること",
        "> ・私の場合、「自分が感じた悩み」と「人が感じているであろう悩み」を考えます。",
        "[https://miraku.dev/planning/ 個人アプリ開発（企画・アイディア出し）│Miraku]",
        "",
        ">・ペルソナ設定",
        "> ・サービスが解決するユーザーペイン、提供する便益",
        "> ・いつ、どのタイミングでマネタイズするのか",
        "> あたりを考え、包括的なユーザー体験を設計するくらいしか新たにやることがなくなるので、それで企画力が上がることになります。",
        "[https://note.com/nerd0geek1/n/n7b72fdf7c42d おいでよ 個人開発の沼｜田畑浩平 | iOS Engineer x Designer｜note]",
        "",
        "",
        "ペルソナ",
        "どんなユーザーか",
        "何に困っているか",
        "どう解決するか",
        ""
      ]
    },
    {
      "title": "デザイン",
      "created": 1584235393,
      "updated": 1584235409,
      "id": "5e6d837cb878080017838c44",
      "lines": [
        "デザイン",
        "　ピンタレスト",
        "　ドリブル",
        "　から調べる",
        ""
      ]
    },
    {
      "title": "アプリ構築テンプレート",
      "created": 1584235964,
      "updated": 1592098399,
      "id": "5e6d85b8fecf97001731c8f9",
      "lines": [
        "アプリ構築テンプレート",
        "　このページをコピペする",
        "　名前をアプリ仮名に変更する",
        "",
        " [アプリの広告・宣伝用の言葉のテンプレート]",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        " 文言の策定",
        "　　table:文言",
        "　 　 仮アプリ名\tgrouping_timer",
        "　 　 アプリ名\t組み合わせタイマー",
        "　 　 キャッチコピー\t組み合わせてタイマーを想像しよう",
        "　 　 説明\t略",
        "",
        "　どんなアプリか？",
        "",
        "　既存の困りごとはなにか？",
        "",
        "　このアプリで意識すること",
        "",
        " テーマカラー",
        "",
        " 競合調査で意識するアプリ",
        " 　名前",
        " 　ダウンロード数",
        "",
        " 考えたこと",
        "",
        "　決めたこと",
        "",
        "　デザイン",
        "",
        ""
      ]
    },
    {
      "title": "flutter awesomeから良さげなの探す",
      "created": 1584259180,
      "updated": 1584838773,
      "id": "5e6de06975f75b00177cc142",
      "lines": [
        "flutter awesomeから良さげなの探す",
        "　[https://flutterawesome.com/ Flutter Awesome]",
        "",
        " ui",
        "　　[https://flutterawesome.com/a-flutter-staggered-grid-view-which-supports-multiple-columns/ A Flutter staggered grid view which supports multiple columns]",
        "",
        "　media",
        "  [https://flutterawesome.com/a-material-design-slider-and-range-slider-with-rtl-support/ A material design slider and range slider with rtl support]",
        "  [https://flutterawesome.com/an-extension-of-the-flutter-material-slider/ An extension of the Flutter Material Slider]",
        "",
        " elements",
        " 　アニメーション",
        "　  [https://flutterawesome.com/easily-add-staggered-animations-to-your-listview-and-row-children/ Easily add staggered animations to your ListView and Row children]",
        " 　 [https://flutterawesome.com/a-flutter-package-to-create-cool-and-beautiful-text-animations/ A flutter package to create cool and beautiful text animations]",
        "　　　[https://flutterawesome.com/a-collection-of-loading-indicators-animated-with-flutter/ A collection of loading indicators animated with flutter]",
        "　　popup",
        "　　　[https://flutterawesome.com/a-flutter-popup-menu-support-both-ios-and-android/ A flutter popup menu support both iOS and Android]",
        "　　　[https://flutterawesome.com/a-flutter-package-to-help-you-beautify-your-app-popups/ A flutter package to help you beautify your app popups]",
        "  dialog",
        "   [https://flutterawesome.com/a-new-flutter-package-project-for-simple-and-awesome-dialogs/ A new Flutter package project for simple and awesome dialogs]",
        "  スプラッシュ画面",
        "  　[https://pub.dev/packages/flutter_native_splash flutter_native_splash | Dart Package]",
        "　input",
        "　　なし",
        "",
        " components",
        " 　Progress",
        "　  [https://flutterawesome.com/a-customable-wave-progress-widget/ A customable wave progress widget]",
        "　  [https://flutterawesome.com/a-liquid-progress-indicator-for-flutter/ A liquid progress indicator for Flutter]",
        "　 floating",
        "　  [https://flutterawesome.com/flutter-plugin-to-implement-a-material-design-speed-dial/ Flutter plugin to implement a Material Design Speed Dial]",
        "　  [https://flutterawesome.com/flutter-floating-action-button-with-speed-dial/ Flutter Floating Action Button with Speed Dial]",
        "   [https://flutterawesome.com/a-flutter-package-to-create-a-nice-circular-menu-using-a-floating-action-button/ A Flutter package to create a nice circular menu using a Floating Action Button]",
        "",
        " デザインおしゃれで素敵",
        "  [https://flutterawesome.com/a-best-flutter-ui-templates/ A best flutter ui templates]",
        "  [https://flutterawesome.com/a-flutter-app-that-makes-it-a-breeze-to-know-your-pet-plant-more/ A flutter app that makes it a breeze to know your pet plant more]",
        "　　[https://flutterawesome.com/dashboard-concept-made-with-flutter/ Dashboard concept made with Flutter]",
        "　　[https://flutterawesome.com/flutter-hotel-booking-ui/ Flutter Hotel Booking UI]",
        ""
      ]
    },
    {
      "title": "組み合わせタイマーをつくった",
      "created": 1584265285,
      "updated": 1584265458,
      "id": "5e6df842c9832c00172b5aec",
      "lines": [
        "組み合わせタイマーをつくった",
        "qiita",
        "[https://qiita.com/aiiro_swift/items/fe27eae6e708b187d341 個人開発したアプリが大コケしてるので失敗要因を分析してみた - Qiita]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "dartpubから良さげなの探す",
      "created": 1584407018,
      "updated": 1584408312,
      "id": "5e7021e62b44df001767dcbc",
      "lines": [
        "dartpubから良さげなの探す",
        "　必要になった時に検索して引っかかるやつは書かない",
        " 良さげなやつ、記憶の片隅に置いておきたい",
        " 　[https://pub.dev/packages/flutter_staggered_grid_view flutter_staggered_grid_view | Flutter Package]",
        " 　[https://pub.dev/packages/percent_indicator percent_indicator | Flutter Package]",
        "　　[https://pub.dev/packages/flutter_spinkit flutter_spinkit | Flutter Package]",
        "　　[https://pub.dev/packages/flutter_swiper flutter_swiper | Flutter Package]",
        "　　[https://pub.dev/packages/nested nested | Flutter Package] -> wrapをいい感じに可読性を上げてくれるはず streamとか",
        "　　[https://pub.dev/packages/auto_size_text auto_size_text | Flutter Package]",
        ""
      ]
    },
    {
      "title": "flutter + provider + auth(匿名) + firestoreでtodoアプリをつくる",
      "created": 1584411719,
      "updated": 1584411820,
      "id": "5e7034457654b50017952e8c",
      "lines": [
        "flutter + provider + auth(匿名) + firestoreでtodoアプリをつくる",
        " この記事の目的",
        " 　この構成がすべての基準だと思っている。今は",
        " 　他に書いている人いないから書いた",
        ""
      ]
    },
    {
      "title": "firebaseの開発環境と本番環境を分離する - flutter -",
      "created": 1584501693,
      "updated": 1586324330,
      "id": "5e71939a82fcd00017185e4d",
      "lines": [
        "firebaseの開発環境と本番環境を分離する - flutter -",
        "　firebase",
        "  [BundleIdentifierの変更]",
        " 　[firebaseプロジェクトの作成]",
        " 　　本番と開発の2つのプロジェクトを作る",
        " 　　マイルールとして開発とは-devをつける",
        " 　[Setting]",
        " 　 本番、開発の両方でやる",
        "  [androidアプリにFirebaseを追加]",
        "  　本番環境から先に作成すること。(SHA-1が重複できないため)",
        "  　開発にSHA-1は設定しない",
        "  [iosアプリにFirebaseを追加]",
        " 　ここまでできたらgitするといい",
        "",
        " 環境の分離",
        "  [androidの環境を本番と開発に分離する]",
        "  [iosの環境を本番と開発に分離する]",
        "",
        ""
      ]
    },
    {
      "title": "匿名ログイン + firestore",
      "created": 1584598855,
      "updated": 1586324650,
      "id": "5e730f45f9472f00172c5c62",
      "lines": [
        "匿名ログイン + firestore",
        "[https://qiita.com/superman9387/items/0c71be7e398441229fc3 Firestoreのセキュリティルールでほぼ確実に使うメソッド - Qiita]",
        "[https://qiita.com/ampersand-dev/items/636b78c78033ff3669a2 flutter + firebase auth + firestore + provider で匿名ユーザーごとにデータを管理する - Qiita]",
        ""
      ]
    },
    {
      "title": "flutterのインプット",
      "created": 1584600303,
      "updated": 1584612031,
      "id": "5e7314eb848f080017e4b71a",
      "lines": [
        "flutterのインプット",
        "　[https://itome.team/blog/2020/01/flutter-with-dart27/ Dart2.7時代のFlutter]",
        "　[https://gyazo.com/ad4b4efe76c01488d0ee19f9d042f49f]",
        "",
        "",
        "　Collection ifとCollection for",
        "　[https://gyazo.com/f24d7b8f3e722aa76453f4ebfe92ef6e]",
        " [https://gyazo.com/8f997ceaf6de10aabaee2dc6a3075759]",
        "",
        "",
        "　ロギング",
        "　　[https://pub.dev/packages/logger logger | Dart Package]",
        "　　[https://qiita.com/quqjp/items/8e42f3479da3b8a905ee leisim/logger をつかってログ出力を行う - Qiita]",
        "",
        "　final",
        "　[https://gyazo.com/bdc80068d110a37aa20e8c00a9331e08]",
        "",
        "",
        ""
      ]
    },
    {
      "title": "完全栄養食",
      "created": 1584748131,
      "updated": 1584754169,
      "id": "5e75566062971b001749208b",
      "lines": [
        "完全栄養食",
        "　[http://www.comp.jp/ COMP 完全食]",
        "　　パウダー",
        "　　 3500円",
        "",
        "　[https://basefood.co.jp/ 完全食 BASE FOOD（ベースフード）]",
        "　　パン　一食390円",
        "　　パスタ 一食390円",
        "　バランサー（BALANCER）",
        "　All-in",
        "　　パスタ",
        "　　ラーメン？",
        "",
        "",
        "table:比較",
        " 名前\t値段(一食)\t備考",
        " comp\t700\tパウダー",
        " All-in PASTA（オールイン パスタ）\t480\tパスタ",
        " BASE BREAD（ベースブレッド）\t390\t1食で1日に必要な栄養素の1/3を含み、一般的なロールパンと比べて糖質35%オフ。袋から出してそのまま食べられる",
        "",
        " comp 1食分",
        "  パウダーの場合、186g",
        "  scopはすりきり35g なので5回",
        "  1袋1000gなので5回分",
        "  一袋3500円なので700円",
        "[https://gyazo.com/d15418722a03b6d6cf93abaa73b44c41]",
        "",
        "",
        "　BASE BREAD（ベースブレッド）",
        "　　しばらくはこれで行ってみる。",
        "　　ただし、これだけでは足りない",
        "　　　タンパク質",
        "　　　　タンパク質 28g(1食2個)",
        "　　　　タンパク質は体重分取ればいい。",
        "　　　　一回で40gまでしかとれない。",
        "　　　　プロテインを21g * 2回飲む",
        "　　　　そうすれば、もう一食でタンパク質とれなくても大丈夫",
        "　　これは炭水化物や脂質、糖分が足りないので、通常の食事で白米2倍摂取してみる。",
        "　　一応マルチビタミン、ミネラル",
        "",
        "",
        "compは5杯が一食の適量だが今まで2杯しか飲んでいなかった。栄養素などはパンで補える。",
        "パンは栄養素が十分でカロリーが半分でカロリーが問題だがそれでも、comp2杯分(280kcal)よりも遥かに多い(440kcal)",
        "",
        ""
      ]
    },
    {
      "title": "部屋のレイアウト",
      "created": 1584843006,
      "updated": 1584844817,
      "id": "5e76c8fc8e0cd300175d0dbe",
      "lines": [
        "部屋のレイアウト",
        "　今の家",
        "　　[https://gyazo.com/c50900e70f4728749eb573f351c16162]",
        "　　リビング8畳",
        "　現在の生活領域",
        "　　2段ベッドと仕事場 + (収納)",
        "　　230cm * 280cm",
        "　　6.44平方メートル",
        "　　3.5畳",
        "",
        "　1畳が1.8平方メートル",
        "　4.5畳が7.45平方メートル",
        "　6畳(京間)が約11平方メートル",
        ""
      ]
    },
    {
      "title": "まで後何分 - 開発前マーケティング -",
      "created": 1585377915,
      "updated": 1585551453,
      "id": "5e7ef242bb4632001737d4c9",
      "lines": [
        "まで後何分 - 開発前マーケティング -",
        "[マーケティング(開発前)]",
        "[まであと何分]",
        "",
        "　要件",
        "　　つくるもの",
        "　　　指定した時間まであと何分か表示される",
        "　　　[*** 時間間隔<視覚情報]",
        "　　　視覚優位者のためのタイマー",
        "　　構成、技術要件",
        "　　　できるだけシンプル",
        "　　　匿名ログイン + firestore",
        "",
        "",
        "",
        "　シチュエーション",
        "　　仕事中に画面表示させていて集中力を高める。",
        "　　LDで時間間隔ない人向けでもある",
        "　　子供向け",
        "　　毎日のルーチン",
        "　　時間管理",
        " メモ",
        " 　つくるものが決まっているので、そこから決めていく。",
        "　　残り時間、もしくは残り割合で赤青黄が見える",
        "　　終わると画面色が変化して教えてくれるなど",
        "　　残り割合をwaveする",
        "　　となると画面上に何の情報を載せるか？",
        "　　　検討",
        "　　　　現在時刻",
        "　　　　終了時刻",
        "　　　　のこりの割合　waveで表現する？",
        "　　　　のこり時間",
        "　　　　完了時に画面が点滅する",
        "　言葉のメモ",
        "　　制限時間",
        "　　視覚情報で時間管理ができるタイマー",
        "",
        "",
        "　ペルソナ",
        "　どんなユーザーか",
        "　何に困っているか",
        "　どう解決するか",
        "",
        "",
        "　類似アプリを探す",
        "  検索ワード　",
        "  　時間管理",
        "  　残り時間",
        "",
        "",
        "> 対象ユーザーを特定する　",
        "> そのユーザーが欲しいモノ、気に入っている他製品をとことん調査してコピーする",
        " これはLD視覚優位者",
        "",
        " 考えたこと",
        "  時間単位より、日付単位のアプリが多い。時間単位だったら標準のでいいからだろうか。",
        "  個人的に欲しいのは日付単位",
        "  仕事場の右側に置いてディスプレイつけっぱなしにする感じ",
        "　　アプリのターゲットをどこに置くか",
        "　　　時間単位か、[- 日付単位か、その両方か？]",
        "　　　時間単位の場合、(完成度の高い)デフォルトアプリとどう差別化するか？",
        "　　 画面が大きいことは大事。デフォルトアプリは小さい。",
        " 　　　　",
        "",
        ""
      ]
    },
    {
      "title": "まで後何分 - デザイン -",
      "created": 1585385121,
      "updated": 1585553992,
      "id": "5e7f0e9ed6393b00171a6b87",
      "lines": [
        "まで後何分 - デザイン -",
        " https://www.figma.com/file/1WLW71TNNqCOrKquHEWTYH/まであと何分?node-id=20305%3A29381",
        "",
        "",
        "　参考",
        "　　色の設定",
        "　　　[https://liskul.com/wm_cpsychology-4111 【成果を上げる色の選び方】色彩心理学から学ぶ サイトカラーの「正解」]",
        "　　　",
        "",
        "　画面",
        "　　スプラッシュ画面",
        "　　　スプラッシュ画面から実行画面へ遷移",
        "　　実行",
        "　　設定",
        "　　リスト",
        "　　　１度きり",
        "",
        "",
        "　リストの検討",
        "　　１度きり",
        "　　朝のルーチン",
        "　　１１時まで",
        "　　１４時まで",
        "",
        "",
        "　例の拡張FABを使う",
        "　　SETTING",
        "　　DOING",
        "　　 一度切り実行",
        "　　 リストから実行",
        "　　LISTS",
        "　　FORM",
        "",
        "",
        " テーマカラー",
        " 　未定",
        " 　色はシンプルというか没個性的にすべきか",
        " 　　というのもシンプルすぎるアプリなので",
        "",
        ""
      ]
    },
    {
      "title": "まで後何分 - 開発 -",
      "created": 1585549521,
      "updated": 1585549533,
      "id": "5e8190cf60e0b2001705654e",
      "lines": [
        "まで後何分 - 開発 -",
        "　freezed",
        "　logging",
        "",
        "",
        ""
      ]
    },
    {
      "title": "プロモーションサイトの作成",
      "created": 1586934288,
      "updated": 1586950705,
      "id": "5e96b207c207050017b00e5d",
      "lines": [
        "プロモーションサイトの作成",
        " flutter create",
        " 　〇〇_〇〇_promotion_site",
        "",
        " firebase hosting",
        "  本番環境にhosting",
        "  [/ampersand-flutter/hosting]を参考",
        "",
        " 実装",
        "",
        "　index.html",
        "",
        "",
        " githubに登録＆毎日の設定",
        ""
      ]
    },
    {
      "title": "アイコン - flutter -",
      "created": 1586942026,
      "updated": 1587458129,
      "id": "5e96d047fae930001750db45",
      "lines": [
        "アイコン - flutter -",
        "",
        "　[https://pub.dev/packages/flutter_launcher_icons#-installing-tab- flutter_launcher_icons | Dart Package]",
        "　[https://www.virment.com/how-to-generate-icon-for-flutter-app/ Flutterで開発したアプリのアイコン画像をiOSとAndroid用に生成する手順]",
        "",
        "",
        "[https://gyazo.com/1692e5cf2916b2a97e5d34fdd4c91512]",
        "",
        "code:zsh",
        " ",
        " dev_dependencies:",
        "   flutter_test:",
        "     sdk: flutter",
        "   flutter_launcher_icons: ^0.7.4",
        " ",
        " ",
        " flutter_icons:",
        "   android: true",
        "   ios: true",
        "   image_path_android: 'assets/images/square_icon.png'",
        "   image_path_ios: 'assets/images/square_icon.png'",
        "   adaptive_icon_background: 'assets/images/background_icon.png'",
        "   adaptive_icon_foreground: 'assets/images/foreground_icon.png'",
        " ",
        " ",
        " # For information on the generic Dart part of this file, see the",
        " # following page: https://dart.dev/tools/pub/pubspec",
        " ",
        " # The following section is specific to Flutter.",
        " flutter:",
        "",
        "",
        " アダプティブアイコンのフォアグラウンドサイズはバックグランドの66%のサイズで作る",
        "",
        "flutter pub run flutter_launcher_icons:main",
        ""
      ]
    },
    {
      "title": "ロギングの設定 -flutter-",
      "created": 1587103386,
      "updated": 1587103444,
      "id": "5e994697d51ed700171dfc76",
      "lines": [
        "ロギングの設定 -flutter-",
        "　[https://pub.dev/packages/logger logger | Dart Package]",
        "　[https://qiita.com/quqjp/items/8e42f3479da3b8a905ee leisim/logger をつかってログ出力を行う - Qiita]",
        "",
        "　code:env",
        "　 final Level logLevel = Level.debug;",
        "",
        " code:zsh",
        "  class MyApp extends StatelessWidget {",
        "    @override",
        "    Widget build(BuildContext context) {",
        "      Logger.level = logLevel;",
        "      final logger = Logger(printer: SimpleLogPrinter('MyApp'));",
        "      logger.d('- - - - - - - - - - - - - - - - - - - - - - - -');",
        "  ",
        "      // logger.d('Logs a debug message');",
        "      // logger.i('Public Function called');",
        "      // logger.w('This might become a problem');",
        "      // logger.e('Something has happened');",
        "  ",
        "  ",
        "      return OKToast(",
        "        child: MaterialApp(",
        "          debugShowCheckedModeBanner: isRelease ? false : true,",
        "          title: appName,",
        "          theme: lightTheme,",
        "          darkTheme: darkTheme,",
        "          routes: <String, WidgetBuilder>{",
        "            '/': (context) => AuthProcess(),",
        "            '/only_once': (context) => OnlyOncePage(),",
        "            '/setting': (context) => SettingPage(),",
        "          },",
        "        ),",
        "      );",
        "    }",
        "  }",
        ""
      ]
    },
    {
      "title": "バイブレーション - flutter -",
      "created": 1587113772,
      "updated": 1587113784,
      "id": "5e996f29c6334d001757c5d5",
      "lines": [
        "バイブレーション - flutter -",
        "code:zsh",
        " ",
        " vibrate() async {",
        "   if(isAndroid()) {",
        " ",
        "     // 0.5秒待って2秒を３回",
        "   Vibration.vibrate(pattern: [500, 2000, 500, 2000, 500, 2000]);",
        "   } else {",
        "     Vibration.vibrate();",
        "     await  Future.delayed( Duration(seconds:2));",
        "     Vibration.vibrate();",
        "     await  Future.delayed( Duration(seconds:2));",
        "     Vibration.vibrate();",
        "     await  Future.delayed( Duration(seconds:2));",
        "   }",
        " }",
        ""
      ]
    },
    {
      "title": "リリースビルド - flutter -",
      "created": 1587362487,
      "updated": 1587380412,
      "id": "5e9d3aaad82a550017f0daa5",
      "lines": [
        "リリースビルド - flutter -",
        "",
        " [App Storeでアプリを公開する]",
        " [Google Play Storeでアプリを公開する]",
        " [リリースビルド]",
        "",
        "",
        "　　リリースに必要なスクリーンショット、文章など",
        "　　　スクリーンショット",
        "　　　 シミュレーターでスクショとったあとfigamaでリサイズ",
        "　　　 debugラベル、広告を外すのを忘れずに",
        "　　　 iphone6.5インチディスプレイ （iPhone 11 Pro Max, iPhone 11）1242 x 2688",
        "　　　 iphone5.5インチディスプレイ（ iPhone 6s Plus、iPhone 7 Plus、iPhone 8 Plus） 1242 x 2208",
        "　　　 ipad pro 12.9(第2世代)インチディスプレイ  (第 2 世代 iPad Pro) 2048 x 2732",
        "　　　 1pad pro12.9(第3世代)インチディスプレイ  (第 3 世代 iPad Pro) 2048 x 2732",
        "　　　 アイコン 512 * 512",
        "　　　 アンドロイド用のスクショ、スマートフォン",
        "　　　 アンドロイド用スクショ、タブレット",
        "　　　 テレビサイズバナーなどいくつかのバナー",
        "　  テキスト",
        "　  　プロモーション用テキスト",
        "　  　概要",
        "　  　キーワード",
        ""
      ]
    },
    {
      "title": "[アプリのアップデート]",
      "created": 1587362595,
      "updated": 1592527686,
      "id": "5e9d3b0e77260000172fba2b",
      "lines": [
        "",
        " [アプリのアップデート - flutter -]",
        ""
      ]
    },
    {
      "title": "iOSアプリをアーカイブする",
      "created": 1587363676,
      "updated": 1587368083,
      "id": "5e9d3f59ad78fb0017e5ee27",
      "lines": [
        "iOSアプリをアーカイブする",
        " ",
        "",
        "　下記のに合わせる",
        "　　[https://gyazo.com/65c4d7c391d7a7c266d530fc3c60bbd3]",
        "",
        " product -> archive",
        " 　[https://gyazo.com/bfabb6419172a1be2ba709b367962ac2]",
        "",
        "  Windows→Organizer",
        "   validate appから全部yesとnext",
        "    error",
        "     [https://tech.moyashidaisuke.com/entry/flutter-launcher-icons-invalid-icon 【Flutter】flutter_launcher_iconsを使ってアプリアイコンを設定したら「Invalid App Store Icon.」エラーの時の対応 | moya tech blog〜もやテックブログ〜]",
        "   ",
        "   distibute App",
        "   [https://gyazo.com/354860ac2c302af34fb802ff4e05be03] ",
        ""
      ]
    },
    {
      "title": "Let's search for Icon",
      "created": 1587605989,
      "updated": 1592100073,
      "id": "5ea0f1e36cc198001743177d",
      "lines": [
        "Let's search for Icon",
        "参考",
        "　[アプリをつくる手順]",
        "　[組み合わせタイマーのマーケティング]",
        "",
        "　アプリ",
        "　　[マテリアルデザイン検索 - 開発前マーケティング -]",
        "　　[Let's search for Icon - デザイン -]",
        "　　[Let's search for Icon - 開発 -]",
        "　　[Let's search for Icon - 広告・宣伝 -]",
        "",
        "　url",
        "　 [https://icon-search-app.web.app/ Let's search for Icon -アイコンを特徴で検索できるWebアプリ-]",
        "　 [https://console.firebase.google.com/u/0/project/icon-search-7d660/overview?hl=ja icon-search - icon-search - Firebase コンソール]",
        "　 [https://search.google.com/search-console/performance/search-analytics?resource_id=https%3A%2F%2Ficon-search-app.web.app%2F 検索パフォーマンス]",
        "",
        " 競合",
        "　 [https://search-fa.com/ Search for Font Awesome | 日本語でアイコンフォントを簡単検索]",
        "　　[http://icon-search.jp/ 日本語でアイコンを簡単検索 | icon-search]",
        ""
      ]
    },
    {
      "title": "react環境構築",
      "created": 1587633440,
      "updated": 1587635389,
      "id": "5ea15d1e9d12bb001784b08d",
      "lines": [
        "react環境構築",
        " [ideaから新規reactアプリを作る] を参考に`npx create-react-app 〇〇 --typescript`",
        "　  github構築",
        "　  srcフォルダをリネームして避ける",
        "　  　`mv ./src ./_src`",
        "　  新規フォルダの構築",
        "　   code:zsh",
        "　    mkdir ./src && cd ./src",
        "　    mkdir ./pages ./css ./components ./types ./assets ./tests ./config ./modules",
        "　  新規ファイルの作成",
        "　  　避けたsrcから必要なのを引っ張る",
        "　  [- reset.cssとcommon.css(必要に応じて)]",
        "\t\t\t必要なモジュールをインストールする",
        "\t\t\t tool kit",
        " \t\t\t `npm install --save @reduxjs/toolkit react-redux @types/react-redux redux-logger @types/redux-logger`",
        " \t\t\t firebase",
        " \t\t\t  `npm install --save react-redux-firebase`",
        "\t\t\t マテリアルui",
        "\t\t\t   `npm install @material-ui/core`",
        "",
        "   リントの設定",
        "\t\t npx eslint --init ",
        "\t\t\t code:zsh",
        "      dev@kaihatsunoMac-mini react_ptactice_todo % npx eslint --init",
        "      ? How would you like to use ESLint? To check syntax, find problems, and enforce code style",
        "      ? What type of modules does your project use? JavaScript modules (import/export)",
        "      ? Which framework does your project use? React",
        "      ? Does your project use TypeScript? Yes",
        "      ? Where does your code run? Browser, Node",
        "      ? How would you like to define a style for your project? Use a popular style guide",
        "      ? Which style guide do you want to follow? Airbnb: https://github.com/airbnb/javascript",
        "",
        "    　[https://qiita.com/y-w/items/dcf5fb4af52e990109eb 初心者向けTypeScript用にESLintとPrettierを導入する - Qiita]のeslint",
        "　　　 過去ファイルからルール引っ張ってくる",
        "",
        ""
      ]
    },
    {
      "title": "react + firebase hosting",
      "created": 1587634494,
      "updated": 1587634971,
      "id": "5ea1612b75714200174621df",
      "lines": [
        "react + firebase hosting",
        " 参考",
        " 　[https://qiita.com/tsuto/items/0806fa11d8760797b1ad create-react-appでFirebaseホスティングにデプロイ - Qiita]",
        "",
        "code:zsh",
        " npm run build",
        " firebase deploy",
        "",
        " `firebase init`コマンドでhostingを選ぶ",
        " 　>次の質問ではfirebaseのHostingにアップロードするディレクトリが聞かれていますが、create-react-appでreactを作成した場合、ビルドしたアセットはbuildディレクトリになるので、buildと入力し、エンターキーを押す。",
        "  ? What do you want to use as your public directory? build",
        "  >シングルページアプリケーションかどうか聞かれます。yを入力してエンターキーを押す。",
        "  ",
        ""
      ]
    },
    {
      "title": "material ui のtheme",
      "created": 1587720726,
      "updated": 1587721140,
      "id": "5ea2b2142f08790017b7e3a6",
      "lines": [
        "material ui のtheme",
        "themeファイルをつくる",
        "code:ts",
        " import { createMuiTheme } from '@material-ui/core/styles';",
        " ",
        " const theme = createMuiTheme({",
        "   palette: {",
        "     primary: {",
        "       // light: will be calculated from palette.primary.main,",
        "       main: '#ff4400',",
        "       // dark: will be calculated from palette.primary.main,",
        "       // contrastText: will be calculated to contrast with palette.primary.main",
        "     },",
        "     secondary: {",
        "       light: '#0066ff',",
        "       main: '#0044ff',",
        "       // dark: will be calculated from palette.secondary.main,",
        "       contrastText: '#ffcc00',",
        "     },",
        "     // Used by `getContrastText()` to maximize the contrast between",
        "     // the background and the text.",
        "     contrastThreshold: 3,",
        "     // Used by the functions below to shift a color's luminance by approximately",
        "     // two indexes within its tonal palette.",
        "     // E.g., shift from Red 500 to Red 300 or Red 700.",
        "     tonalOffset: 0.2,",
        "   },",
        " });",
        " export default theme;",
        " ",
        "",
        "indexかappで登録",
        "code:ts",
        " ReactDOM.render(",
        "   <React.StrictMode>",
        "     <ThemeProvider theme={theme}>",
        "     <CssBaseline />",
        "       <App />",
        "     </ThemeProvider>",
        "   </React.StrictMode>,",
        "   document.getElementById('root'),",
        " );",
        " ",
        "使い方",
        "　 <Button color=\"primary\">Primary</Button>",
        "        <Button color=\"secondary\">Secondary</Button>",
        ""
      ]
    },
    {
      "title": "仕事関連 -目次-",
      "created": 1589365931,
      "updated": 1595738010,
      "id": "5ebbcc5cab9d06001ec9ed21",
      "lines": [
        "仕事関連 -目次-",
        "　参考",
        "　　[TWITTERメモ - 目次 -]",
        "",
        " 業務委託",
        " \t[フリーランス関連]",
        "　 [システムリンク - 目次 -]",
        " 転職",
        "　 [転職先候補]",
        "　 [ゆめみ社への就職活動]",
        ""
      ]
    },
    {
      "title": "ゆめみ社への就職活動",
      "created": 1589365980,
      "updated": 1595753217,
      "id": "5ebbccda37929a001e4c7b23",
      "lines": [
        "ゆめみ社への就職活動",
        " カジュアル面談準備",
        "　　whereby起動",
        "　　背景に布をかぶせる",
        "　　[- 風呂はいって身なりを整える]",
        "　　[- 発声練習する]",
        "　　[- twitterの不適切ツイート削除]",
        "　　[- ヘッドフォンとその変換ケーブル]",
        "",
        "",
        "　[カジュアル面談 - ゆめみ -]",
        "　[ゆめみ返信 1年後にきます。",
        "　[ゆめみの採用活動リンク]",
        "　[ゆめみios就職]",
        "",
        "　不明点",
        ">一方で、あくまで会社の実態をお伝えする場であり、専門的な技術内容についてのご説明は",
        "> 正式応募以降の面接でお話しさせて頂く事をご了承ください。",
        "",
        "",
        "　やりとり",
        "> なお、面談後、正式選考にお進みいただく場合には書類選考から",
        "> 開始させていただく予定でございます。",
        "",
        "　想定問答集",
        "  ",
        "",
        "",
        " MEMO",
        "  個人開発への執着",
        "",
        "",
        " [https://note.com/raykataoka/n/n5fcf80681677 不採用基準と究極の採用基準｜Ray Kataoka｜note]より",
        "  >客とは５年・１０年という単位で取引を行い、継続的にサービス進化に関わるビジネスモデルになっています。",
        "  > ",
        "  > そこにおいては、顧客ビジネス・サービス・仕様を深く理解する姿勢が必要であり、一定のプロジェクト関与期間も必要とします。それに伴って、会社への在籍期間としては比較的長い事が求められています。",
        "",
        "　　>片岡「あなたの人生の目的はなんですか？」",
        "",
        "",
        "　[https://www.vorkers.com/company.php?m_id=a0C1000000YqTOA ゆめみ 「社員クチコミ」 就職・転職の採用企業リサーチ OpenWork（旧:Vorkers）]",
        "　　>エンジニア中心の組織体制だが馴れ合いも多く、入ってみて幾分独特な社風に合う合わないが明確に別れる。 また、表と裏がある会社。仕事内容で一度役員等に嫌われてしまうと一方的なマイナス査定が否応無く下され、誰もフォローをすることなく「村八分」的扱いをされる模様。",
        "",
        "　[https://paper.dropbox.com/published/FAQ-EUNDUMiiePdHmh7RgkfSxNU 🙋‍♂️ 採用面接FAQ（新卒・中途共通）]より",
        "  > - 一方で、この先2〜3年以内に長期的・世界的な不況になる事が予想されています",
        "  > - その中では、より一層の大手・安定志向が採用環境においては起きると考えています",
        "  > - そう考えると、早い段階で一定の人数規模を獲得して、大手の一角になっておかないと、あるべき状態に到達できないと考えています",
        "",
        "  >１ヶ月の人月は５〜１０人月、人数は７〜１５名のプロジェクト、期間は３〜６ヶ月の規模が多いです",
        "",
        "　　>特に、東京以外の拠点である札幌、福岡、名古屋拠点のメンバーは東京のメンバーとプロジェクトで協働しているのですが、親密的な関係性をより早い期間で構築するために、チームビルディングの観点から、東京拠点に短期滞在してもらう事があります。",
        "",
        "  > - 2020年度は「Flutter」に力を入れております",
        "  >     - 特に商用のプロダクトでの開発を積極的に進めて、クロスプラットフォーム開発においても業界においてトップレベルの技術力獲得を目指しております",
        "",
        " [https://paper.dropbox.com/published/town-meeting-UeuIXV61ZIzVPh7JwfbK4Qk 京都の実態ってどうよ？town meeting] ",
        "　　>京都はスマホのネイティブアプリ案件が増えてきた👍 （筒井）",
        "　　>当初、僕はアプリやるつもりだったが、入社当時は、案件がなかったのでフロントエンドをやることになった（筒井）",
        "  > ",
        "  ",
        ""
      ]
    },
    {
      "title": "準委任契約とは",
      "created": 1589448458,
      "updated": 1592752295,
      "id": "5ebd0f0883418300389dd722",
      "lines": [
        "準委任契約とは",
        "[https://www.atmarkit.co.jp/ait/articles/1702/20/news023.html 準委任契約（じゅんいにんけいやく）：法律用語解説｜システム開発契約（基礎編）（2） - ＠IT]",
        "[https://www.ashita-team.com/jinji-online/category1/9816 準委任契約とは？義務や責任範囲と注意点、請負契約との違い | あしたの人事オンライン]",
        "",
        " >業務委託契約は、大きく２種類に分かれます。それが「請負契約」と「委任契約・準委任契約」です。つまり、準委任契約は、業務委託契約のうちのひとつなのです。 ",
        "",
        ">準委任契約とは、発注者（委任者）が、法律行為（※）以外の事務を受注者に依頼するタイプの契約です（民法第656条）。",
        "",
        ">受注者が約束した時間だけ「発注者の仕事を手伝ってあげる」「代わりにやってあげる」という契約で、仕事を完成させる義務を負いません。",
        "",
        ">「瑕疵担保責任」は発生しません。何らかの事情で期間内に約束したモノが完成しなくても、契約上の義務は果たしたことになります。",
        "",
        ">派遣契約との相違点",
        "> 派遣契約は発注者が指揮命令を行う",
        "> 準委任契約は受注者自身が判断して作業を行う",
        "",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "準委任契約で定める項目",
      "created": 1589448774,
      "updated": 1589882613,
      "id": "5ebd10445751070025add174",
      "lines": [
        "準委任契約で定める項目",
        "[http://keiyaku-gyomuitaku.nisigori.com/ 業務委託契約書雛形・書式]",
        "",
        "　収入印紙",
        "　地雷を回避するために設ける項目",
        "　作業内容についての詳細",
        "　　具体的に請け負う作業内容",
        "　　業務範囲",
        "　　作業の進捗報告の方法",
        "　　納品方法",
        "　契約金額",
        "　　消費税の支払いの有無",
        "　　手付金の有無",
        "　　　例　客先常駐あり 50万/月 (150H)",
        "　　　例　客先常駐なし 30万/月 (150H)",
        "　　　超える分、1Hにつきいくら",
        "　支払先",
        "　　口座",
        "　支払い期限",
        "　　月末締め 翌月10日払みたいな感じだが、べつに払われればどうでもいいので要相談",
        "　契約形態　準委任契約",
        "　契約期間",
        "　　3/31日まで　契約期間を短くしたい場合は応相談",
        "",
        "",
        "　参考",
        "　　請負の参考",
        "　　[https://gyazo.com/37485cebe98c27c356036e08d3c687a6]",
        "",
        ""
      ]
    },
    {
      "title": "フリーランス関連",
      "created": 1589450164,
      "updated": 1592793915,
      "id": "5ebd15b2c3e8bf001e36b6fe",
      "lines": [
        "フリーランス関連",
        "　参考",
        "　　[TWITTERメモ - 目次 -]",
        "",
        "　契約形態",
        " 　　請負契約　成果単位",
        " 　　委託契約",
        " 　　　委託契約 -> 弁護士とかの話で関係ない",
        " 　\t　[準委任契約とは] 時間単位",
        "    [準委任契約で定めるべき項目]",
        "",
        "　[フリーランスのお金の検討]",
        "　[https://docs.google.com/document/d/e/2PACX-1vRF1jTXGWGKZpOXrY8ToASVsp8W_DBXx7FNYMmgqXWH_NMaZBcNKIzsv6vedizSQCL71ymzd-qxCXxw/pub 業務委託契約書_システムリンク]",
        "",
        "　開業まわり",
        "　　携帯新規契約",
        "　　　名義は？",
        "",
        "　経費で落とすもの",
        "　　机周り",
        "　　携帯",
        "　　自分のアプリの広告宣伝費",
        "　　",
        "",
        "",
        "",
        ""
      ]
    },
    {
      "title": "カジュアル面談 - ゆめみ -",
      "created": 1589522701,
      "updated": 1589536536,
      "id": "5ebe3108c0ddc100203627f4",
      "lines": [
        "カジュアル面談 - ゆめみ -",
        "",
        " MEMO",
        "  個人開発への執着",
        "　　転職活動のテーマは？",
        "　　就活軸は？",
        "　　[御社と貴社の使い分け]",
        "",
        "　不明点",
        ">一方で、あくまで会社の実態をお伝えする場であり、専門的な技術内容についてのご説明は",
        "> 正式応募以降の面接でお話しさせて頂く事をご了承ください。",
        "",
        "",
        "　質問内容",
        "　　京都支社、人間関係について",
        "　　　京都何人いるの？　3040人ぐらい",
        "　　　年齢構成は？      まんべんなく、東京も含めるとちゅううじ　京都は三重前半が中央",
        "　　　20代社員がどのぐらいの割合であるのか？",
        "　　　東京支社との仕事、東京出張について",
        "",
        "",
        "　　仕事について",
        "　　　仕事、出張ありなし。広い地域でやっていると聞いたので",
        "　　　お仕事のススメ方？設計書ってどのぐらいガッチリつくるの？エクセル使っている？お客様に対してどんな種類のドキュメントを使っているpdfonlyとか、ツールとか markdownドキュメントをお客様に納品しているのか",
        "　　 monoさんいるってほんと？技術顧問",
        "　　 バイト・インターンはある？",
        "　　　自分のスキルは通用する？",
        "　　　【役割分担】チームの構成と、メンバーの役割分担を教えてください。",
        "　　　アウトプットとして皆さんはどのようなことをされているのか？",
        "",
        "",
        "　　福利厚生について",
        "　　　書籍補助について",
        "　　　>購入金額の上限や、一人当たりの購入金額の上限も一切ありません！",
        "　　　>業務、自己啓発に関わらず、研修や学びに関するあらゆるインプットが対象",
        "　　　所有権は？本に赤入れするので。",
        "　　　お給料とか残業の話　",
        "　　　　残業のところ　みなしだから残業があると思いきや、残業時間はすくないと記述があった",
        "　　　リモートワークをどの程度取り入れている？これからは？",
        "",
        "",
        "　　私のスキルは通用するか？",
        "　　　仮にご縁があれば、自分に何が期待されますか？",
        "　　　どんな働き方、成果が期待されているのか？",
        "　　　アウトプットを見ていただいていることを前提として、私のスキルは通用するのか",
        "　　　ギャップはどこか。個人とチームの差",
        "　　　[* これはチームでやらないと身につかないという能力スキルはなにか]",
        "",
        "sier 出身者しるか？",
        "",
        "",
        "------------------------------------------",
        "リモートワークをどの程度取り入れている？これからは？",
        "書籍補助について　ギジュに関わる書籍は変えるなんでも",
        "バイト・インターンはある？",
        "ーーーーーーーーーー",
        "・y_shojiさん",
        "　　フロント・サーバーサイド",
        "・かわかつさん",
        "　　フロント",
        "",
        "　最低限、コーディングテスト　",
        "　ちょっとしたコンテンツ作ってください。",
        "　コードレビュー",
        "　ts",
        "",
        "実際の面接の合否　はその後",
        "　技術力は最低限いるけれど、チームで働くイメージはあるか？のが重要",
        "",
        "方向はまじかってなかいはず syuzizann",
        "reactやっているのはいい",
        "",
        "東京、関西分断がある。",
        "",
        "チームで働くイメージはあるか？いっしょに働けるか？",
        "　sier出身なので、その人いるか",
        "",
        "",
        "明確にだめな人",
        "　学習記録ない人、学べない人",
        "",
        "定性的な観点",
        "sier出身はすくない。一本はいない。",
        "",
        "上下関係０",
        "ギャンブル風俗の話０",
        "",
        "お客さんによって資料の硬さは違う",
        "エクセル使わない。自分のための設計書しかつくらない。",
        "pmは使うけど。エンジニアいない　",
        "",
        "",
        "",
        "--------------------------------------------------------",
        "やってみた結果",
        "　技術力は大丈夫そうとのこと。私自身は不安なのでそれを潰して行きたいが",
        "　方向性は問題なさそう。",
        "　上下関係０のフラット職場でやっていけるか。",
        "　チームで働くイメージはあるか？いっしょに働けるか？",
        "　おれのwhereby環境がだめすぎる",
        "",
        "　今後",
        "　　コミュニケーション、チームプレーをうまくできることを経歴書などに書く。",
        "　　現状技術偏重しているきらいがある。",
        "　　reactかけるようにする。",
        "",
        "　自分自身に不安があるものの、申し込んでも問題なし。",
        "　　その前に",
        "　　　履歴書追記",
        "　　　reactできるようにする",
        "",
        "6/1に受けて不合格になったとする。",
        "次にうけられるのは12/1日",
        "残り10ヶ月なので12月時点で残り50万ぐらい　引っ越し20でのこり30万ぐらい",
        ""
      ]
    },
    {
      "title": "御社と貴社の使い分け",
      "created": 1589524451,
      "updated": 1589524451,
      "id": "5ebe37dc7aa24e002078c1a8",
      "lines": [
        "御社と貴社の使い分け",
        "実は、使い分けのポイントはいたってシンプル。話し言葉で相手の会社を敬う場合が「御社」で、書き言葉の場合が「貴社」になります。つまり、面接や商談などの会話の中で使う場合は「御社」、履歴書などの書類で使う場合は「貴社",
        ""
      ]
    },
    {
      "title": "株式会社システムリンク仕事内容",
      "created": 1589882680,
      "updated": 1592387465,
      "id": "5ec3af35348be4001e90577d",
      "lines": [
        "株式会社システムリンク仕事内容",
        "G#vlD6q3?@EF*7Uw9d&U",
        "https://1drv.ms/u/s!AqT5mcLV2KHHoMBtiar8_UlRDCUDrQ?e=yojisv",
        "",
        "",
        "6/1",
        " atm",
        "  アウトソーシング？",
        "  監視",
        "   ATMのお金の出し入れの監視",
        "   監視している内容を端末選ばずに表示したい",
        "   　レスポンシブ対応",
        "   　web",
        "   　サーブレット、トムキャット、ブートストラップ",
        "   テレワーク",
        "　  atm横の電話のコールセンター　次",
        "　  沖のソフト会社",
        "  　ついてこれない可能性がある",
        "",
        "  borland 系アプリ全部web化",
        "  atmの入出金のアプリをボーランドからc#へ",
        "  共同コールセンター",
        "  linux 仮想化している",
        "  7月以降？向こうから要因の決定、契約は6月の初旬",
        "  　そこ行こうじゃないとどういう仕事がわからない",
        "　　　",
        "",
        "みずほ、ゆうちょ",
        "",
        ">",
        "> 永井安都さんへ",
        "> お世話になります。システムリンクの大久保です。",
        "> ",
        "> 暫定事項",
        "> ",
        "> １、暫定作業内容",
        "> ",
        "> １）ATM収納管理",
        "> ・言語",
        "> 　・現行　：バッチ＋VBScript",
        "> 　・更改　：PowerShell",
        "> ・機能",
        "> 　ATMへの補充金情報、入出金情報を取得して、監視システムへファイル転送などをする",
        "> ・期間　：３ヵ月",
        "> ",
        "> ２）監視クライントのWeb化",
        "> ・言語",
        "> 　・現行　Borland C++ Builder",
        "> 　・更改　Web化",
        "> 　　・端末",
        "> 　　　汎用ブラウザ（IE11?ActiveX(CTI連携)の稼働も考慮）",
        "> 　　・サーバ",
        "> 　　　WebAP(Java＋JSP)＋TOMCAT＋Spling MVC＋BOOTSTLAP",
        "> ・期間",
        "> 　～７月末　　　　プロトタイピング",
        "> 　８月～９月末　　　外部設計",
        "> 　１０月～１２月末　内部設計",
        "> 　１月～３月末　　　製造",
        "> ・機能",
        "> 　ATM監視クラインの機能の一部を、専用端末(Borland C++ Builderアプリ)からWebシステムへ更改する",
        "> ",
        "> 大久保からのコメント",
        "> 　仕事内容に拘りがあるようでしたが、上記の作業内容は既にマッチングしていないと思います。",
        "> 　もし、他にご自身に合う仕事があるようでしたら、そちらを優先して頂いて結構です。",
        "> 　但し、マッチはしていませんが、作業頂けるのであれば、是非お願いしたいと思っております。",
        "> ",
        "> 　６月５日（金）頃に、OKIからの増員可否決定がなされる予定です。",
        "> ",
        "> ",
        "> ご一報致します。",
        "",
        "・人数・期間",
        "・開発環境",
        "・リモートの有無",
        "",
        "",
        ""
      ]
    },
    {
      "title": "引っ越し",
      "created": 1591350025,
      "updated": 1592984116,
      "id": "5eda12f56e59ee001ef18dbf",
      "lines": [
        "引っ越し",
        " 日程",
        " 　一日予定を見て土曜日に到着すればいいか",
        "",
        "　概要",
        "　　引っ越し手配",
        "　　安く済ませたい",
        "　　　不要な大型物をどう捨てるか。",
        "　　　のこったものをまとめて捨てたい",
        "",
        "",
        "　売る・引き取ってもらうもの",
        "\t　大型",
        "　　　洗濯機",
        "　　　冷蔵庫",
        "　　　シンプルベッド",
        "　　　イス",
        "　　　(机？)",
        "　　　プリンター",
        "　　　黒い棚",
        "　　　白のスチールラック",
        "　　小型",
        "　　　炊飯器",
        "　　　パイプイス",
        "　　　プロジェクター",
        "　大型の荷物",
        "　　マットレス",
        "　　二段ベッド",
        "　　ハーマンミラー",
        "　　自転車",
        "　　　[https://gyazo.com/7af15cc0ca94eeb7cf4763a9b7c0790a]",
        "",
        "　引越方法",
        "　　単身パック＋大型のみ別引っ越し",
        "　　　単身パックが2から3必要で、かつ、大型の荷物が別枠での引っ越しになるのでとても高くなりそう",
        "　　トラック貸し切り",
        "　　　４−８万円ぐらい",
        "\t\t\t[https://gyazo.com/ba995facff3e17016655e8f228721732]",
        ""
      ]
    },
    {
      "title": "ファッション",
      "created": 1591427777,
      "updated": 1591434416,
      "id": "5edb42bf2a5a46001eeff58a",
      "lines": [
        "ファッション",
        "　モノトーン + カラーアイテムで揃えるときれい",
        "",
        "　ズボン　",
        "　　黒スキニーパンツ",
        "　　黒スキニーデニム",
        "　　スリムフィットスキニーチノパンツ",
        "　　 黒の革靴があう",
        "  要はすべて黒系統の細身のパンツ",
        "",
        "　トップス",
        "　　Tシャツ",
        "　　　白黒グレー",
        "　　　厚手だとシワになりにくい",
        "　　シャツ",
        "　　　オックスフォードシャツの白",
        "　　ジャケット",
        "　　　白黒グレー",
        "　　　ジャストサイズ",
        "　　　テーラードジャケット",
        "　　パーカー",
        "",
        "　靴",
        "　　スニーカー",
        "　　　黒、グレー、ネイビー",
        "　　　ウルトラストレッチスキニーフィットジーンズ",
        "　　革靴",
        "　　　先端が細いのはビジネスなのでそうじゃないやつ",
        "",
        "着回し",
        "それぞれ３着ずつあればよい",
        "白ズボンを考慮にいれるなら黒系のトップスがあってもよい",
        "　靴",
        "　　赤スニーカー、革靴、黒スニーカー",
        "　ズボン",
        "　　黒の細身パンツ、というか細身パンツ",
        "　シャツ",
        "　　各色Tシャツ　シャツ",
        "",
        "　肌のケア",
        "　　若々しさを保つ",
        "　　眉毛整える",
        "",
        "",
        ">スキニーパンツとは、足のラインにぴったりフィットしたシルエットのパンツのこと。 ",
        "",
        ">テーパード(Tapered)とは「次第に細くなっていく」の意味で、ファッションでは、先細りなシルエットを表す。 例えば、腰周りはゆったり、足首に向けて細くなるパンツをテーパード・パンツという。",
        "",
        "　　ワイシャツを数着揃える",
        "　　　　カジュアル",
        "　　　　オーダーメイド",
        "　　　　形状安定",
        "　"
      ]
    },
    {
      "title": "あとでけすページ",
      "created": 1591603331,
      "updated": 1591606266,
      "id": "5eddf081aff077001e32aff2",
      "lines": [
        "あとでけすページ",
        "これはTwitterメモのルートページです。",
        "ツイッターから記憶しておきたいツイートを抜粋しています。",
        ""
      ]
    },
    {
      "title": "英語の発音を矯正するなら",
      "created": 1591606415,
      "updated": 1591606450,
      "id": "5eddfc8dcc2a75003882d9d4",
      "lines": [
        "英語の発音を矯正するなら",
        "[https://twitter.com/straydrop411/status/1196008993283563522 🍎スイ@推理小説の日(｡ρω-｡)さんはTwitterを使っています 「今月からリリースされた、 Googleの英語発音の 矯正アプリがすごすぎる。 なんと、 自分で実際に発音すると、 どこがどう間違ってるかを 1音1音 訂正して、 正しい発音を身につけるまで 教えてくれる。 まさに、無料の、 マンツーマン英会話レッスン。 学校の英語の授業は、 もう今日から要らない。 https://t.co/1SXYPP167Y」 / Twitter]",
        "",
        "今月からリリースされた、Googleの英語発音の矯正アプリがすごすぎる。",
        "なんと、自分で実際に発音すると、どこがどう間違ってるかを1音1音 訂正して、正しい発音を身につけるまで教えてくれる。",
        "まさに、無料の、マンツーマン英会話レッスン。",
        "学校の英語の授業は、もう今日から要らない。",
        ""
      ]
    },
    {
      "title": "勉強会で会話をもたせる方法",
      "created": 1591606493,
      "updated": 1591606525,
      "id": "5eddfcd655276f0020227793",
      "lines": [
        "勉強会で会話をもたせる方法",
        "",
        "懇親会はこの会よく参加されてるんですか？この技術、仕事で使ってるんすか？どのセッションが面白かったっすか？",
        "とか言っとけばだいたい持つ。"
      ]
    },
    {
      "title": "仕事募集時、男性は60%くらい要件を満たしていればアプライする",
      "created": 1591607002,
      "updated": 1591607040,
      "id": "5eddfed8c7133500219061a3",
      "lines": [
        "仕事募集時、男性は60%くらい要件を満たしていればアプライする",
        "仕事の募集があったときに、男性は60%くらい要件を満たしていればアプライするけど、女性は100%でないとアプライしないという話、「私で大丈夫か…？」と悩んだときに思い出すようにしている。",
        "[https://gyazo.com/8b0ced102329f9a4646f6e727a96608b]",
        ""
      ]
    },
    {
      "title": "口コミは地域住人の民度を反映している",
      "created": 1591607187,
      "updated": 1591607212,
      "id": "5eddff8e52991d001e4176fc",
      "lines": [
        "口コミは地域住人の民度を反映している",
        "Googleの口コミは病院の質を反映してるのではなくそこの地域住民の民度を反映してるから子育て世代の参考になる、と昔呟いたら炎上したのを思い出した。",
        "",
        "[https://gyazo.com/5afc419edbe769b8e9c84ab828dfe89b]",
        ""
      ]
    },
    {
      "title": "契約を締結する前にキャンセルされた時の代金の請求法",
      "created": 1591607614,
      "updated": 1591607640,
      "id": "5ede0138aff077001e32c92a",
      "lines": [
        "契約を締結する前にキャンセルされた時の代金の請求法",
        "「正式な契約を締結する前にキャンセルされたから代金を請求できない」みたいな悩みを聞くことがありますが、相手の依頼に基づいて作業をおこなったときは契約がなくても請求できますよ",
        "",
        "商法512条「商人がその営業の範囲内において他人のために行為をしたときは、相当な報酬を請求することができる。」",
        "",
        "業界的に契約書の締結に時間がかかり、先に作業に着手する必要があるという場合には、1枚ぺらでいいので作業着手依頼書（これこれの作業をお願いします）という紙をとるよう勧めてます",
        "",
        "[https://docs.google.com/document/d/1tmj4aF2XyvSW_-MydSTHZF-TsjzmlmsrwPpCanjLn4Q/edit 作業着手依頼書 - Google ドキュメント]",
        "",
        ""
      ]
    },
    {
      "title": "成果を誉める",
      "created": 1591608316,
      "updated": 1591608316,
      "id": "5ede03f37a8373001fa81063",
      "lines": [
        "成果を誉める",
        "開発者に限らず、成果を誉めるのはホント大事。",
        "",
        "(僕が指導して)改善活動をやった人が発表会で成果を発表した時、必ずしも教えた通りではなかったけど、講評で誉めたら、誉められて嬉しかった事＆これからも頑張りたい旨を後でメールしてきたもんね。"
      ]
    },
    {
      "title": "ITを知らない人に説明する時、医者と手術に例えるとうまくいく",
      "created": 1591608452,
      "updated": 1591608506,
      "id": "5ede0478757eb50024c5b6bf",
      "lines": [
        "ITを知らない人に説明する時、医者と手術に例えるとうまくいく",
        "[https://gyazo.com/1de45077215993bfb53b5a2c6b6fb8c3]",
        "",
        ""
      ]
    },
    {
      "title": "6時間でも8時間でも生産性は変わらんしずっとイライラしてる",
      "created": 1591608717,
      "updated": 1591608717,
      "id": "5ede058763dfaa00248d70b9",
      "lines": [
        "6時間でも8時間でも生産性は変わらんしずっとイライラしてる",
        "1年半くらいエンジニアの仕事は1日6時間しかやらない生活をやってきて、最近納期の関係で8時間勤務になってわかったことは、6時間でも8時間でも生産性は変わらんしずっとイライラしてるからわたしの元来の性格が穏やかだったのではなく十分な睡眠時間と余暇がわたしを穏やかにしてたということだった",
        ""
      ]
    },
    {
      "title": "正しいイスの座り方",
      "created": 1591609481,
      "updated": 1591609481,
      "id": "5ede088692f73200434fe1bf",
      "lines": [
        "正しいイスの座り方",
        "[https://twitter.com/m_msak7/status/1204703003883778048 有柚まさきさんはTwitterを使っています 「某大手家具屋さんにて【作業椅子を選ぶポイント３つ】を教わったのでメモ的に。 肘置きの正しい使い方全然知らなかった...! https://t.co/jidJ4tSztT」 / Twitter]",
        ""
      ]
    },
    {
      "title": "WEBサイト制作業務委託基本契約書21条 準委任にも使える",
      "created": 1591609728,
      "updated": 1591609737,
      "id": "5ede097ab2c268001e0aaeb0",
      "lines": [
        "WEBサイト制作業務委託基本契約書21条 準委任にも使える",
        "[http://websae.net/contract_document/ Web系フリーランスをモンスタークライアントから守る契約書]",
        ""
      ]
    },
    {
      "title": "継続的にクライアントを満足させる",
      "created": 1591610047,
      "updated": 1591610047,
      "id": "5ede0abda256cc001ebc1873",
      "lines": [
        "継続的にクライアントを満足させる",
        "コツ1. 成果物を常に共有する",
        "アプリであれば開発中のアプリを定期的に配信する、webであればリリースする、プロトタイプでもなんでも動くものを見せ続けるのは当たり前のように大事だと思います。成果物が誰でも見れる状況を作る仕組みを絶対最初にタスク化しましょう。結局やーやー言うても「何をしてくれた人なのか」がないと効果を実感してもらえません。",
        "何のタスクが何時間動いて、結果そこから何の理由でどれだけズレていくらの請求になるかは自己管理しましょう。",
        "",
        "コツ2. 仕事は一緒に考える",
        "依頼されたことだけやるのは簡単ですが、時間の切り売りになってしまうので、これを避けるために、本当にやるべきことやプロダクトをすすめるために必要なことは一緒に考えましょう。本業で上司に提案するより上記「副業エンジニアの期待されている役割」に当てはまる限りは、よほどハードルが低いです。機会と共に成長しましょう。",
        "",
        "コツ3. 契約はきっちり",
        "基本的なことは本当に自分で理解する必要があります、仕事なので。請求書の発行や確定申告もろもろ。税理士さんに相談したりフリーランス向けの説明会など学ぶ機会も本もたくさんあるので学びましょう。"
      ]
    },
    {
      "title": "金融政策のざっくりとした波及の流れ",
      "created": 1591610168,
      "updated": 1591610282,
      "id": "5ede0b17757eb50024c5c1f4",
      "lines": [
        "金融政策のざっくりとした波及の流れ",
        "経済学講義としては、金融緩和→実質金利低下→投資増。",
        "雇用増はヒトへの投資増と考えてもモノへの投資増に伴うとしてもいい。ただし投資には時間ラグがあるので、この変化は気付きにくく単純でない。雇用増→自殺率低下。同時に犯罪率も低下。社会不安も低下",
        "",
        "通貨供給増大＝予想実質金利低下＝円安＝国内経済活発化＝賃金＆物価上昇（景気上昇）",
        "",
        "[https://gyazo.com/16cb3cf03c01e0343184aca76bc41306]",
        ""
      ]
    },
    {
      "title": "会社を選ぶときは関東IT健保に加入しているかをみる",
      "created": 1591610488,
      "updated": 1591610514,
      "id": "5ede0c710b5961001ee225b2",
      "lines": [
        "会社を選ぶときは関東IT健保に加入しているかをみる",
        "IT業界で会社選ぶ際、気にした方が良い点としては、",
        "\"関東IT健保\"に入っているかどうか。",
        "",
        "基準",
        "・20名以上社員がいること",
        "・低報酬者がいないこと",
        "・若い人が多いこと",
        "・税の滞納（納入遅延）がないこと",
        "・資本金を超える赤字がないこと",
        "",
        "よって、入ってない企業は欠陥ありと見た方が良いです。",
        "",
        "出来てまだ数年の企業ならともかく、基準満たしてて加入しない理由は全くない組合なのです。",
        "",
        "よって企業の財務状態を定量的に図る上でかなり強力です。",
        "",
        "関東IT入ってても良くない会社はあると反論がありますが、それは以下の状態ですね。",
        "",
        "ハードウェア○",
        "ソフトウェア×",
        "",
        "2軸で見てみてください。",
        "",
        "IT業界でも、たとえばネットメディアとかの会社は適合しないはずなので、この書き方をすると、ほぼデマになるので注意かなぁ、と思います。",
        ""
      ]
    },
    {
      "title": "挨拶の時お土産を持っていくと喜ばれる",
      "created": 1591610584,
      "updated": 1591610584,
      "id": "5ede0cd54de9a30022f31ad0",
      "lines": [
        "挨拶の時お土産を持っていくと喜ばれる",
        "自粛系のアレで取引先やらの仕事関係の飲み会が全くなくなってしまって接待交際費全く使わないから、代わりにちょっとした挨拶の時にガッツリした手土産を持っていくってのを先月からしてるんだけど、こっちが想像した遥か上を行く感じで喜ばれるからこんなことなら前からしとけばよかったわ。",
        ""
      ]
    },
    {
      "title": "できませんと言わずに「できますよ。〇〇(無理な条件)です。」という",
      "created": 1591611176,
      "updated": 1591611176,
      "id": "5ede0f21285bb7001e99233b",
      "lines": [
        "できませんと言わずに「できますよ。〇〇(無理な条件)です。」という",
        "いま会社でサービスの設計をしてるんだけど、これめっちゃ有効で「○○はできません」と言うとゴネられることが多い。でも「できますよ。オプションで2万円/月です」というとあっさり『あ、じゃあいいです』となる",
        ""
      ]
    },
    {
      "title": "フリーランスエンジニアの時給相場",
      "created": 1591611301,
      "updated": 1591611329,
      "id": "5ede0fa01a7c7a0020fdd2ca",
      "lines": [
        "フリーランスエンジニアの時給相場",
        "フリーランスエンジニアの時給相場",
        "(アプリケーション開発)",
        "",
        "~1年 ほぼ作業員やな　2,000円",
        "~3年 ジュニアくらい？　3,000円",
        "~5年 まぁ大丈夫やろ　4,000円",
        "~10年 諸々任せます　5,000円",
        "",
        "というイメージなんだけどどうでしょう？？？",
        "",
        "これでもちょい安いらしい",
        "[https://twitter.com/aoirubygirl/status/1241378500465922048 ひびのあおい🔰未経験からエンジニア就職のひとさんはTwitterを使っています 「フリーランスエンジニアの時給相場 (アプリケーション開発) ~1年 ほぼ作業員やな　2,000円 ~3年 ジュニアくらい？　3,000円 ~5年 まぁ大丈夫やろ　4,000円 ~10年 諸々任せます　5,000円 というイメージなんだけどどうでしょう？？？」 / Twitter]",
        ""
      ]
    },
    {
      "title": "褒めると仕事が進む",
      "created": 1591611480,
      "updated": 1591611492,
      "id": "5ede10512658a2003820b213",
      "lines": [
        "褒めると仕事が進む",
        "オフショアやってた時に雰囲気が良くなかったので「Good！」「Awesome！」「Thank you for your ~」ってアホみたいに言いまくってたらどんどん活発になって仕事が進めやすくなったことを思い出した。",
        "",
        "これは日頃から、褒めあう事で価値観を共有すると言う偉大なる儀式なんだよな。ビジネスごっこで何でも命令やルールにすると、効率は下がるばかりなんだよね。この手の価値観の共有を怠ると、工程が終わった時のレビューで始めて価値観の差異が露呈する。そうなったらお終い。",
        ""
      ]
    },
    {
      "title": "同意に至らないやり取りでも証跡を残す",
      "created": 1591780130,
      "updated": 1591780438,
      "id": "5ee0a31ca53a650020551606",
      "lines": [
        "同意に至らないやり取りでも証跡を残す",
        "顧客「この対応をしてくれ」",
        "弊社「対応するには予算が必要です」",
        "顧客「お金は出せないが何とかしろ」",
        "弊社「申し訳ありませんが無償では無理です」",
        "顧客「そこを何とかしてくれ」",
        "弊社「ごめんなさい」",
        "",
        "後日、お願いした対応が全然進んでいない！と言われて責任追及されたことがある。なぜなのか。",
        "",
        "",
        "-------------------------------------",
        "これ、口頭だけだと顧客(乞客)は追加を無償対応するで了承してくれたになるんですよね",
        "信じがたいことに",
        "",
        "ウチも",
        "電話のやりとりが終わってから",
        "・要求内容が業務範囲を超えている",
        "・実施するには追加料金が必要であること",
        "・必要なら追加料金を了承した上で発注してください",
        "とメールを発信してます",
        "",
        "-------------------------------------",
        "この手のやり取りは、口頭や電話では絶対にやらなくなった。",
        "電話でやりとりした場合も",
        "「〇〇という事でしたの、念のためメールにて共有いたします。もし相違などございましたら、〇〇日の15時までにメールにて修正内容とともにお知らせください。」",
        "とかしないと危険が危ない！口を開けた笑顔",
        ""
      ]
    },
    {
      "title": "マイルストーン請求",
      "created": 1591781651,
      "updated": 1591781651,
      "id": "5ee0a90ba3a975002467875a",
      "lines": [
        "マイルストーン請求",
        "海外ウェブ制作会社とお仕事をしていますが、彼らは”マイルストーン請求”と表現しており、",
        "",
        "- 契約時に50%",
        "- モック終了時に20%",
        "- 実装終了時に20%",
        "- 最終納品時に10%",
        "",
        "と、契約書にスケジュールと一緒に明記されていました。",
        "",
        "発注主としても明確な納品物への支払いなので安心です。"
      ]
    },
    {
      "title": "問い合わせ時にuuidを入れておくとエラーの内容がすぐわかる",
      "created": 1591782352,
      "updated": 1591782352,
      "id": "5ee0abc8c32f38001eb12b15",
      "lines": [
        "問い合わせ時にuuidを入れておくとエラーの内容がすぐわかる",
        "アプリでね、uuidを発行して、iCloudやSharedPreferencesに入れておいてね、CrashlyticsのCrashlytics.sharedInstance().setUserIdentifierでuuidを起動のタイミングでセットするようにしてね、お問い合わせのメールに必ずuuidが自動で追記されるようにしておくとピンポイントでエラー分かるから便利笑顔",
        ""
      ]
    },
    {
      "title": "請負よりも準委任",
      "created": 1591782406,
      "updated": 1591782406,
      "id": "5ee0ac0035444c001e6f7b03",
      "lines": [
        "請負よりも準委任",
        "よほど信頼できるクライアント、信頼できるコードベース 、リスクに見合う金がなければ「請負契約」で仕事受けるのはまずい。",
        "",
        "不確実性が高いプロジェクトには月額いくらの「準委任契約」で入らないと、炎上したり要件変更あったときに自分ばかり損をすることになる。人月契約は最強の契約。",
        ""
      ]
    },
    {
      "title": "私が地雷案件（≠炎上案件）を避けるためにやってたこと",
      "created": 1591782562,
      "updated": 1591782562,
      "id": "5ee0ac9cc5ead3001e82b4f4",
      "lines": [
        "私が地雷案件（≠炎上案件）を避けるためにやってたこと",
        "■私が地雷案件（≠炎上案件）を避けるためにやってたこと",
        "",
        "・契約前に相手の登記や身分証明書を確認する",
        "・新規のお客様からは小規模案件のみ受注する",
        "・大規模案件はなるべくタスクごとに納品&支払いにしてもらう",
        "・大事なことは口頭ではなくテキストでやり取りする",
        "・言うべきことは必ず言う"
      ]
    },
    {
      "title": "選択肢を選んでいくチャートアプリ",
      "created": 1591783135,
      "updated": 1591783173,
      "id": "5ee0aedd35444c001e6f7ca6",
      "lines": [
        "選択肢を選んでいくチャートアプリ",
        "[https://corona-matome.net/ #政府のコロナ対策まとめ #政府のコロナ支援まとめ]",
        "[https://gyazo.com/67426fa02938dcc1cdaf7b8015a40652]",
        ""
      ]
    },
    {
      "title": "アプリ広告TODO",
      "created": 1592096996,
      "updated": 1592104497,
      "id": "5ee578e247f832001e3db27d",
      "lines": [
        "アプリ広告TODO",
        " まだやっていない",
        " 　開発会議",
        "",
        "　",
        ""
      ]
    },
    {
      "title": "アプリの広告・宣伝用の言葉のテンプレート",
      "created": 1592097083,
      "updated": 1592099367,
      "id": "5ee57884265c41001ef65a19",
      "lines": [
        "アプリの広告・宣伝用の言葉のテンプレート",
        "[アプリの広告・宣伝用の言葉のテンプレート]",
        "",
        "table:app",
        " やること\t名前\t備考",
        " サービス名\t\t",
        " URL\t\t",
        " 短い説明(キャッチコピー)\t\t",
        " 長い説明\t\t",
        " サービスの背景・想い\t\t",
        " サムネイル画像\t\t",
        "　スクショ\t\t",
        "　プロモーション動画\t\t"
      ]
    },
    {
      "title": "まで後何分 - 広告・宣伝 -",
      "created": 1592099228,
      "updated": 1592099376,
      "id": "5ee5819884a6d40023d35b95",
      "lines": [
        "まで後何分 - 広告・宣伝 -",
        "[アプリの広告・宣伝用の言葉のテンプレート]",
        "table:app",
        " やること\t名前\t備考",
        " サービス名\t\t",
        " URL\t\t",
        " 短い説明(キャッチコピー)\t\t",
        " 長い説明\t\t",
        " サービスの背景・想い\t\t",
        " サムネイル画像\t\t",
        "　スクショ\t\t",
        "　プロモーション動画\t\t"
      ]
    },
    {
      "title": "組み合わせタイマー - 広告・宣伝 -",
      "created": 1592099350,
      "updated": 1592099362,
      "id": "5ee58214e6bb76002012fb84",
      "lines": [
        "組み合わせタイマー - 広告・宣伝 -",
        "[アプリの広告・宣伝用の言葉のテンプレート]",
        "",
        "table:app",
        " やること\t名前\t備考",
        " サービス名\t\t",
        " URL\t\t",
        " 短い説明(キャッチコピー)\t\t",
        " 長い説明\t\t",
        " サービスの背景・想い\t\t",
        " サムネイル画像\t\t",
        "　スクショ\t\t",
        "　プロモーション動画\t\t"
      ]
    },
    {
      "title": "組み合わせタイマー - 開発 -",
      "created": 1592099393,
      "updated": 1592099432,
      "id": "5ee5823f366de40021ba2838",
      "lines": [
        "組み合わせタイマー - 開発 -",
        "　残りの仕事",
        "　　緊急",
        "　　　[- 匿名ログイン時において、サインアウト、削除が表示されてしまっていること]",
        "　　　[- サインインアドレスも表示されてしまっている。]",
        "　　　[- androidのお知らせ３，６をお知らせに統一する]",
        "　　　　[- プログラム修正]",
        "　　　　[- パッチ機能を当てる]",
        "　　　[- 実行ページへの遷移を実行ボタンだけでなく、タイトルごとにする]",
        "　　　[- タイトルの変更を編集ページでできるようにする]",
        "　　すぐにやる",
        "　　　[- コンタクトを一番下に持ってくる]",
        "　　　[- お知らせをプロモーションページへ]",
        "　　　[- 利用規約をプロモーションページへ]",
        "　　　[- プライバシーポリシーをプロモーションページへ]",
        "　　　 [- 問い合わせはアプリからもしくはtwitterのdmから]",
        "　　　[- コンタクトをプロモーションページへ]",
        "　　　versionをfuturebuilderにする",
        "　　　[- 問い合わせ時に取得するデータをもっと多くする]",
        "",
        "　　機能",
        "　　　内部",
        "　　　　アイコンをより見やすいのに変える",
        "　　　　月額課金",
        "　　　　テキストをしゃべる",
        "　　　　通知",
        "　　　　超過時間を教えてくれる",
        "　　　外部",
        "　　　　[* 問い合わせの吸い上げ・通知]",
        "　　　　[* firebase admin]",
        "",
        "",
        "　マーケティング",
        "　　アプリの機能として",
        "　　　レビューを促すために",
        "　　　　使用回数を図る",
        "　　　　一定回数超えたらレビューしてくれと通知を出す。",
        "　　　タイマー名を取得してよく使われている名前を煽り文句にいれる",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* 日程]",
        "　概要設計、画面設計で2日",
        "　製造で4日",
        "　予備1日",
        "　計一週間でリリース",
        "",
        "[* 予実]",
        "　table:日程",
        "　 日にち\t実績\tしたこと\t作業時間",
        "　 12/01\tアプリ基礎部分\tappbar、bnb、tab\t12H",
        "　 12/02\tアプリ基礎部分\tappbar、bnb、tab\t6H",
        "　 12/03\tアプリ基礎部分\tfirebase\t6H",
        "　 12/04\tアプリ基礎部分\tauth\t8H",
        "　 12/05\tアプリ基礎部分\tauth\t10H",
        "　 12/06\tアプリ基礎部分\tauth\t2H",
        "　 12/07\tプロトタイピング\t\t2H",
        "　 12/08\tプロトタイピング\t\t4H",
        "　 12/09\tプロトタイピング\t\t6H",
        "　 12/10\t\t\t",
        "　 12/11\t\t\t",
        "　 12/12\t\t\t",
        "　 12/13\t\t\t",
        "　 12/14\t\t\t",
        "　 12/15\t\t\t",
        "　 12/16\t\t\t",
        "",
        "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ",
        "[* 概要設計]",
        "　名前を決める",
        "　アプリの特徴は？",
        "　　タイマー同士を組み合わせる",
        " 　　　タイマーとタイマー同士を組み合わせたグループがある",
        "　[- ダークモード対応はする]　=> した",
        "　[- ログイン機能はどうする？] => APPLEとGOOGLE",
        "　カウントダウン・カウントアップ・アラーム",
        "　　タイマー、カウントダウンにする",
        "　画面は？",
        "　　今動いている画面",
        "　　　これは一つだけと仮決定する",
        "　　　タイマー一覧",
        "　　　グループ一覧",
        "　　設定画面",
        " アラーム機能はなし",
        " 　面倒",
        " 　android iosの知識が必要になってくる",
        " ストップウォッチ機能は？",
        " 　追加で作るかもしれないが今はなし",
        " プレゼン機能",
        " 月額課金機能をつける",
        " 　月100円",
        "",
        "",
        "",
        "",
        "[* TODO]",
        "　類似アプリを探しまくる",
        "[* メモ]",
        "Google Cloud Text-to-Speech ",
        "　有料課金で音声作れる",
        " カラー対応",
        ""
      ]
    },
    {
      "title": "組み合わせタイマー - デザイン -",
      "created": 1592099419,
      "updated": 1592099419,
      "id": "5ee58259dc1133001e45bea6",
      "lines": [
        "組み合わせタイマー - デザイン -",
        "[* 画面設計]",
        "　[https://www.figma.com/file/Ip4d4vCgSb8tfHcgWvCQKK/%E7%B5%84%E3%81%BF%E5%90%88%E3%82%8F%E3%81%9B%E3%82%BF%E3%82%A4%E3%83%9E%E3%83%BC?node-id=0%3A7178 組み合わせタイマー – Figma]",
        "　[アプリの画面デザインを作成する手順]"
      ]
    },
    {
      "title": "Let's search for Icon - デザイン -",
      "created": 1592099871,
      "updated": 1592100024,
      "id": "5ee5841d3f71b6001e02e89a",
      "lines": [
        "Let's search for Icon - デザイン -",
        "[https://www.figma.com/file/XAIOI2gHcIOxdyJxaxz1nZ/%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3%E6%A4%9C%E7%B4%A2 アイコン検索 – Figma]",
        ""
      ]
    },
    {
      "title": "Let's search for Icon - 広告・宣伝 -",
      "created": 1592099912,
      "updated": 1592107886,
      "id": "5ee58446508e2e0022af3f9a",
      "lines": [
        "Let's search for Icon - 広告・宣伝 -",
        "[アプリの広告・宣伝用の言葉のテンプレート]",
        "",
        "table:app",
        " やること\t名前\t備考",
        " サービス名\tLet's search for Icon\t",
        " URL\thttps://icon-search-app.web.app/\t",
        " 短い説明(キャッチコピー)\tアイコンを特徴で検索しよう!\t",
        " 長い説明\t後述\t",
        " サービスの背景・想い\t後述\t",
        " サムネイル画像\t\t",
        "　スクショ\t\t",
        "　プロモーション動画\t\t",
        "　運営会社URL\thttps://twitter.com/ampersand000",
        "　開発者からの一言\tエンジニア・デザイナー向けのアイコン検索アプリです。アイコンを探す時間を大幅に短縮できます。",
        "\tサービスを使うことで利用者はどうなりますか？\t",
        "\t今後の展望\t後述",
        "",
        "長い説明",
        "　Let's search for IconはマテリアルアイコンとFontAwesomeアイコンを特徴で探せるアプリです。",
        "「いいね」「矢印」「人」のような特徴で検索してみてください。",
        "",
        "　サービスの背景・想い",
        "　　例えば、♡(ハート)のアイコンが欲しかったとして、マテリアルアイコンのページでハートと検索しました。しかしながら、私が欲しい「ハート」アイコンの正しい名前は「favorite」なので検索に引っかからない。そうなると、1000個以上あるアイコン一覧から目視で探し出さなければなりません。その手間を省くアイコン検索アプリが必要だったので、このアイコンを特徴で検索できるLet's search for Iconアプリを作成しました。",
        "",
        "　　マテリアルアイコンおよびfontawesomeのウェブサイトで欲しいアイコンが検索に引っかからないとき、1000個以上あるアイコンの一覧から目視で探し出さなければなりません。その手間を省くために、このアイコンを特徴で検索できるLet's search for Iconアプリを作成しました。",
        "",
        "　今後の展望",
        "　　ユーザーの入力値を特徴タグに反映していきますので、どんどん精度が上がっていきます。",
        "",
        "",
        "　まだ",
        "　　開発会議",
        "",
        ""
      ]
    },
    {
      "title": "Let's search for Icon - 開発 -",
      "created": 1592099922,
      "updated": 1592100028,
      "id": "5ee58450ba10d10020955154",
      "lines": [
        "Let's search for Icon - 開発 -",
        "",
        "　どんなアプリか？",
        "　　アイコンを検索できるアプリ",
        "　　まずはマテリアルデザインから",
        "　　モバイルアプリではなくwebアプリ",
        "　　flutterではなくreact",
        "　　外国勢も使えるようにしたいので多言語対応したい",
        "",
        "",
        "　既存の困りごとはなにか？",
        "　　アイコンを探す時、検索ができる仕組みがないので、目視で探すことになる。結構大変",
        "",
        "",
        " テーマカラー",
        "  いかにもツールっぽい感じ、grayか？",
        "",
        "　このアプリで意識すること",
        " 競合調査で意識するアプリ",
        " 考えたこと",
        "　決めたこと",
        "",
        " TODO",
        "  [- reactをcreate]   [react環境構築]",
        "  [- GITHUB設定]",
        "  自動バックアップ(他のも一緒にやる)",
        "  [- FIREBASEのHOSTING]  [react + firebase hosting]",
        "   当面はHOSTINGのみ",
        "   FIRESTOREやログイン、本番開発の分離はあとで",
        "  [- ここまでやればデフォルトのままホスティングできる。] [https://icon-search-7d660.web.app/ React App]",
        "  前作った最小限のtodo reduxアプリを参考にして (react-practice-firebase)",
        "   [- input画面のデザイン]",
        "   reduxで表示をつくるinputの機能",
        "  [- theme [material ui のtheme]]",
        "  レスポンシブデザイン",
        "  検索機能の実装",
        "  grid view",
        "   [- 固定リスト]",
        "   ファイル分割",
        "   json形式",
        "   アイコンを表示",
        "   全アイコンを表示",
        "   表示の仕方、デザイン",
        "TODO: appbarどうするか",
        "",
        "　　・検索欄のオートフォーカス",
        "",
        "　　・利用規約",
        "",
        "　　・P.P",
        "",
        "　　・開発者連絡先",
        "",
        "　　・フォーム",
        "",
        "　　・シェア",
        "",
        "TODO: appbarのスマートフォン時の表示するアイコン",
        "",
        "　　・報告フォーム",
        "",
        "　　・シェア",
        "",
        "　　・メニュー",
        "",
        "TODO: レスポンシブ化",
        "",
        "TODO: ためしがきのデザインが参考になりそう",
        "",
        "TODO: ユーザーの検索履歴を管理する仕組み ここはいくつか段階を踏みながら作る ・1.検索履歴収集許可チェックリストつくる ・2.どこかに検索履歴の収集する仕組みをつくって手動で反映 ・3.自動で反映する仕組み",
        "",
        "TODO: 折りたたみ・非表示",
        "",
        "TODO: よく使われるアイコンの一覧・そのためには選ばれたアイコンの回数を数える仕組みが必要",
        "",
        "TODO: アイコンクリック時にマテリアルデザインのサイトに遷移するもしくはhtmlやmaterialui での指定の仕方を表示する仕組み",
        "",
        "TODO: このwebアプリの使い方をトップページに書く",
        "",
        "TODO: darkmode対応",
        "",
        "TODO: 高速化",
        "",
        ""
      ]
    },
    {
      "title": "twitter上で賞品を宣伝するアプリ",
      "created": 1592108613,
      "updated": 1592108642,
      "id": "5ee5a643f6da6f001e68b8e5",
      "lines": [
        "twitter上で賞品を宣伝するアプリ",
        "[https://newlaun-ch.com/ NewLaun-ch 新サービス紹介メディア]",
        ""
      ]
    },
    {
      "title": "ASO",
      "created": 1592210015,
      "updated": 1592562367,
      "id": "5ee7325ddc0ea70021fdd66f",
      "lines": [
        "ASO",
        "　参考リンク",
        "　　[https://hajipion.com/1903.html ダウンロード数を10倍にした最強ASOテクニック！App Store攻略のための「タイトル」「キーワード」etc...の作り方 | hajipion.com]",
        "　　[https://application.hateblo.jp/entry/2016/10/24/052959 アプリのASO（AppStore最適化）をしたらマジでダウンロード数が１０倍になった話 - ホーリーのプログラミング日記]",
        "　　[https://application.hateblo.jp/entry/2016/10/24/061449 アプリのASOをするならサーチマン（SearchMan）が不可欠だと思った話 - ホーリーのプログラミング日記]",
        "",
        "",
        "　スクショテンプレート化",
        "　　[https://application.hateblo.jp/entry/2019/09/15/000000 スクショのテンプレ化 - ホーリーのプログラミング日記]",
        "",
        "",
        " 有益なツール",
        "　　[https://www.appannie.com/dashboard/home/?activate=1&homepage.selected-chart=quadrant&homepage.topType=apps App Annie - The App Analytics and App Data Industry Standard]",
        "  [https://app.searchads.apple.com/cm/basic/app/promoteapp Search Ads]",
        "  [https://searchman.com/ja/ 【SearchMan・サーチマン】モバイルSEO・iOS App Store & Google Play (Android) ASO・アプリストア最適化・App Store Optimization]",
        "  [https://trends.google.co.jp/trends/?geo=JP Google トレンド]",
        "",
        "",
        " アプリの名前の付け方　",
        " 　[https://www.tfsappsone.com/entry/2019/05/06/220633 アプリ 名前の付け方 - 週末のアプリ作成]",
        "",
        "",
        " まであと何分",
        " 組み合わせタイマー",
        "",
        "",
        " asoでやること",
        " 　>ASOってザックリ２つあるじゃないですか。「検索順位を上げること」と「クリック率（ダウンロード率）を上げること」の２つが。",
        " 　>クリック率はギリギリ分かるんですよ。多分なんですが、スクショとアイコンとレビュー数とレビューの平均評価が大事です。",
        "[https://application.hateblo.jp/entry/2020/06/14/205550 ASOは雰囲気が８割 - ホーリーのプログラミング日記]",
        "",
        "",
        " table:asoで考慮すること",
        "  os\tタイトル\t簡単な説明\t詳しい説明\tタグ\tキーワード\tスクリーンショット\tアイコン\tレビュー",
        "　  ios\t30字まで\t30字まで\t\t☓\t100字まで\t○\t○\t○",
        "  android\t50字まで\t80字まで\t4000字まで\t5つまで\t☓\t○\t○\t○",
        "",
        "",
        "",
        "　>アプリを表すキーワードを10個以上だしてください。",
        "　　まであと何分",
        "　　　countdown,カウントダウン,timer,タイマー,可視化,見える化,残り時間,波,わかりやすい,simple,シンプル,無料,free,countdownTimer,カウントダウンタイマー,かわいい",
        "　　組み合わせタイマー",
        "　　　タイマー 組み合わせ 複合化 ポモドーロ プレゼン ストレッチ インターバル トレーニング 無料 あと何分 カウントダウン タイマー ,かわいい,アプリ",
        "　　　タイマー,timer,組み合わせ,組合せ,ポモドーロ,pomodoro,プレゼン,presen,ストレッチ,stretch,トレーニング,training,無料,free,かわいい",
        "",
        "",
        " >予測キーワード(検索してでてくるやつ)",
        " 　ios タイマー",
        " 　　繰り返し 無料 アプリ 複数",
        "",
        "　>出した複数のキーワードから、大事なものを3～4つ選びましょう。",
        " >大事なことは18文字以内に",
        " iosのタイトル上限は30文字、androudは50字",
        "  まであと何分",
        "   まであと何分？ | 残り時間を見える化する無料タイマーアプリ",
        "  組み合わせタイマー",
        "  　組み合わせタイマー | インターバル、ポモドーロ、筋トレ",
        "",
        "",
        "",
        "",
        " キーワード ios",
        " 　表記ゆれ",
        " 　複合名詞は分ける",
        " 　サジェストキーワード",
        " 　[https://application.hateblo.jp/entry/2019/09/16/000000 アプリのキーワードを定期的に見直してみる - ホーリーのプログラミング日記]",
        " 　勝てる場所で勝つキーワードをつける　",
        "　  >みんなが検索するような人気ワードで上位表示するのは至難の業なので、それよりは勝てる場所で勝ったほうがいいと思っています。",
        " 　 > 具体的には「闇雲に検索ボリュームの多い場所を狙うのではなく、確実に上位表示出来る場所を狙ったほうがいい」と思ってるんですよ。",
        " 　 > 「検索ボリュームの大小ってなんじゃい」って話なんですけど、これはSearchAdsで取得しています。AppleStoreに広告出すやつですね。",
        "　　　>個人的には４～５のワードを狙うのは厳しいんですよ。なので、とりあえず２～３のワードを狙うことが多いです。",
        "　　　[https://application.hateblo.jp/entry/2020/06/14/205550 ASOは雰囲気が８割 - ホーリーのプログラミング日記]",
        ""
      ]
    },
    {
      "title": "まであと何分の鍵",
      "created": 1592518845,
      "updated": 1592518845,
      "id": "5eebe8bc7bb6840021b42e9e",
      "lines": [
        "まであと何分の鍵",
        ""
      ]
    },
    {
      "title": "androidの鍵を忘れた場合の更新方法",
      "created": 1592529980,
      "updated": 1592555356,
      "id": "5eec142483e2ab00244e308b",
      "lines": [
        "androidの鍵を忘れた場合の更新方法",
        "[https://gyazo.com/462180a12fdcfff05911431de5026dc9]",
        "[https://support.google.com/googleplay/android-developer/answer/7384423#reset Google Play アプリ署名を使用する - Play Console ヘルプ]",
        "",
        "upload_certificate.pem",
        "[https://qiita.com/rkowase/items/90cdc4e8c6fc449d8276 【Android】Google Play App Signingのススメ - Qiita]",
        "t",
        ""
      ]
    },
    {
      "title": "androidの署名の仕組み",
      "created": 1592542147,
      "updated": 1593152058,
      "id": "5eec43c1d0cd590024fbe404",
      "lines": [
        "androidの署名の仕組み",
        "　[https://developer.android.com/studio/publish/app-signing?hl=ja アプリへの署名  |  Android デベロッパー  |  Android Developers]",
        "　[https://qiita.com/takehilo/items/7c02a4eba177ac76dcc4 Androidの署名について（releaseバリアントでビルドする） - Qiita]",
        "",
        "　[https://wa3.i-3-i.info/word14396.html デジタル署名]",
        "　アップロード鍵",
        "　キーストア",
        "　　バイナリーファイルです。単数または複数の秘密鍵と証明書のセットを格納するために使用します。秘密鍵は、組織または個人を表す 「 判子 」 の役割をします。",
        "　　イメージとしてはキーストアが「証明書を保管する金庫」",
        "　　〇〇.jks",
        "　　password",
        "　 key",
        "　 　alias",
        "　 　　証明書",
        "　  期限",
        "　  password",
        "　  その他情報",
        "　オプトイン",
        "",
        "",
        "複数のアプリを開発する際には「ひとつのキーストアを複数のアプリで共有」します。",
        "エイリアス（証明書）も「ひとつのエイリアスを複数のアプリで共有する」ことが一般的なようです。",
        "これは、そもそも証明書の考え方が「開発をする法人や個人を表す印」なので、開発者が複数の証明書を使い分けるのは好ましくないという発想なのだと思います。",
        "[https://blog.aroundit.net/android-keystore-alias/ Androidアプリ開発のキーストアとエイリアスについて – 時にはWEBの話っ！]",
        "",
        " [アップロード鍵とキーストアを生成する]",
        "　 次に、[署名する]",
        " [アップロード証明書を生成して登録する]",
        " [アップロード鍵の紛失または不正使用]",
        "",
        "",
        "",
        "",
        "駆け出しエンジニアを卒業してアプリをリリースしたけど全然使ってもらえないエンジニアと繋がりたい",
        "",
        "keystore",
        " /Users/dev/my/app/setting/android/key2.jks",
        " aiias ",
        "  key1",
        "   組み合わせタイマーはキーのエイリアスを別にする。",
        "   key0のパスワード覚えてないので",
        "  パスワード",
        "  　lastpassに記述",
        "",
        "組み合わせタイマーはandroidからbundleしてandroid app relesaseフォルダからアップロードする",
        ""
      ]
    },
    {
      "title": "アップロード鍵とキーストアを生成する",
      "created": 1592543508,
      "updated": 1592543593,
      "id": "5eec490ca197520038bbc3f7",
      "lines": [
        "アップロード鍵とキーストアを生成する",
        "[https://developer.android.com/studio/publish/app-signing?hl=ja#generate-key アプリへの署名  |  Android デベロッパー  |  Android Developers]",
        "",
        "",
        "Google Play アプリ署名にオプトインする際に便利なアップロード鍵をまだ生成していない場合は、次のように Android Studio を使用して生成することができます。",
        "",
        "メニューバーで、Build > Build > Generate Signed Bundle/APK をクリックします。",
        "Generate Signed Bundle or APK ダイアログで、Android App Bundle または APK を選択し、Next をクリックします。",
        "Key store path のフィールドの下で、Create new をクリックします。",
        "図 2 のように、New Key Store ウィンドウでキーストアと鍵の情報を指定します。",
        "",
        "",
        "図 2. Android Studio で新しいアップロード鍵とキーストアを作成します。",
        "",
        "キーストア",
        "",
        "Key store path: キーストアを作成する場所を選択します。",
        "Password: キーストアの安全なパスワードを作成し、確認します。",
        "鍵",
        "",
        "Alias: 鍵を識別する名前を入力します。",
        "Password: 鍵の安全なパスワードを作成し、確認します。キーストアのパスワードとは異なるパスワードにする必要があります。",
        "Validity (years): 鍵の有効期間を年単位で設定します。鍵は少なくとも 25 年間は有効であるため、アプリの全期間を通じて同じ鍵を使用してアプリのアップデートに署名できます。",
        "Certificate: 証明書の所有者に関する情報を入力します。この情報はアプリには表示されませんが、APK の一部として証明書に含まれます。",
        "フォームの入力が完了したら、OK をクリックします。",
        "",
        "アップロード鍵でアプリをビルドして署名する場合は、アップロード鍵でアプリに署名する方法についてのセクションにお進みください。鍵とキーストアのみを生成する場合は、Cancel をクリックします。",
        "[https://gyazo.com/b9432998b7772a239fb8e93de2f8746c]",
        ""
      ]
    },
    {
      "title": "署名する",
      "created": 1592543653,
      "updated": 1592543654,
      "id": "5eec49a1b56bd60023c16aa9",
      "lines": [
        "署名する",
        "[https://gyazo.com/63783f2be2c2ffb5ecae6541b46eabb5]",
        ""
      ]
    },
    {
      "title": "アップロード証明書を生成して登録する",
      "created": 1592545517,
      "updated": 1592552128,
      "id": "5eec50e633a93e0023c3acda",
      "lines": [
        "アップロード証明書を生成して登録する",
        ">keytool -export -rfc",
        ">       -keystore your-upload-keystore.jks",
        ">       -alias upload-alias",
        ">       -file output_upload_certificate.pem",
        ">     ",
        "",
        "",
        "keytool -export -rfc -keystore /Users/dev/my/app/setting/android/key2.jks -alias key1 -file output_upload_certificate.pem",
        "",
        ""
      ]
    },
    {
      "title": "アップロード鍵の紛失または不正使用",
      "created": 1592545795,
      "updated": 1592545868,
      "id": "5eec5201c6fac00020d443e7",
      "lines": [
        "アップロード鍵の紛失または不正使用",
        ">非公開のアップロード鍵を紛失した場合、または不正使用された場合は、新しい鍵を作成し、アカウントの所有者からサポートチームに鍵のリセットを依頼してください。サポートへご連絡の際、アカウントの所有者は upload_certificate.pem ファイルを添付してください。",
        "> ",
        "> サポートチームが新しいアップロード鍵を登録したら、メールでお知らせします。その後、キーストアを更新して API プロバイダに新しい鍵を登録できます。",
        "> ",
        "> 重要: アップロード鍵をリセットしても、ユーザーに配信する前に Google Play が APK の再署名に使用するアプリ署名鍵には影響はありません。",
        "[https://support.google.com/googleplay/android-developer/answer/7384423?hl=ja#reset Google Play アプリ署名を使用する - Play Console ヘルプ]",
        "",
        " >サポートへご連絡の際、アカウントの所有者は upload_certificate.pem ファイルを添付してください。",
        " の文言から、[アップロード鍵とキーストアを生成する]、[アップロード証明書を生成して登録する]の手順をする必要がある。",
        " ",
        ""
      ]
    },
    {
      "title": "フリーランスのお金の検討",
      "created": 1592749746,
      "updated": 1592815313,
      "id": "5eef6e8609086b00248f8ca4",
      "lines": [
        "フリーランスのお金の検討",
        "　控除",
        "　　>確定申告の際には、白色申告ではなく青色申告でおこなうことで最大65万円の控除をうけることができます。",
        "",
        "　経費",
        "　　スマートフォン",
        "　　電車賃",
        "",
        "　税金",
        "　　所得税",
        "　　 収入 - 経費 - (控除) = 所得",
        "　　 所得  * 税率 = 所得税",
        "　　 400万円 → 約37万円",
        "   500万円 → 約57万円",
        "   控除",
        "   　基礎控除 38万",
        "   　社会保険料 44万と仮定",
        "   　共済",
        "   　青色 65万",
        "　　住民税",
        "　　　19833  * 12 = 238000 (年収400と仮定)",
        "　　消費税",
        "　　　>基準期間および特定期間の課税売上高が1,000万円を超えていない場合は免税される",
        "　　個人事業税",
        "　　　準委任契約は対象にならない。請負なら対象になるかも？",
        "　社会保険",
        "　　国民年金保険料",
        "　　　16,410 * 12 = 196920 (固定)",
        "　　国民健康保険料",
        "　　　年収400で計算",
        "　　 22,709  * 12 = 272,519 [https://5kuho.com/keisan/city.php?pref=%E6%9D%B1%E4%BA%AC%E9%83%BD&city=%E6%9D%BF%E6%A9%8B%E5%8C%BA 板橋区の国民健康保険を自動計算しよう【令和2年度対応】任意継続との比較もできる！]",
        "   19,682 * 12 = 236,188 [http://www.kokuho-keisan.com/calc/calc.php?area=131199 板橋区の国民健康保険料を自動計算できる｜板橋区 国民健康保険計算機]",
        "　その他考慮すべき金銭的な何か",
        "　　退職金",
        "",
        "　総合すると、",
        "　収入 400",
        "　経費 0",
        "　所得税 40万",
        "　住民税 24万",
        "　消費税 0",
        "　個人事業税 0",
        "　年金 20万",
        "　健康保険 26万",
        "- - - - - - - - - - - - - - - - - - - -",
        " 400 - 110 = 290万",
        " 手取り7割ぐらい",
        "",
        "",
        "",
        "　前職のころ",
        "　　給料 22",
        "　　残業 3",
        "　　ボーナス 100万 (4ヶ月ちょい)",
        "　　住宅補助 4*12 = 50",
        "　　25*12 = 300 + 100 + 50 = 450",
        "",
        "　月40で受けた場合",
        "　　収入 480万",
        "　　所得控除 150万",
        "　　所得 330万(10%) ※ ギリギリの水準なので気をつける",
        "　　税額控除 0",
        "　　所得税 330 * 0.1 - 97500 - 0 = 23万円",
        "　　-----",
        " 　住民税 24万",
        " 　消費税 0",
        " 　個人事業税 0",
        " 　年金 20万",
        " 　健康保険 26万",
        " 　経費6万",
        " 　480 - 100 = 380 = 79%",
        ""
      ]
    },
    {
      "title": "準委任契約で定めるべき項目",
      "created": 1592787426,
      "updated": 1592787442,
      "id": "5ef001d85b6b640024c028f7",
      "lines": [
        "準委任契約で定めるべき項目",
        "[https://www.bengo4.com/c_5/c_1629/c_1728/b_431013/ 労働準委任型の業務委託契約書ひな形を探しています - 弁護士ドットコム]",
        "",
        "1.契約：準委任",
        "2.主たる作業場所：弊社オフィス他",
        "3.基準単価：5,000円（消費税別）",
        "4.精算条件：作業時間×基準単価",
        "5.休日：土・日曜日及び祝日",
        "6.交通費：基準単価に含む",
        "7.支払条件：月末締、翌月末日支払",
        "8.その他：月の稼働時間の上限を120時間とする。超える場合は別途協議する。",
        "",
        "文面が簡単なのであまり言えませんが、契約書に記載事項としては、",
        "①当事者発注者・受注者、②仕事の内容、③契約期間、④単価の設定方法、⑤受注金額、⑥支払い方法、⑦契約違反の処理方法、⑧解約条項、⑨裁判管轄などのように考えます。"
      ]
    },
    {
      "title": "実家に帰ったあとの生活について",
      "created": 1592821844,
      "updated": 1592906884,
      "id": "5ef0885234261400243816a4",
      "lines": [
        "実家に帰ったあとの生活について",
        "　9:00 - 18:00を定時と仮定する。",
        "　残業を1.5Hとする。",
        "　睡眠を8時間とする。",
        "",
        "table:生活リズム",
        " 4:00\t4:30\t起床\t",
        " 4:30\t8:00\t開発\t＋めし、風呂",
        "\t8:00\t9:00\t移動\t自転車で45分、電車で30 - 45分\t 15分前に会社に入る感じ",
        "\t9:00\t19:00\t仕事\t残業1H(8+1+1)",
        "\t19:00\t20:00\t移動\t自転車で45分、電車で30 - 45分",
        "\t20:00\t20:30\t就寝\tシャワー",
        "\t20:30\t4:00\t睡眠\t7.5H",
        "",
        " パターンとしては",
        " 　開発時間を三時間きっちり厳守する感じ。ここで全力を出す。ユンケル飲んでも良いし砂糖をガンガンに入れたコーヒーでブーストしてもよい",
        "　 睡眠時間は残業時間に左右される。残業なしなら8.5Hだし、月30(1.5/日)なら7時間",
        "",
        "　早朝3時間のみブーストする薬が欲しい",
        "",
        "　自転車で10キロなので、ここで45分で着きたいところ",
        "　　計測したところ、最速で35分なので、ちょい余裕見て40分、ちょいちんたら走ると50分",
        "　　朝は下りなので、車が少なく走りやすいと期待",
        "　東十条までは2キロ　10分ぐらい",
        "　家 - 東十条(10) - 駐輪場 - 駅 - 待ち() - 蕨駅(12) - 徒歩(8) 最低でも30分なので40分見るべき",
        "　日焼け止め対策",
        "",
        "　食事を多く取らねばならないこと",
        "　　自転車２時間弱で800カロリー消費",
        "　　基礎代謝1600カロリー",
        "　　これはcomp4杯(800カロリー)×3の水準",
        "　　　8000kal = 7000円",
        "　　　　800cal = 700円",
        "　　　1600kcalをcompで摂取して、残りを昼で摂取する。",
        "　　　食費が6万超える。。。",
        "　　compの飲み方について",
        "　　　粉末上のスムージーを入れるのが美味しいらしい、要検討",
        "　　　",
        "",
        "",
        "",
        "　睡眠時間短縮について",
        "　　ほっそと岡山で肉を食ったときは疲労回復が早かった。",
        "　　　肉 - ビタミンb1?",
        "　　脳の疲労を回復させる",
        "　　　食事",
        "　　　　イミダゾールペプチド",
        "　　　　　一日100gの鶏ムネ肉を2週間以上食べつづけることで、脳の疲労回復効果を得られる",
        "　　　　カルシウム、鉄",
        "　　　運動　　　",
        "　　　寝る前にスマホ、パソコンを見ない。見るにしてもフィルターをがっつりつける",
        "　　　寝る前に目を温める",
        "　　[* 結論]",
        "　　　銀の玉はないものとして、",
        "　　　食事、運動、睡眠を充分に取る",
        "　　　　食事",
        "　　　　　完全栄養食を中心にして必要なカロリーを摂取する。",
        "　　　　　マルチビタミンミネラルをサプリでとる",
        "　　　　運動",
        "　　　　　充分に運動する。",
        "　　　　　疲労回復のために何をすべきか考える",
        "　　　　睡眠",
        "　　　　　時間を増やせないので、質を上げる",
        "　　　　　　寝る前のブルーライトカット",
        "　　　　　　蒸気アイマスク",
        "　　　　　　他",
        ""
      ]
    },
    {
      "title": "人間ドック",
      "created": 1593166073,
      "updated": 1597109150,
      "id": "5ef5c8f29d4f80001f469245",
      "lines": [
        "人間ドック",
        "",
        "　　　父が東京に帰ってくる時",
        "　　　本番後の余裕がある時期",
        "　　　全身検査だといって騙す。",
        "　　 くも膜下出血の話聞いて怖くなったので健康診断する詳細なやつ",
        "　　　１０月の頭に秋元さんと共謀して申し込む",
        "　　　10月頭が直近で暇になるタイミングらしい",
        "",
        "[父の認知症の兆候]",
        ""
      ]
    },
    {
      "title": "Java",
      "created": 1593782560,
      "updated": 1593783105,
      "id": "5eff3116271a2d001e88cd66",
      "lines": [
        "Java",
        " ※ ここは目次ページ",
        "",
        " url",
        "  [http://localhost:8080/ localhost:8080]",
        "",
        "　springの環境構築",
        "　\t[https://qiita.com/rina-tanaka/items/5b0283431f80643e7161 IntelliJ で Spring Boot プロジェクトを作成する方法 - Qiita]",
        "　\t[https://qiita.com/aky100200/items/e76eece582d2248a2d0c (IntelliJ + gradle)Spring BootでHello Worldする - Qiita]",
        "",
        " 使ってみる",
        " 　[https://qiita.com/sugaryo/items/5695bfcc21365f429767#%E5%8F%96%E3%82%8A%E6%95%A2%E3%81%88%E3%81%9Astarterproject%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B%E7%B7%A8 SpringBootに入門する為の助走本（随時更新） - Qiita]",
        " 　",
        ""
      ]
    },
    {
      "title": "回線の改善",
      "created": 1593943135,
      "updated": 1595555531,
      "id": "5f01a45d6e58b6001ec22ce8",
      "lines": [
        "回線の改善",
        "　マンションの回線は電話回線なのでVDSL回線",
        "　この回線速度が遅いので改善したい。",
        "",
        "　方法",
        "　　VDSLから光回線に乗り換える。",
        "　　\tそのためには回線工事が必要なので、管理人に問い合わせる。",
        "　　\t\tこの方法はだめだった",
        "　　 VDSLのままどうにかする。",
        "　　 \tルーターの買い替え",
        "　　 \t\tどこの性能、規格に注目すればいいのか考える",
        "　　 \t\t変えたけど全く意味ない",
        "　　 \tipv6化",
        "　　 \t\tIPoE＋IPv4 over IPv6",
        "　　 \t\t対応",
        "　　 \t\t\tプロバイダー\t○　",
        "　　 \t\t\t[https://web116.jp/shop/hikari_r/rv_s340hi/rv_s340hi_00.html#_ga=2.115307015.1616500522.1593945366-1191189292.1593945366 モデム]\t\t○",
        "　　 \t\t\t\tパスワード\to   5MeW0vfdqw7",
        "　　 \t\t\tルーター\t○",
        "",
        "",
        " IPv4 over IPv6",
        "  IPv4通信も、IPv6 ネットワークの経路を通れるようにする技術",
        "  IPv4 over IPv6を利用するには、プロバイダーとルーターがIPv4 over IPv6に対応している必要があります",
        "",
        "",
        "",
        "59UZTjNBObko",
        "",
        "『Nマンション2B』ってのは、光NEXT マンションタイプ プラン2B",
        "のことなんだろうなと思われ。",
        "なんか怪しい『B』というBフレッツの亡霊みたいなのが末尾に付いてますが、これはマンション内に光ファイバーのコンセントを敷設しておらず、VDSLかLANケーブルで配線しているマンションに適用されるようだ。",
        "",
        "RVS340HI-26B63C-1",
        "RVS340HI-26B63C-2",
        "85703438",
        "",
        "[https://mypage.bizimo.ne.jp/login.php BiZiMo光　Member Page]",
        "bz19246839000@bfm.ipac.jp",
        "bz19246839",
        "wAAH2vmE",
        "",
        "フレッツ光ご利用者向けサービス",
        "[https://flets-east.jp/wso/ サービス申込受付ページ]",
        "　CAF1373590068",
        "　6UFCsJBd -> 2gQed9byz92p",
        " リー",
        "",
        " `bizimo",
        "　bz19246839",
        "　wAAH2vmE",
        "",
        " [http://192.168.1.1/ 接続先設定一覧(IPv4 PPPoE)]",
        " user",
        " o5MeW0vfdqw7",
        "",
        " ルーター",
        " [https://www.buffalo.jp/product/detail/wsr-1166dhpl2.html WSR-1166DHPL2 : Wi-Fiルーター : AirStation | バッファロー]",
        " http://192.168.11.1/index_adv.html&item=0",
        " \tadmin",
        " \tneysmaci",
        "",
        "",
        "",
        "----------------------",
        "ipv6対応プロバイダの選び方",
        "\t[http://www.kahemicafe.com/ipv4-over-ipv6-provider 遅いを解消！IPv4 over IPv6対応プロバイダ20選]",
        "gmoかso-netかな",
        "",
        "so-net",
        " 転用する",
        "　回線とプロバイタ 2080税別　2年",
        "　流れ",
        "　\t転用承諾番号 nttから番号もらう",
        "　\t\t今あるオプションも聞く",
        "　\tso-net にいう",
        "　\tそこから最短14日 14-15日ほど",
        "　\t切り替わるまではbizimo光",
        "　\t切り替わってから契約解除",
        "　\tso-net ipv6切り替え　電話",
        "",
        "[http://techlog.iij.ad.jp/archives/1879 てくろぐ: IIJmioひかりの混雑の理由とバイパス手段(IPoE・DS-Lite対応)]",
        "",
        "　　[https://www.soumu.go.jp/main_content/000388714.pdf <4D6963726F736F667420506F776572506F696E74202D20303520817988C482C682EA817A95CA93592088AB8EBF8AA9975582CC8EE88CFB8360838983568292342E707074205B8CDD8AB78382815B83685D>]",
        "",
        " 今は行けているけど、俺が在宅勤務始まったら、1人から2人になって混み合うし、父が帰って来たらさらに混み合う",
        "",
        "[http://www.speed-visualizer.jp/ Speed Test] フレッツ光",
        "",
        " DTIトライアル光",
        " 　EW59:G136",
        " 　後日、郵送にてご案内いたします。",
        "",
        "",
        "",
        "　光回線事業者",
        "　\tフレッツ光、nuro光",
        "　ISP",
        "　データの通信方法 ipv4 ipv6",
        "　光回線方式",
        "　 VDSL ADSL 光",
        "　インターネット接続方式",
        "　\tipoe pppoe",
        "　中継機器",
        "　\t家庭内",
        "　\tNTT",
        "　回線速度",
        "",
        "",
        "ipv6セキュリティ設定",
        "[https://gyazo.com/5ec75a94a963e9ab2bf4f5c8c440f803]",
        "",
        ""
      ]
    },
    {
      "title": "C/C++",
      "created": 1594004205,
      "updated": 1594972058,
      "id": "5f0292cad1a797002008932e",
      "lines": [
        "C/C++",
        " 参考",
        "　 [http://9cguide.appspot.com/index.html 苦しんで覚えるＣ言語 - 苦しんで覚えるC言語]",
        "　　[https://www.gesource.jp/programming/bcb/index.html C++ Builder Tips - Programming]",
        "",
        "　C 言語",
        "　　[プロトタイプ宣言]",
        "　　int ",
        "　　\tグローバル関数では実行時に初期化されるので、`int count`の場合、初期値は0だが、",
        "　　　ローカル内の場合は`int count = 0`にしないといけない。",
        "　　　、ローカルの場合は初期化されない",
        "",
        "　　static 静的なローカル変数",
        "　　\tstatic宣言されたローカル関数は関数が終わっても生き残り、次の同じ関数実行時には、前回の値が初期値となる",
        "　　\t[http://9cguide.appspot.com/12-03.html 関数内で生き残る変数 - 苦しんで覚えるC言語]",
        "",
        "　　ポインタ",
        "",
        " ファイル",
        " \tソースファイル",
        " \t\tソースが記載されたファイル",
        " \tオブジェクトファイル",
        " \t\tコンパイルされたファイル",
        " \tリンカ",
        " \t\tC++はリンクして使う",
        "",
        " C++",
        "  `count << \"aiueo\" << \"kakikukeko\"`は`print(\"aiueo\" + \"kakikukeko\")`と同じ",
        "  `using namespace std;`は`import std`みたいな感じ？",
        "  型計算",
        "  \tint 5 / int 4 は当然ながらint 1になる。",
        "  \tので、どっちかをdouble型にしてあげれば、大きなサイズのほうに型変換してから計算されて1.25になる。",
        "　　インライン関数",
        "　　\t小規模な関数を高速化してくれる",
        "　　関数オーバーロード",
        "　　\t型や引数が異なれば同じ名前の関数をつくることができる。",
        "　　\t関数内の処理が異なってもよい",
        "　　関数テンプレート",
        "\t\t\t関数内の処理手続きはまったく同じでなければならない。",
        "\t\t\t扱う型だけが異なる場合に使用する。",
        "\t\t code:c++",
        "\t\t  templete <class T>",
        "\t\t  T max(T x, T y)",
        "\t\t  {",
        "\t\t    if (x > y) {return x; else return y;}",
        "\t\t  }",
        "\t\t \tこの場合、`max(int x, int y)`なら`T`がint型になる",
        "\t\t 文字列を`\"\"`で初期化すると`null`になる",
        "  アロー演算子",
        "  \t`->`アロー演算子は`.`演算子のポインタ版？",
        "",
        "　　C++で理解できないところ",
        "　　\tポインタ回り全般",
        "　　\tstatic 312P",
        ""
      ]
    },
    {
      "title": "プロトタイプ宣言",
      "created": 1594004279,
      "updated": 1594017657,
      "id": "5f029336942e9d0021691257",
      "lines": [
        "プロトタイプ宣言",
        "C言語の場合、main関数の直前に関数を記述しなければならない。mainより後ろに書いてしまうと、main中で使用する関数が読み込めてない状態で実行されてエラーになる。",
        "",
        "よって、main関数より前に書くことになるが、プロトタイプ宣言して関数の概要だけ記述しておくとあとが楽になる。",
        "",
        "code:c",
        " #include <stdio.h>",
        " ",
        " int sum(void);\t/* プロトタイプ宣言 */",
        " ",
        " int main(void)",
        " {",
        " \treturn 0;",
        " }",
        " ",
        " int sum(void)",
        " {",
        " \tprintf(\"%d\\n\",(1 + 100) * 100 / 2);",
        " \treturn 0;",
        " }",
        " ",
        ""
      ]
    },
    {
      "title": "システムリンク - 目次 -",
      "created": 1594257543,
      "updated": 1594602134,
      "id": "5f0670847698ac002499e571",
      "lines": [
        "システムリンク - 目次 -",
        "[/anagaisyslink-03956991/目次]",
        "Hn68Ur5tgZJN",
        "",
        ""
      ]
    },
    {
      "title": "早朝に起きるための考察",
      "created": 1594262074,
      "updated": 1594677337,
      "id": "5f068238896f69001ebc3439",
      "lines": [
        "早朝に起きるための考察",
        "　朝起きられない考察",
        "　\t体が5時起床体制になっている。",
        "　\t\t光が足りない。",
        "　\t\t\t光目覚まし買う ★",
        "　\t\t\t\t210 - 195 = 15 で光目覚まし13.5なので入るはず",
        "　\t\t\tベットに入るか？ -> 入る",
        "　　栄養が足りていない。",
        "　　\t\tcomp2食体制を整える★",
        "\t\t運動が足りていない。",
        "\t\t\t1日2400kcal消費している。",
        "\t\t\t移動がなければ1800kcal弱だった",
        "\t\t\tよって、意外とカロリーは消費されている。★",
        "\t\t鉄分が足りていない。",
        "\t\t\tめちゃくちゃ足りている。★",
        "\t\t疲労が溜まっている。",
        "\t\t　comp2食体制を整える★",
        "\t\t夜中にトイレに起きている。",
        "\t\t\t水分を早朝に摂取することが大切。★",
        "\t\t気温湿度が適切でない。",
        "\t\t\t買う★",
        "",
        ""
      ]
    },
    {
      "title": "comp2食体制時の食費",
      "created": 1594262308,
      "updated": 1594262308,
      "id": "5f06832250ae51001e9e83fe",
      "lines": [
        "comp2食体制時の食費",
        "\t8000kcal = 6650円(2袋)",
        "\t\t\t800kcal = 665円",
        "\t\t\t2食で1330円",
        "\t\t\t月30日で4万円",
        "\t\t\t昼600円で2万",
        "\t\t\t合計6万"
      ]
    },
    {
      "title": "早朝に何をするか",
      "created": 1594262391,
      "updated": 1596452512,
      "id": "5f068375b22a19001e46b50e",
      "lines": [
        "早朝に何をするか",
        "　仕事をするが、その間にすること",
        "",
        "　食事　",
        "　\t水1リットル",
        "　\tサプリ",
        "　\tコーヒー",
        "　\tヨーグルト",
        "　\tcomp",
        "　　プロテイン",
        "　\t(養命酒、ユンケル)",
        "",
        " アプリ",
        " 　JR東日本アプリを確認",
        " 　天気を確認",
        " 　[雑多何でもメモ]を確認",
        "",
        "　ストレッチ",
        "　　舌回し",
        "　　腹筋",
        "　　ドローイング",
        "",
        "　他",
        "　\tシャワー、着替え、準備",
        "　　トイレ",
        "　　fitbit充電",
        "",
        ""
      ]
    },
    {
      "title": "電子マネー考察",
      "created": 1594326706,
      "updated": 1594326813,
      "id": "5f077ea722f564001e275eab",
      "lines": [
        "電子マネー考察",
        "東京スイカ戦術考える",
        "　　　ビックカメラSuicaカードを財布の一番下に埋めてそれを使う。",
        "　　　もしくはスイカ新規発行　記名式スイカ",
        "　　　でスイカで払う(1.5%)"
      ]
    },
    {
      "title": "ゆめみ返信 1年後にきます。",
      "created": 1594361588,
      "updated": 1594423160,
      "id": "5f0806f2bfbba90024076a04",
      "lines": [
        "ゆめみ返信 1年後にきます。",
        "文面考える。",
        "ゆめみ返信文面",
        "",
        "",
        "お世話になっております。",
        "永井です。",
        "",
        "返信が遅くなりましたが、カジュアル面談して頂きありがとうございます。",
        "SIer出身ですので、ツールを自由に選べるなど、ゆめみ社の合理的な仕事の仕方に大変驚きました。",
        "お時間を頂いたかわかつさんとy_shojiさんに感謝します。",
        "",
        "採用ページにも記載させて頂きましたが、採用面接に進むのがやはり1年後になりそうです。",
        "再度、東京で申し込むかもしれませんが、その時は宜しくお願いします。",
        "",
        "",
        ""
      ]
    },
    {
      "title": "カジュアルシャツの選び方",
      "created": 1594424419,
      "updated": 1594425635,
      "id": "5f08fc602543b0001e2a1c27",
      "lines": [
        "カジュアルシャツの選び方",
        "　要件",
        "　　ベーシックな白シャツが欲しい",
        "　　体格にジャストフィット",
        "　　カジュアル",
        "　　形状記憶だとよい",
        "　　細身",
        "",
        "",
        "",
        "",
        "　綿100",
        "　オックスフォード生地のボタンダウンシャツ",
        ""
      ]
    },
    {
      "title": "PC周りの配線について考える",
      "created": 1594438556,
      "updated": 1594438556,
      "id": "5f0933990d925b002158468b",
      "lines": [
        "PC周りの配線について考える",
        "",
        "　PC切り替え",
        "　　キーボード\tUSB",
        "　　マウス\t\tUSB",
        "　　スピーカー\tUSB",
        "",
        "",
        "　ゲーム切り替え",
        "　\tモニター",
        "",
        "　LANケーブル",
        "　　mac",
        "　　windows",
        "　 貸与PC",
        "　 ps4",
        "　 switch",
        "",
        "　シュチュエーション考察",
        "　\tUSB切り替え",
        "　　\tmac <-> windows <-> 貸与PC",
        "　　\t\t電源切る",
        "　　\t\t\tモニター自動切り替え",
        "　　\t\tusb切り替え器",
        "　　\t\t\t押す",
        "　　\t貸与PC使用中に、音楽、youtube見ながら使いたいがどうするか？",
        "   \tchromebookにスピーカーだけつなぎ替える",
        "　　モニター切り替え",
        "　　\tswitch,ps4",
        "  　\tmac電源切る、windowsスリープしてディスプレイ切り替わる",
        "  　\tディスプレイは一枚つかえればいい。",
        "  　\thdmi切替器が一つあればいい",
        "",
        "　ドッキングステーションで考察",
        "　\tPC側とつなげる規格",
        "　　有線ラン",
        " 　mac対応",
        "　　HDMI * 3",
        "　　\t4K対応",
        "　　USB \" 3",
        "　　\tキーボード、マウス、スピーカー",
        "",
        ""
      ]
    },
    {
      "title": "最適な就寝環境",
      "created": 1594604479,
      "updated": 1597109007,
      "id": "5f0bbbbc8ea9ab001ea3f0d9",
      "lines": [
        "最適な就寝環境",
        "　睡眠時の室温は冷房26度が適温、もう一度下げてもいいかも",
        "　仕事時は28度ぐらいが適温、もうちょい高くてもいいかも",
        "",
        "　気温",
        "  28",
        "  26度以下",
        "　　エアコンを使用するなら、夏の冷房なら「25～28℃」、",
        "　　冬の暖房なら「18～22℃」",
        "　湿度",
        "　\t50 - 60%",
        "",
        "　寝具なしで裸で眠る場合",
        "　　室温29 ℃、湿度50%前後",
        "",
        "　夏に寝具・パジャマ着用で眠る場合に最適な寝室の温湿度",
        "　　26℃、湿度は50~60%",
        "",
        "　寒いなら服着る",
        "　　足が布団からでると寒いので服着る",
        "",
        "寝具を変えてみる",
        "睡眠中に人は200mlほどの汗をかくといわれています。睡眠中の発汗と共に湿度が上昇し、その結果、蒸れてしまい睡眠の質も低下します。もし現在使っている、寝具（寝間着・パジャマ・シーツ・敷きパッド・防水シーツ・マットレスなど）の素材が、吸放湿性が低い、ボリエステルやアクリルといった化学繊維なら、大量の汗が吸水されずに、寝床内が蒸れて、「高温多湿」状態になってしまい、不快で眠れなくなります。そこで寝汗対策にすぐれた寝具を選ぶ必要があり",
        "",
        "　湿度",
        " 　70%から下がらない。",
        " 　＋２の設定にしてどこまで下がるか。",
        " 　5000円足して除湿機を買うか",
        ""
      ]
    },
    {
      "title": "レンタル音楽考察",
      "created": 1594605945,
      "updated": 1595244253,
      "id": "5f0bc176a7115a001f525ad5",
      "lines": [
        "レンタル音楽考察",
        "",
        "　音楽",
        "　　みゆはん",
        "　　佐咲さやか",
        "　　ふあな",
        "　　坂本真綾",
        "　　米津玄師",
        "　　aimer",
        "　　ヨルシカ",
        "　　ikire",
        "　　Chima",
        "",
        ""
      ]
    },
    {
      "title": "日常運用",
      "created": 1595047850,
      "updated": 1595561482,
      "id": "5f127f97f6e8a90021dfd322",
      "lines": [
        "日常運用",
        "　部屋を使いながら、色々考えていく",
        "",
        "　[母フラ対策]",
        "　マウス、intelij設定",
        "　ブルーライト眼鏡\t考える",
        "　部屋整理終わったら余ったものでりーちゃんの台をつくる",
        "　　余っている机上机でいいかも",
        "",
        "",
        ""
      ]
    },
    {
      "title": "完全栄養食考察",
      "created": 1595195514,
      "updated": 1595195560,
      "id": "5f14c0788210ae0020748559",
      "lines": [
        "完全栄養食考察",
        "　[comp戦略]",
        "　[完全栄養食]",
        "　[comp2食体制時の食費]",
        "",
        ""
      ]
    },
    {
      "title": "comp戦略",
      "created": 1595195527,
      "updated": 1595195528,
      "id": "5f14c085d377ed001edf09fa",
      "lines": [
        "comp戦略",
        "　　会社comp",
        "　\t\t家で作って持っていく",
        "　\t\tシェイクボトルのこぼれる対策。箱袋に入れる？",
        "　\t\t午後に飲んで、飲み終わったら洗って持ち帰る",
        "　\t\t　タオルが必要",
        "　\t\tCOMPのボトルは600ml",
        "　\t127円/450ML パイナップルジュース",
        "　\t\t42円/3回",
        "　\t\tスムージーと変わらない。一回40円",
        "　\t\tでかいの買えばもっと安い",
        "　\t\t 1000で181円なので、6回飲める。一回30円",
        ""
      ]
    },
    {
      "title": "母フラ対策",
      "created": 1595363479,
      "updated": 1595363482,
      "id": "5f1750954f142a001eded37c",
      "lines": [
        "母フラ対策",
        "　母フラ対策",
        "　　windowsスリープ設定の考察",
        "　　\tロック機能",
        "　　\tドッキングステーション切る",
        "　\t部屋のロック",
        "　\t　板設置 ->  必要な時だけでなく常態化させる"
      ]
    }
  ]
}